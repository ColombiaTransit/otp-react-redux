{"version":3,"sources":["create-otp-reducer.js"],"names":["defaultConfig","autoPlan","debouncePlanTimeMs","realtimeEffectsDisplayThreshold","operators","options","defaultQuery","home","work","trackRecent","recentPlaces","recentSearches","locations","filter","p","createOtpReducer","config","initialQuery","currentQuery","push","map","l","type","queryModes","mode","split","includes","m","concat","join","routingType","initialState","location","currentPosition","error","coords","fetching","sessionSearches","nearbyStops","user","searches","transitIndex","stops","trips","useRealtime","activeSearchId","overlay","bikeRental","stations","carRental","parkAndRide","transit","transitive","vehicleRental","zipcar","tnc","etaEstimates","rideEstimates","ui","mobileScreen","MobileScreens","WELCOME_SCREEN","printView","window","href","indexOf","diagramLeg","state","action","searchId","payload","activeItinerary","urlParams","length","ui_activeItinerary","$set","activeLeg","activeStep","pending","query","response","nonRealtimeResponse","index","console","log","$merge","localStorage","removeItem","defaults","setItem","locationIndex","findIndex","id","removeIndex","splice","$splice","duplicateIndex","lat","lon","locationsUpdate","firstIndex","lastIndex","forEach","i","$push","s","initLat","initLon","initZoom","zoom","elevationPoint","mapPopupLocation","position","$unshift","stopLookup","stopId","routes","mainPanelContent","viewedStop","viewedTrip","viewedRoute","tripId","stopTimes","geometry","currentRouteIds","newRoutes","key","reduce","res","routeId","patterns","patternId","from","fromData","estimates","estimate","company","productId","estimateTimestamp","Date","rideEstimate","to","rideType"],"mappings":"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","file":"create-otp-reducer.js","sourcesContent":["import clone from 'clone'\nimport update from 'immutability-helper'\nimport isEqual from 'lodash.isequal'\n\nimport {\n  ensureSingleAccessMode,\n  getDefaultQuery,\n  getJSONFromStorage,\n  getUrlParams\n} from '../util/query'\nimport { isTransit, getTransitModes } from '../util/itinerary'\nimport { filterProfileOptions } from '../util/profile'\nimport { MobileScreens } from '../actions/ui'\n\nconst defaultConfig = {\n  autoPlan: false,\n  debouncePlanTimeMs: 0,\n  realtimeEffectsDisplayThreshold: 120,\n  operators: []\n}\n\n// Load user override settings from local storage.\n// TODO: Make this work with settings fetched from user profile API service.\nconst options = getJSONFromStorage('otp.defaultQuery')\nconst defaultQuery = Object.assign(getDefaultQuery(), options)\nconst home = getJSONFromStorage('otp.home', true)\nconst work = getJSONFromStorage('otp.work', true)\nconst trackRecent = getJSONFromStorage('otp.trackRecent', true) || false\nconst recentPlaces = getJSONFromStorage('otp.recent', true) || []\nconst recentSearches = getJSONFromStorage('otp.recentSearches', true) || []\nconst locations = [home, work, ...recentPlaces].filter(p => p)\n// TODO: parse and merge URL query params w/ default query\n\n// TODO: fire planTrip action if default query is complete/error-free\n\nfunction createOtpReducer (config, initialQuery) {\n  // populate query by merging any provided query params w/ the default params\n  const currentQuery = Object.assign(defaultQuery, initialQuery)\n  if (config.locations) {\n    locations.push(...config.locations.map(l => ({ ...l, type: 'suggested' })))\n  }\n  let queryModes = currentQuery.mode.split(',')\n\n  // If 'TRANSIT' is included in the mode list, replace it with individual modes\n  if (queryModes.includes('TRANSIT')) {\n    // Isolate the non-transit modes in queryModes\n    queryModes = queryModes.filter(m => !isTransit(m))\n    // Add all possible transit modes\n    queryModes = queryModes.concat(getTransitModes(config))\n    // Stringify and set as OTP 'mode' query param\n    currentQuery.mode = queryModes.join(',')\n  }\n\n  // If we are in 'ITINERARY' mode, ensure that one and only one access mode is selected\n  if (currentQuery.routingType === 'ITINERARY') {\n    queryModes = ensureSingleAccessMode(queryModes)\n  }\n\n  const initialState = {\n    config: Object.assign(defaultConfig, config),\n    currentQuery,\n    location: {\n      currentPosition: {\n        error: null,\n        coords: null,\n        fetching: false\n      },\n      sessionSearches: [],\n      nearbyStops: []\n    },\n    user: {\n      trackRecent,\n      locations,\n      recentSearches\n    },\n    searches: {},\n    transitIndex: {\n      stops: {},\n      trips: {}\n    },\n    useRealtime: true,\n    activeSearchId: 0,\n    overlay: {\n      bikeRental: {\n        stations: []\n      },\n      carRental: {\n        stations: []\n      },\n      parkAndRide: {\n        // null default value indicates no request for P&R list has been made\n        locations: null\n      },\n      transit: {\n        stops: []\n      },\n      transitive: null,\n      vehicleRental: {\n        stations: []\n      },\n      zipcar: {\n        locations: []\n      }\n    },\n    tnc: {\n      etaEstimates: {},\n      rideEstimates: {}\n    },\n    ui: {\n      mobileScreen: MobileScreens.WELCOME_SCREEN,\n      printView: window.location.href.indexOf('/print/') !== -1,\n      diagramLeg: null\n    }\n  }\n\n  return (state = initialState, action) => {\n    const searchId = action.payload && action.payload.searchId\n    switch (action.type) {\n      case 'ROUTING_REQUEST':\n        // Compute the initial activeItinerary. If this is the first search of\n        // session (i.e. searches lookup is empty/null) AND an activeItinerary ID\n        // is specified in URL parameters, use that ID. Otherwise, use null/0\n        let activeItinerary = state.currentQuery.routingType === 'ITINERARY' ? 0 : null\n        // We cannot use window.history.state here to check for the active\n        // itinerary param because it is unreliable in some states (e.g.,\n        // when the print layout component first loads).\n        const urlParams = getUrlParams()\n        if (\n          (!state.searches || Object.keys(state.searches).length === 0) &&\n          urlParams.ui_activeItinerary\n        ) {\n          activeItinerary = +urlParams.ui_activeItinerary\n        }\n\n        return update(state, {\n          searches: {\n            [searchId]: {\n              $set: {\n                activeItinerary,\n                activeLeg: null,\n                activeStep: null,\n                pending: true,\n                query: clone(state.currentQuery),\n                response: null\n              }\n            }\n          },\n          activeSearchId: { $set: searchId }\n        })\n      case 'ROUTING_ERROR':\n        return update(state, {\n          searches: {\n            [searchId]: {\n              response: {\n                $set: {\n                  error: action.payload.error\n                }\n              },\n              pending: { $set: false }\n            }\n          }\n        })\n      case 'ROUTING_RESPONSE':\n        const response = (state.currentQuery.routingType === 'PROFILE')\n          ? filterProfileOptions(action.payload.response)\n          : action.payload.response\n\n        return update(state, {\n          searches: {\n            [searchId]: {\n              response: { $set: response },\n              pending: { $set: false }\n            }\n          },\n          ui: {\n            diagramLeg: { $set: false }\n          }\n        })\n      case 'NON_REALTIME_ROUTING_RESPONSE':\n        return update(state, {\n          searches: {\n            [searchId]: {\n              nonRealtimeResponse: { $set: action.payload.response }\n            }\n          }\n        })\n      case 'BIKE_RENTAL_REQUEST':\n        return update(state, {\n          overlay: {\n            bikeRental: {\n              pending: { $set: true },\n              error: { $set: null }\n            }\n          }\n        })\n      case 'BIKE_RENTAL_ERROR':\n        return update(state, {\n          overlay: {\n            bikeRental: {\n              pending: { $set: false },\n              error: { $set: action.payload }\n            }\n          }\n        })\n      case 'BIKE_RENTAL_RESPONSE':\n        return update(state, {\n          overlay: {\n            bikeRental: {\n              stations: { $set: action.payload.stations },\n              pending: { $set: false }\n            }\n          }\n        })\n      case 'CAR_RENTAL_ERROR':\n        return update(state, {\n          overlay: {\n            carRental: {\n              pending: { $set: false },\n              error: { $set: action.payload }\n            }\n          }\n        })\n      case 'CAR_RENTAL_RESPONSE':\n        return update(state, {\n          overlay: {\n            carRental: {\n              stations: { $set: action.payload.stations },\n              pending: { $set: false }\n            }\n          }\n        })\n      case 'VEHICLE_RENTAL_ERROR':\n        return update(state, {\n          overlay: {\n            vehicleRental: {\n              pending: { $set: false },\n              error: { $set: action.payload }\n            }\n          }\n        })\n      case 'VEHICLE_RENTAL_RESPONSE':\n        return update(state, {\n          overlay: {\n            vehicleRental: {\n              stations: { $set: action.payload.stations },\n              pending: { $set: false }\n            }\n          }\n        })\n      case 'SET_USE_REALTIME_RESPONSE':\n        return update(state, {\n          useRealtime: { $set: action.payload.useRealtime }\n        })\n      case 'SET_ACTIVE_ITINERARY':\n        if (state.activeSearchId !== null) {\n          return update(state, {\n            searches: {\n              [state.activeSearchId]: {\n                activeItinerary: { $set: action.payload.index },\n                activeLeg: { $set: null },\n                activeStep: { $set: null }\n              }\n            }\n          })\n        }\n        return state\n      case 'SET_ACTIVE_LEG':\n        if (state.activeSearchId !== null) {\n          return update(state, {\n            searches: {\n              [state.activeSearchId]: {\n                activeLeg: { $set: action.payload.index },\n                activeStep: { $set: null }\n              }\n            }\n          })\n        }\n        return state\n      case 'SET_ACTIVE_STEP':\n        if (state.activeSearchId !== null) {\n          return update(state, {\n            searches: {\n              [state.activeSearchId]: {\n                activeStep: { $set: action.payload.index }\n              }\n            }\n          })\n        }\n        return state\n      case 'SET_LOCATION':\n        return update(state, {\n          currentQuery: {\n            [action.payload.type]: { $set: action.payload.location }\n          }\n        })\n      case 'CLEAR_LOCATION':\n        return update(state, {\n          currentQuery: { [action.payload.type]: { $set: null } }\n        })\n\n      case 'SET_QUERY_PARAM':\n        console.log('merging QPs', action.payload)\n        return update(state, { currentQuery: { $merge: action.payload } })\n\n      case 'CLEAR_ACTIVE_SEARCH':\n        return update(state, { activeSearchId: { $set: null } })\n      case 'CLEAR_DEFAULT_SETTINGS':\n        window.localStorage.removeItem('otp.defaultQuery')\n        return update(state, { defaults: { $set: null } })\n      case 'STORE_DEFAULT_SETTINGS':\n        window.localStorage.setItem('otp.defaultQuery', JSON.stringify(action.payload))\n        return update(state, { defaults: { $set: action.payload } })\n      case 'FORGET_PLACE': {\n        const locations = clone(state.user.locations)\n        const locationIndex = locations.findIndex(l => l.id === action.payload)\n        if (action.payload.indexOf('recent') !== -1) {\n          // Remove recent from list of recent places\n          const recentPlaces = locations.filter(l => l.type === 'recent')\n          const removeIndex = recentPlaces.findIndex(l => l.id === action.payload)\n          recentPlaces.splice(removeIndex, 1)\n          window.localStorage.setItem(`otp.recent`, JSON.stringify(recentPlaces))\n        } else {\n          window.localStorage.removeItem(`otp.${action.payload}`)\n        }\n        return locationIndex !== -1\n          ? update(state, { user: { locations: { $splice: [[locationIndex, 1]] } } })\n          : state\n      }\n      case 'TOGGLE_TRACKING': {\n        window.localStorage.setItem('otp.trackRecent', JSON.stringify(action.payload))\n        let locations = clone(state.user.locations)\n        if (!action.payload) {\n          // If user disables tracking, remove recent searches and locations.\n          locations = locations.filter(l => l.type !== 'recent')\n          window.localStorage.removeItem(`otp.recent`)\n          window.localStorage.removeItem(`otp.recentSearches`)\n        }\n        return update(state, { user: {\n          trackRecent: { $set: action.payload },\n          locations: { $set: locations },\n          recentSearches: { $set: [] }\n        } })\n      }\n      case 'REMEMBER_PLACE': {\n        const { location, type } = action.payload\n        const locations = clone(state.user.locations)\n        const duplicateIndex = locations.findIndex(l => l.lat === location.lat && l.lon === location.lon)\n        let locationsUpdate\n        if (location.type === 'recent') {\n          let firstIndex = -1\n          let lastIndex = -1\n          locations.forEach((l, i) => {\n            if (l.type === 'recent') {\n              if (firstIndex === -1) firstIndex = i\n              else lastIndex = i\n            }\n          })\n          const recentPlaces = locations.filter(l => l.type === 'recent')\n          if (duplicateIndex !== -1) {\n            // If duplicate index found for a recent place, do not store recent\n            // place (no state change)\n            return state\n          }\n          // Only keep up to 5 recent locations\n          // FIXME: Check for duplicates\n          if (recentPlaces.length >= 5) {\n            recentPlaces.splice(lastIndex, 1, location)\n            locationsUpdate = { $splice: [[lastIndex, 1, location]] }\n          } else {\n            recentPlaces.push(location)\n            locationsUpdate = { $push: [location] }\n          }\n          window.localStorage.setItem(`otp.recent`, JSON.stringify(recentPlaces))\n        } else {\n          if (duplicateIndex !== -1) {\n            // If a duplicate place was found for a home/work location, that's\n            // not a problem\n          }\n          // Determine if location type already exists in list\n          const index = locations.findIndex(l => l.type === type)\n          if (index !== -1) {\n            locationsUpdate = { $splice: [[index, 1, location]] }\n          } else {\n            locationsUpdate = { $push: [location] }\n          }\n          window.localStorage.setItem(`otp.${type}`, JSON.stringify(location))\n        }\n        return update(state, { user: { locations: locationsUpdate } })\n      }\n      case 'REMEMBER_SEARCH':\n        const searches = clone(state.user.recentSearches)\n        const duplicateIndex = searches.findIndex(s => isEqual(s.query, action.payload.query))\n        // Do not store a duplicate search\n        if (duplicateIndex !== -1) {\n          return state\n        }\n        searches.push(action.payload)\n        window.localStorage.setItem(`otp.recentSearches`, JSON.stringify(searches))\n        return update(state, { user: { searches: { $set: searches } } })\n      case 'FORGET_SEARCH': {\n        const recentSearches = clone(state.user.recentSearches)\n        const index = recentSearches.findIndex(l => l.id === action.payload)\n        // Remove item from list of recent searches\n        recentSearches.splice(index, 1)\n        window.localStorage.setItem(`otp.recentSearches`, JSON.stringify(recentSearches))\n        return index !== -1\n          ? update(state, { user: { recentSearches: { $splice: [[index, 1]] } } })\n          : state\n      }\n      case 'SET_AUTOPLAN':\n        return update(state, {\n          config: { autoPlan: { $set: action.payload.autoPlan } }\n        })\n      case 'SET_MAP_CENTER':\n        return update(state, {\n          config: {\n            map: {\n              initLat: { $set: action.payload.lat },\n              initLon: { $set: action.payload.lon }\n            }\n          }\n        })\n      case 'SET_MAP_ZOOM':\n        return update(state, {\n          config: {\n            map: {\n              initZoom: { $set: action.payload.zoom }\n            }\n          }\n        })\n      case 'SHOW_LEG_DIAGRAM':\n        return update(state, {\n          ui: {\n            diagramLeg: { $set: action.payload }\n          }\n        })\n      case 'SET_ELEVATION_POINT':\n        return update(state, {\n          ui: {\n            elevationPoint: { $set: action.payload }\n          }\n        })\n      case 'SET_MAP_POPUP_LOCATION':\n        return update(state, {\n          ui: {\n            mapPopupLocation: { $set: action.payload.location }\n          }\n        })\n      case 'POSITION_FETCHING':\n        return update(state, {\n          location: {\n            currentPosition: { $merge: { fetching: action.payload.type } }\n          }\n        })\n      case 'POSITION_ERROR':\n        return update(state, {\n          location: { currentPosition: { $set: action.payload } }\n        })\n      case 'POSITION_RESPONSE':\n        return update(state, {\n          location: { currentPosition: { $set: action.payload.position } }\n        })\n      case 'ADD_LOCATION_SEARCH':\n        return update(state, {\n          location: { sessionSearches: { $unshift: [action.payload.location] } }\n        })\n\n      case 'NEARBY_STOPS_RESPONSE':\n        const stopLookup = {}\n        action.payload.stops.forEach(s => {\n          stopLookup[s.id] = s\n        })\n        return update(state, {\n          location: {\n            nearbyStops: { $set: action.payload.stops.map(s => s.id) }\n          },\n          transitIndex: { stops: { $merge: stopLookup } }\n        })\n      case 'STOPS_WITHIN_BBOX_RESPONSE':\n        return update(state, {\n          overlay: {\n            transit: {\n              stops: { $set: action.payload.stops },\n              pending: { $set: false }\n            }\n          }\n        })\n      case 'CLEAR_STOPS_OVERLAY':\n        return update(state, {\n          overlay: {\n            transit: {\n              stops: { $set: [] },\n              pending: { $set: false }\n            }\n          }\n        })\n      case 'ROUTES_AT_STOP_RESPONSE':\n        return update(state, {\n          transitIndex: {\n            stops: {\n              [action.payload.stopId]: {\n                routes: { $set: action.payload.routes }\n              }\n            }\n          }\n        })\n      case 'SET_MOBILE_SCREEN':\n        return update(state, { ui: { mobileScreen: { $set: action.payload } } })\n      case 'SET_MAIN_PANEL_CONTENT':\n        return update(state, {\n          ui: { mainPanelContent: { $set: action.payload } }\n        })\n      case 'SET_VIEWED_STOP':\n        return update(state, { ui: { viewedStop: { $set: action.payload } } })\n      case 'CLEAR_VIEWED_STOP':\n        return update(state, { ui: { viewedStop: { $set: null } } })\n\n      case 'SET_VIEWED_TRIP':\n        return update(state, { ui: { viewedTrip: { $set: action.payload } } })\n      case 'CLEAR_VIEWED_TRIP':\n        return update(state, { ui: { viewedTrip: { $set: null } } })\n\n      case 'SET_VIEWED_ROUTE':\n        return update(state, { ui: { viewedRoute: { $set: action.payload } } })\n\n      case 'FIND_STOP_RESPONSE':\n        return update(state, {\n          transitIndex: {\n            stops: { [action.payload.id]: { $set: action.payload } }\n          }\n        })\n      case 'FIND_TRIP_RESPONSE':\n        return update(state, {\n          transitIndex: {\n            trips: { [action.payload.id]: { $set: action.payload } }\n          }\n        })\n      case 'FIND_STOPS_FOR_TRIP_RESPONSE':\n        return update(state, {\n          transitIndex: {\n            trips: {\n              [action.payload.tripId]: { stops: { $set: action.payload.stops } }\n            }\n          }\n        })\n      case 'FIND_STOP_TIMES_FOR_TRIP_RESPONSE':\n        return update(state, {\n          transitIndex: {\n            trips: {\n              [action.payload.tripId]: {\n                stopTimes: { $set: action.payload.stopTimes }\n              }\n            }\n          }\n        })\n      case 'FIND_GEOMETRY_FOR_TRIP_RESPONSE':\n        return update(state, {\n          transitIndex: {\n            trips: {\n              [action.payload.tripId]: {\n                geometry: { $set: action.payload.geometry }\n              }\n            }\n          }\n        })\n      case 'FIND_STOP_TIMES_FOR_STOP_RESPONSE':\n        return update(state, {\n          transitIndex: {\n            stops: {\n              [action.payload.stopId]: {\n                stopTimes: { $set: action.payload.stopTimes }\n              }\n            }\n          }\n        })\n\n      case 'FIND_ROUTES_RESPONSE':\n        // If routes is undefined, initialize it w/ the full payload\n        if (!state.transitIndex.routes) {\n          return update(state, {\n            transitIndex: { routes: { $set: action.payload } }\n          })\n        }\n        // Otherwise, merge in only the routes not already defined\n        const currentRouteIds = Object.keys(state.transitIndex.routes)\n        const newRoutes = Object.keys(action.payload)\n          .filter(key => !currentRouteIds.includes(key))\n          .reduce((res, key) => Object.assign(res, { [key]: action.payload[key] }), {})\n        return update(state, {\n          transitIndex: { routes: { $merge: newRoutes } }\n        })\n\n      case 'FIND_ROUTE_RESPONSE':\n        // If routes is undefined, initialize it w/ this route only\n        if (!state.transitIndex.routes) {\n          return update(state, {\n            transitIndex: { routes: { $set: { [action.payload.id]: action.payload } } }\n          })\n        }\n        // Otherwise, overwrite only this route\n        return update(state, {\n          transitIndex: {\n            routes: { [action.payload.id]: { $set: action.payload } }\n          }\n        })\n\n      case 'FIND_PATTERNS_FOR_ROUTE_RESPONSE':\n        return update(state, {\n          transitIndex: {\n            routes: {\n              [action.payload.routeId]: {\n                patterns: { $set: action.payload.patterns }\n              }\n            }\n          }\n        })\n      case 'FIND_GEOMETRY_FOR_PATTERN_RESPONSE':\n        return update(state, {\n          transitIndex: {\n            routes: {\n              [action.payload.routeId]: {\n                patterns: {\n                  [action.payload.patternId]: {\n                    geometry: { $set: action.payload.geometry }\n                  }\n                }\n              }\n            }\n          }\n        })\n      case 'TNC_ETA_RESPONSE':\n        return update(state, {\n          tnc: {\n            etaEstimates: {\n              [action.payload.from]: fromData => {\n                fromData = Object.assign({}, fromData)\n                const estimates = action.payload.estimates || []\n                estimates.forEach(estimate => {\n                  if (!fromData[estimate.company]) {\n                    fromData[estimate.company] = {}\n                  }\n                  fromData[estimate.company][estimate.productId] = Object.assign(\n                    {\n                      estimateTimestamp: new Date()\n                    },\n                    estimate\n                  )\n                })\n                return fromData\n              }\n            }\n          }\n        })\n      case 'TNC_RIDE_RESPONSE':\n        return update(state, {\n          tnc: {\n            rideEstimates: {\n              [action.payload.from]: fromData => {\n                fromData = Object.assign({}, fromData)\n                const {company, rideEstimate, to} = action.payload\n                if (!rideEstimate) {\n                  return fromData\n                }\n                if (!fromData[to]) {\n                  fromData[to] = {}\n                }\n                if (!fromData[to][company]) {\n                  fromData[to][company] = {}\n                }\n                fromData[to][company][rideEstimate.rideType] = Object.assign(\n                  {\n                    estimateTimestamp: new Date()\n                  },\n                  rideEstimate\n                )\n                return fromData\n              }\n            }\n          }\n        })\n\n      case 'PARK_AND_RIDE_RESPONSE':\n        return update(state, {\n          overlay: {\n            parkAndRide: {\n              locations: { $set: action.payload },\n              pending: { $set: false }\n            }\n          }\n        })\n\n      // TODO: can this be broken out into a separate module?\n      case 'ZIPCAR_LOCATIONS_RESPONSE':\n        return update(state, {\n          overlay: {\n            zipcar: {\n              locations: { $set: action.payload.locations },\n              pending: { $set: false }\n            }\n          }\n        })\n      // case 'INITIALIZE_TRANSITIVE':\n      //   const transitive = new Transitive({\n      //     data: action.payload.transitiveData,\n      //     initialBounds: action.payload.bounds,\n      //     zoomEnabled: false,\n      //     autoResize: false,\n      //     styles: require('./transitive-styles'),\n      //     zoomFactors,\n      //     display: 'canvas',\n      //     canvas\n      //   })\n      //   return update(state, {\n      //     overlay: {\n      //       transitive: { $set: }\n      //     }\n      //   })\n      default:\n        return state\n    }\n  }\n}\n\nexport default createOtpReducer\n"]}