{"version":3,"sources":["zipcar.js"],"names":["zipcarLocationsQuery","fetch","require","receivedZipcarLocationsError","receivedZipcarLocationsResponse","requestZipcarLocationsResponse","dispatch","getState","otpState","otp","url","config","map","zipcarOverlay","api","json","response","status","error","Error"],"mappings":";;;;;;;;;;;;;;;QAOgBA,oB,GAAAA,oB;;AAPhB;;;;AACA,IAAI,OAAQC,KAAR,KAAmB,WAAvB,EAAoCC,QAAQ,kBAAR;;AAE7B,IAAMC,sEAA+B,gCAAa,wBAAb,CAArC;AACA,IAAMC,4EAAkC,gCAAa,2BAAb,CAAxC;AACA,IAAMC,0EAAiC,gCAAa,0BAAb,CAAvC;;AAEA,SAASL,oBAAT,GAAiC;AACtC;AAAA,wFAAO,iBAAgBM,QAAhB,EAA0BC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,sBADD,GACYD,WAAWE,GADvB;;;AAGLH,uBAASD,gCAAT;AACMK,iBAJD,GAIOF,SAASG,MAAT,CAAgBC,GAAhB,CAAoBC,aAApB,IAAqCL,SAASG,MAAT,CAAgBC,GAAhB,CAAoBC,aAApB,CAAkCC,GAJ9E;AAMDC,kBANC;AAAA;AAAA;AAAA,qBAQoBd,MAAMS,GAAN,CARpB;;AAAA;AAQGM,sBARH;;AAAA,oBASCA,SAASC,MAAT,IAAmB,GATpB;AAAA;AAAA;AAAA;;AAUKC,mBAVL,GAUa,IAAIC,KAAJ,CAAU,4BAAV,CAVb;;AAWDD,oBAAMF,QAAN,GAAiBA,QAAjB;AAXC,oBAYKE,KAZL;;AAAA;AAAA;AAAA,qBAcUF,SAASD,IAAT,EAdV;;AAAA;AAcHA,kBAdG;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,+CAgBIT,SAASH,yCAAT,CAhBJ;;AAAA;;AAmBLG,uBAASF,gCAAgCW,IAAhC,CAAT;;AAnBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAqBD","file":"zipcar.js","sourcesContent":["import { createAction } from 'redux-actions'\nif (typeof (fetch) === 'undefined') require('isomorphic-fetch')\n\nexport const receivedZipcarLocationsError = createAction('ZIPCAR_LOCATIONS_ERROR')\nexport const receivedZipcarLocationsResponse = createAction('ZIPCAR_LOCATIONS_RESPONSE')\nexport const requestZipcarLocationsResponse = createAction('ZIPCAR_LOCATIONS_REQUEST')\n\nexport function zipcarLocationsQuery () {\n  return async function (dispatch, getState) {\n    const otpState = getState().otp\n\n    dispatch(requestZipcarLocationsResponse())\n    const url = otpState.config.map.zipcarOverlay && otpState.config.map.zipcarOverlay.api\n\n    let json\n    try {\n      const response = await fetch(url)\n      if (response.status >= 400) {\n        const error = new Error('Received error from server')\n        error.response = response\n        throw error\n      }\n      json = await response.json()\n    } catch (err) {\n      return dispatch(receivedZipcarLocationsError(err))\n    }\n\n    dispatch(receivedZipcarLocationsResponse(json))\n  }\n}\n"]}