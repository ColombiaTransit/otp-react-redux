{"version":3,"sources":["zipcar.js"],"names":["zipcarLocationsQuery","fetch","require","receivedZipcarLocationsError","receivedZipcarLocationsResponse","requestZipcarLocationsResponse","url","dispatch","getState","json","response","status","error","Error"],"mappings":";;;;;;;;;;;;;;;QAOgBA,oB,GAAAA,oB;;AAPhB;;;;AACA,IAAI,OAAQC,KAAR,KAAmB,WAAvB,EAAoCC,QAAQ,kBAAR;;AAE7B,IAAMC,sEAA+B,gCAAa,wBAAb,CAArC;AACA,IAAMC,4EAAkC,gCAAa,2BAAb,CAAxC;AACA,IAAMC,0EAAiC,gCAAa,0BAAb,CAAvC;;AAEA,SAASL,oBAAT,CAA+BM,GAA/B,EAAoC;AACzC;AAAA,wFAAO,iBAAgBC,QAAhB,EAA0BC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AACLD,uBAASF,gCAAT;AACII,kBAFC;AAAA;AAAA;AAAA,qBAIoBR,MAAMK,GAAN,CAJpB;;AAAA;AAIGI,sBAJH;;AAAA,oBAKCA,SAASC,MAAT,IAAmB,GALpB;AAAA;AAAA;AAAA;;AAMKC,mBANL,GAMa,IAAIC,KAAJ,CAAU,4BAAV,CANb;;AAODD,oBAAMF,QAAN,GAAiBA,QAAjB;AAPC,oBAQKE,KARL;;AAAA;AAAA;AAAA,qBAUUF,SAASD,IAAT,EAVV;;AAAA;AAUHA,kBAVG;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,+CAYIF,SAASJ,yCAAT,CAZJ;;AAAA;;AAeLI,uBAASH,gCAAgCK,IAAhC,CAAT;;AAfK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAiBD","file":"zipcar.js","sourcesContent":["import { createAction } from 'redux-actions'\nif (typeof (fetch) === 'undefined') require('isomorphic-fetch')\n\nexport const receivedZipcarLocationsError = createAction('ZIPCAR_LOCATIONS_ERROR')\nexport const receivedZipcarLocationsResponse = createAction('ZIPCAR_LOCATIONS_RESPONSE')\nexport const requestZipcarLocationsResponse = createAction('ZIPCAR_LOCATIONS_REQUEST')\n\nexport function zipcarLocationsQuery (url) {\n  return async function (dispatch, getState) {\n    dispatch(requestZipcarLocationsResponse())\n    let json\n    try {\n      const response = await fetch(url)\n      if (response.status >= 400) {\n        const error = new Error('Received error from server')\n        error.response = response\n        throw error\n      }\n      json = await response.json()\n    } catch (err) {\n      return dispatch(receivedZipcarLocationsError(err))\n    }\n\n    dispatch(receivedZipcarLocationsResponse(json))\n  }\n}\n"]}