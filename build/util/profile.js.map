{"version":3,"sources":["profile.js"],"names":["filterProfileOptions","profileOptionsToItineraries","response","optStrs","filteredIndices","filteredProfile","otp","profile","filter","option","i","optStr","access","map","a","mode","join","transit","routes","route","id","indexOf","push","filteredJourneys","journeys","journey","options","query","optionToItinerary","itin","duration","time","legs","walkTime","waitingTime","length","status","walkOnEdges","bikeEdges","walkOffEdges","onStationName","walkOnTime","offStationName","walkOffTime","streetEdges","forEach","edge","bikeRentalOffStation","name","distance","bikeRentalOnStation","transitLeg","from","locationString","to","accessToLeg","fromName","toName","rideStats","avg","averageWait","waitStats","egress","origin","summary","modes","destination","str","defaultStr","split"],"mappings":"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","file":"profile.js","sourcesContent":["export function filterProfileOptions (response) {\n  // Filter out similar options. TODO: handle on server?\n  const optStrs = []\n  const filteredIndices = []\n\n  const filteredProfile = response.otp.profile.filter((option, i) => {\n    let optStr = option.access.map(a => a.mode).join('/')\n    if (option.transit) {\n      optStr += ' to ' + option.transit.map(transit => {\n        return transit.routes.map(route => route.id).join('/')\n      }).join(',')\n    }\n    if (optStrs.indexOf(optStr) !== -1) return false\n    optStrs.push(optStr)\n    filteredIndices.push(i)\n    return true\n  })\n\n  const filteredJourneys = response.otp.journeys.filter((journey, i) => filteredIndices.indexOf(i) !== -1)\n\n  response.otp.profile = filteredProfile\n  response.otp.journeys = filteredJourneys\n  return response\n}\n\n/** profileOptionsToItineraries **/\n\nexport function profileOptionsToItineraries (options, query) {\n  return options.map(option => optionToItinerary(option, query))\n}\n\n// helper functions for profileOptionsToItineraries:\n\nfunction optionToItinerary (option, query) {\n  const itin = {\n    duration: option.time,\n    legs: [],\n    walkTime: 0,\n    waitingTime: 0\n  }\n\n  // access leg\n  if (option.access && option.access.length > 0) {\n    if (option.access[0].mode === 'BICYCLE_RENT') {\n      let status = 'WALK_ON'\n      const walkOnEdges = []\n      const bikeEdges = []\n      const walkOffEdges = []\n      let onStationName\n      let walkOnTime = 0\n      let offStationName\n      let walkOffTime = 0\n      option.access[0].streetEdges.forEach(edge => {\n        // check if we're returning the bike\n        if (edge.bikeRentalOffStation) {\n          status = 'WALK_OFF'\n          offStationName = edge.bikeRentalOffStation.name\n        }\n\n        if (status === 'WALK_ON') {\n          walkOnEdges.push(edge)\n          walkOnTime += edge.distance\n        } else if (status === 'BIKE') {\n          bikeEdges.push(edge)\n        } else if (status === 'WALK_OFF') {\n          walkOffEdges.push(edge)\n          walkOffTime += edge.distance\n        }\n\n        // check if we're picking up the bike\n        if (edge.bikeRentalOnStation) {\n          status = 'BIKE'\n          onStationName = edge.bikeRentalOnStation.name\n        }\n      })\n\n      itin.walkTime += (walkOnTime + walkOffTime)\n\n      // create the 'on' walk leg\n      itin.legs.push({\n        mode: 'WALK',\n        duration: walkOnTime,\n        transitLeg: false,\n        from: {\n          name: locationString(query && query.from.name, 'Destination')\n        },\n        to: {\n          name: onStationName\n        }\n      })\n\n      // create the bike leg\n      itin.legs.push({\n        mode: 'BICYCLE_RENT',\n        duration: option.time - walkOnTime - walkOffTime,\n        transitLeg: false,\n        from: {\n          name: onStationName\n        },\n        to: {\n          name: offStationName\n        }\n      })\n\n      // create the 'off' walk leg\n      itin.legs.push({\n        mode: 'WALK',\n        duration: walkOffTime,\n        transitLeg: false,\n        from: {\n          name: offStationName\n        },\n        to: {\n          name: locationString(query && query.to.name, 'Destination')\n        }\n      })\n    } else {\n      itin.legs.push(accessToLeg(option.access[0], query && query.from.name, option.transit ? null : query && query.to.name))\n      if (option.access[0].mode === 'WALK') itin.walkTime += option.access[0].time\n    }\n  }\n\n  // transit legs\n  if (option.transit) {\n    option.transit.forEach(transit => {\n      itin.legs.push({\n        transitLeg: true,\n        mode: transit.mode,\n        from: {\n          name: transit.fromName\n        },\n        to: {\n          name: transit.toName\n        },\n        routes: transit.routes,\n        duration: transit.rideStats.avg,\n        averageWait: transit.waitStats.avg\n      })\n      itin.waitingTime += transit.waitStats.avg\n    })\n  }\n\n  // egress leg\n  if (option.egress && option.egress.length > 0) {\n    // find the origin name, for transit trips\n    const origin = option.transit ? option.transit[option.transit.length - 1].toName : null\n\n    itin.legs.push(accessToLeg(option.egress[0], origin, query && query.to.name))\n    if (option.egress[0].mode === 'WALK') itin.walkTime += option.egress[0].time\n  }\n\n  // construct summary\n  if (option.transit) {\n    itin.summary = 'Transit'\n  } else {\n    if (option.modes.length === 1 && option.modes[0] === 'bicycle') itin.summary = 'Bicycle'\n    else if (option.modes.length === 1 && option.modes[0] === 'walk') itin.summary = 'Walk'\n    else if (option.modes.indexOf('bicycle_rent') !== -1) itin.summary = 'Bikeshare'\n  }\n\n  return itin\n}\n\nfunction accessToLeg (access, origin, destination) {\n  return {\n    mode: access.mode,\n    duration: access.time,\n    transitLeg: false,\n    from: {\n      name: locationString(origin, 'Origin')\n    },\n    to: {\n      name: locationString(destination, 'Destination')\n    }\n  }\n}\n\nfunction locationString (str, defaultStr) {\n  return str ? str.split(',')[0] : defaultStr\n}\n"]}