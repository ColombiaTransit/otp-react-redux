{"version":3,"sources":["ui.js"],"names":["isMobile","enableScrollForSelector","test","navigator","userAgent","selector","_overlay","document","querySelector","_clientY","addEventListener","event","targetTouches","length","clientY","disableRubberBand","scrollTop","preventDefault","isOverlayTotallyScrolled","scrollHeight","clientHeight"],"mappings":";;;;;QAAgBA,Q,GAAAA,Q;QAWAC,uB,GAAAA,uB;AAXT,SAASD,QAAT,GAAqB;AAC1B;AACA,SAAO,kEAAiEE,IAAjE,CAAsEC,UAAUC,SAAhF;AAAP;AACD;;AAED;;;;;;AAMO,SAASH,uBAAT,CAAkCI,QAAlC,EAA4C;AACjD,MAAMC,WAAWC,SAASC,aAAT,CAAuBH,QAAvB,CAAjB;AACA,MAAII,WAAW,IAAf,CAFiD,CAE7B;;AAEpBH,WAASI,gBAAT,CAA0B,YAA1B,EAAwC,UAAUC,KAAV,EAAiB;AACvD,QAAIA,MAAMC,aAAN,CAAoBC,MAApB,KAA+B,CAAnC,EAAsC;AACpC;AACAJ,iBAAWE,MAAMC,aAAN,CAAoB,CAApB,EAAuBE,OAAlC;AACD;AACF,GALD,EAKG,KALH;;AAOAR,WAASI,gBAAT,CAA0B,WAA1B,EAAuC,UAAUC,KAAV,EAAiB;AACtD,QAAIA,MAAMC,aAAN,CAAoBC,MAApB,KAA+B,CAAnC,EAAsC;AACpC;AACAE,wBAAkBJ,KAAlB;AACD;AACF,GALD,EAKG,KALH;;AAOA,WAASI,iBAAT,CAA4BJ,KAA5B,EAAmC;AACjC,QAAMG,UAAUH,MAAMC,aAAN,CAAoB,CAApB,EAAuBE,OAAvB,GAAiCL,QAAjD;;AAEA,QAAIH,SAASU,SAAT,KAAuB,CAAvB,IAA4BF,UAAU,CAA1C,EAA6C;AAC3C;AACAH,YAAMM,cAAN;AACD;;AAED,QAAIC,8BAA8BJ,UAAU,CAA5C,EAA+C;AAC7C;AACAH,YAAMM,cAAN;AACD;AACF;;AAED,WAASC,wBAAT,GAAqC;AACnC;AACA,WAAOZ,SAASa,YAAT,GAAwBb,SAASU,SAAjC,IAA8CV,SAASc,YAA9D;AACD;AACF","file":"ui.js","sourcesContent":["export function isMobile () {\n  // TODO: consider using 3rd-party library?\n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)\n}\n\n/**\n * Enables scrolling for a specified selector, while disabling scrolling for all\n * other targets. This is adapted from https://stackoverflow.com/a/41601290/915811\n * and intended to fix issues with iOS elastic scrolling, e.g.,\n * https://github.com/conveyal/trimet-mod-otp/issues/92.\n */\nexport function enableScrollForSelector (selector) {\n  const _overlay = document.querySelector(selector)\n  let _clientY = null // remember Y position on touch start\n\n  _overlay.addEventListener('touchstart', function (event) {\n    if (event.targetTouches.length === 1) {\n      // detect single touch\n      _clientY = event.targetTouches[0].clientY\n    }\n  }, false)\n\n  _overlay.addEventListener('touchmove', function (event) {\n    if (event.targetTouches.length === 1) {\n      // detect single touch\n      disableRubberBand(event)\n    }\n  }, false)\n\n  function disableRubberBand (event) {\n    const clientY = event.targetTouches[0].clientY - _clientY\n\n    if (_overlay.scrollTop === 0 && clientY > 0) {\n      // element is at the top of its scroll\n      event.preventDefault()\n    }\n\n    if (isOverlayTotallyScrolled() && clientY < 0) {\n      // element is at the top of its scroll\n      event.preventDefault()\n    }\n  }\n\n  function isOverlayTotallyScrolled () {\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight#Problems_and_solutions\n    return _overlay.scrollHeight - _overlay.scrollTop <= _overlay.clientHeight\n  }\n}\n"]}