{"version":3,"sources":["settings-preview.js"],"names":["SettingsPreview","props","config","query","caret","editButtonText","showDot","coreUtils","isNotDefaultQuery","button","onClick","clear","Component","PropTypes","string","compressed","bool","element","showCaret","func","companies","modeGroups","array","queryModes","mapStateToProps","state","ownProps","otp","currentQuery","mapDispatchToProps"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,e;;;;;;;;;;;;;6BAmBM;AAAA,wBACyC,KAAKC,KAD9C;AAAA,UACAC,MADA,eACAA,MADA;AAAA,UACQC,KADR,eACQA,KADR;AAAA,UACeC,KADf,eACeA,KADf;AAAA,UACsBC,cADtB,eACsBA,cADtB,EAER;;AACA,UAAIC,OAAO,GAAGC,mBAAUJ,KAAV,CAAgBK,iBAAhB,CAAkCL,KAAlC,EAAyCD,MAAzC,CAAd;;AACA,UAAMO,MAAM,GACV;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,6BAAC,sBAAD;AAAQ,QAAA,OAAO,EAAE,KAAKR,KAAL,CAAWS;AAA5B,SACGL,cADH,EACmBD,KAAK,IAAI,gDAAO;AAAG,QAAA,SAAS,wBAAiBA,KAAjB;AAAZ,QAAP,CAD5B,CADF,EAIGE,OAAO,IAAI;AAAK,QAAA,SAAS,EAAC;AAAf,QAJd,CADF;;AASA,aACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAkC,QAAA,OAAO,EAAE,KAAKL,KAAL,CAAWS;AAAtD,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,4BAAwC,wCAAxC,kBADF,EAEGD,MAFH,EAGE;AAAK,QAAA,KAAK,EAAE;AAAEE,UAAAA,KAAK,EAAE;AAAT;AAAZ,QAHF,CADF;AAOD;;;;EAvC2BC,gB;;gBAAxBZ,e,eACe;AACjB;AACAI,EAAAA,KAAK,EAAES,mBAAUC,MAFA;AAGjBC,EAAAA,UAAU,EAAEF,mBAAUG,IAHL;AAIjBX,EAAAA,cAAc,EAAEQ,mBAAUI,OAJT;AAKjBC,EAAAA,SAAS,EAAEL,mBAAUG,IALJ;AAMjBN,EAAAA,OAAO,EAAEG,mBAAUM,IANF;AAQjB;AACAC,EAAAA,SAAS,EAAEP,mBAAUC,MATJ;AAUjBO,EAAAA,UAAU,EAAER,mBAAUS,KAVL;AAWjBC,EAAAA,UAAU,EAAEV,mBAAUS;AAXL,C;;gBADftB,e,kBAekB;AACpBK,EAAAA,cAAc,EAAE;AAAG,IAAA,SAAS,EAAC;AAAb;AADI,C;;AA2BxB,IAAMmB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,SAAO;AACLxB,IAAAA,MAAM,EAAEuB,KAAK,CAACE,GAAN,CAAUzB,MADb;AAELC,IAAAA,KAAK,EAAEsB,KAAK,CAACE,GAAN,CAAUC;AAFZ,GAAP;AAID,CALD;;AAOA,IAAMC,kBAAkB,GAAG,EAA3B;;eAEe,yBAAQL,eAAR,EAAyBK,kBAAzB,EAA6C7B,eAA7C,C","sourcesContent":["import coreUtils from '@opentripplanner/core-utils'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { Button } from 'react-bootstrap'\nimport { connect } from 'react-redux'\n\nclass SettingsPreview extends Component {\n  static propTypes = {\n    // component props\n    caret: PropTypes.string,\n    compressed: PropTypes.bool,\n    editButtonText: PropTypes.element,\n    showCaret: PropTypes.bool,\n    onClick: PropTypes.func,\n\n    // application state\n    companies: PropTypes.string,\n    modeGroups: PropTypes.array,\n    queryModes: PropTypes.array\n  }\n\n  static defaultProps = {\n    editButtonText: <i className='fa fa-pencil' />\n  }\n\n  render () {\n    const { config, query, caret, editButtonText } = this.props\n    // Show dot indicator if the current query differs from the default query.\n    let showDot = coreUtils.query.isNotDefaultQuery(query, config)\n    const button = (\n      <div className='button-container'>\n        <Button onClick={this.props.onClick}>\n          {editButtonText}{caret && <span> <i className={`fa fa-caret-${caret}`} /></span>}\n        </Button>\n        {showDot && <div className='dot' />}\n      </div>\n    )\n\n    return (\n      <div className='settings-preview' onClick={this.props.onClick}>\n        <div className='summary'>Transit Options<br />&amp; Preferences</div>\n        {button}\n        <div style={{ clear: 'both' }} />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    config: state.otp.config,\n    query: state.otp.currentQuery\n  }\n}\n\nconst mapDispatchToProps = { }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsPreview)\n"]}