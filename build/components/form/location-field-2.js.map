{"version":3,"sources":["location-field-2.js"],"names":["LocationField","props","text","console","warn","geocoderConfig","autocomplete","then","result","setState","geocodedFeatures","features","catch","err","error","type","clearLocation","value","ReactDOM","findDOMNode","formControl","focus","_onTextInputClick","v","e","targetIsInput","target","className","indexOf","_getFormControlClassname","menuVisible","state","relatedTarget","document","activeElement","location","getAttribute","evt","_geocodeAutocomplete","currentPosition","nearbyStops","onClick","length","coords","findNearbyStops","lat","latitude","lon","longitude","max","maxNearbyStops","activeIndex","key","preventDefault","menuItemCount","locationSelected","locationSelectedLookup","_geocodeSearch","getCurrentPosition","onLocationSelected","fetchingLocation","window","alert","host","message","hideExistingValue","name","prevProps","search","label","showClearButton","showUserSettings","isStatic","static","suppressNearby","userLocations","userRecentPlaces","locations","slice","sessionSearches","menuItems","itemIndex","concat","map","feature","i","getLocationFromGeocodedFeature","_setLocation","addLocationSearch","option","createOption","properties","push","stopId","stop","stopsIndex","createTransitStopOption","icon","optionIcon","optionTitle","_useCurrentLocation","_geolocationAlert","currentLocationOption","placeholder","fetching","textControl","ctl","_onTextInputChange","_onKeyDown","clearButton","_onClearButtonClick","width","_onBlurFormGroup","InputGroup","Button","_onDropdownToggle","Component","baseUrl","boundary","rect","minLon","maxLon","minLat","maxLat","payload","log","itemKey","title","onSelect","isActive","isLast","paddingTop","paddingBottom","float","marginLeft","overflow","textOverflow","whiteSpace","fontSize","dist","code","routes","route","shortName","longName","clear"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;AACA;;AACA;;AAQA;;AACA;;AAEA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAuCqBA,a;;;;;AAmCnB,yBAAaC,KAAb,EAA2B;AAAA;;AAAA;;AACzB,uFAAMA,KAAN;;AADyB,2EA0BJ,gCAAS,IAAT,EAAe,UAACC,IAAD,EAAU;AAC9C,UAAI,CAACA,IAAL,EAAW;AACTC,QAAAA,OAAO,CAACC,IAAR,CAAa,yDAAb;AACA;AACD;;AACD,6BAAY,MAAKH,KAAL,CAAWI,cAAvB,EACGC,YADH,CACgB;AAAEJ,QAAAA,IAAI,EAAJA;AAAF,OADhB,EAEGK,IAFH,CAEQ,UAACC,MAAD,EAAY;AAChB,cAAKC,QAAL,CAAc;AAAEC,UAAAA,gBAAgB,EAAEF,MAAM,CAACG;AAA3B,SAAd;AACD,OAJH,EAIKC,KAJL,CAIW,UAACC,GAAD,EAAS;AAChBV,QAAAA,OAAO,CAACW,KAAR,CAAcD,GAAd;AACD,OANH;AAOD,KAZsB,CA1BI;;AAAA,0EA+DL,YAAM;AAAA,UAClBE,IADkB,GACT,MAAKd,KADI,CAClBc,IADkB;;AAE1B,YAAKd,KAAL,CAAWe,aAAX,CAAyB;AAAED,QAAAA,IAAI,EAAJA;AAAF,OAAzB;;AACA,YAAKN,QAAL,CAAc;AACZQ,QAAAA,KAAK,EAAE,EADK;AAEZP,QAAAA,gBAAgB,EAAE;AAFN,OAAd;;AAIAQ,wBAASC,WAAT,CAAqB,MAAKC,WAA1B,EAAuCC,KAAvC;;AACA,YAAKC,iBAAL;AACD,KAxE0B;;AAAA,wEA0EP,UAACC,CAAD,EAASC,CAAT,EAAsD;AACxE;AACA,UAAMC,aAAa,GACjBD,CAAC,CAACE,MAAF,CAASC,SAAT,CAAmBC,OAAnB,CAA2B,MAAKC,wBAAL,EAA3B,MAAgE,CAAC,CADnE;AAEA,UAAMC,WAAW,GAAGL,aAAa,GAAG,IAAH,GAAU,CAAC,MAAKM,KAAL,CAAWD,WAAvD;;AACA,YAAKrB,QAAL,CAAc;AAAEqB,QAAAA,WAAW,EAAXA;AAAF,OAAd;AACD,KAhF0B;;AAAA,uEAsFR,UAACN,CAAD,EAA8C;AAC/D;AACA;AACA,UAAME,MAAM,GAAGF,CAAC,CAACQ,aAAF,KAAoB,IAApB,GAA2BR,CAAC,CAACQ,aAA7B,GAA6CC,QAAQ,CAACC,aAArE;;AACA,UAAI,CAAC,MAAKjC,KAAL,CAAWkC,QAAZ,KAAyB,CAACT,MAAD,IAAWA,MAAM,CAACU,YAAP,CAAoB,MAApB,MAAgC,UAApE,CAAJ,EAAqF;AACnF,cAAK3B,QAAL,CAAc;AAAEqB,UAAAA,WAAW,EAAE,KAAf;AAAsBb,UAAAA,KAAK,EAAE,EAA7B;AAAiCP,UAAAA,gBAAgB,EAAE;AAAnD,SAAd;AACD;AACF,KA7F0B;;AAAA,yEA+FN,UAAC2B,GAAD,EAAgD;AACnE,YAAK5B,QAAL,CAAc;AAAEQ,QAAAA,KAAK,EAAEoB,GAAG,CAACX,MAAJ,CAAWT,KAApB;AAA2Ba,QAAAA,WAAW,EAAE;AAAxC,OAAd;;AACA,YAAKQ,oBAAL,CAA0BD,GAAG,CAACX,MAAJ,CAAWT,KAArC;AACD,KAlG0B;;AAAA,wEAoGP,YAAM;AAAA,wBAC0C,MAAKhB,KAD/C;AAAA,UAChBsC,eADgB,eAChBA,eADgB;AAAA,UACClC,cADD,eACCA,cADD;AAAA,UACiBmC,WADjB,eACiBA,WADjB;AAAA,UAC8BC,OAD9B,eAC8BA,OAD9B;AAExB,UAAI,OAAOA,OAAP,KAAmB,UAAvB,EAAmCA,OAAO;;AAC1C,YAAKhC,QAAL,CAAc;AAAEqB,QAAAA,WAAW,EAAE;AAAf,OAAd;;AACA,UAAIU,WAAW,CAACE,MAAZ,KAAuB,CAAvB,IAA4BH,eAA5B,IAA+CA,eAAe,CAACI,MAAnE,EAA2E;AACzE,cAAK1C,KAAL,CAAW2C,eAAX,CAA2B;AACzBC,UAAAA,GAAG,EAAEN,eAAe,CAACI,MAAhB,CAAuBG,QADH;AAEzBC,UAAAA,GAAG,EAAER,eAAe,CAACI,MAAhB,CAAuBK,SAFH;AAGzBC,UAAAA,GAAG,EAAE5C,cAAc,CAAC6C,cAAf,IAAiC;AAHb,SAA3B;AAKD;AACF,KA/G0B;;AAAA,iEAiHd,UAACb,GAAD,EAAmD;AAAA,wBACzB,MAAKN,KADoB;AAAA,UACtDoB,WADsD,eACtDA,WADsD;AAAA,UACzCrB,WADyC,eACzCA,WADyC;;AAE9D,cAAQO,GAAG,CAACe,GAAZ;AACE;AACA,aAAK,WAAL;AACE;AACAf,UAAAA,GAAG,CAACgB,cAAJ;;AACA,cAAI,CAACvB,WAAL,EAAkB;AAChB;AACA,mBAAO,MAAKR,iBAAL,EAAP;AACD;;AACD,cAAI6B,WAAW,KAAK,MAAKG,aAAL,GAAqB,CAAzC,EAA4C;AAC1C,mBAAO,MAAK7C,QAAL,CAAc;AAAE0C,cAAAA,WAAW,EAAE;AAAf,aAAd,CAAP;AACD;;AACD,iBAAO,MAAK1C,QAAL,CAAc;AACnB0C,YAAAA,WAAW,EAAEA,WAAW,KAAK,IAAhB,GACT,CADS,GAETA,WAAW,GAAG;AAHC,WAAd,CAAP;AAMF;;AACA,aAAK,SAAL;AACE;AACAd,UAAAA,GAAG,CAACgB,cAAJ;;AACA,cAAIF,WAAW,KAAK,CAApB,EAAuB;AACrB,mBAAO,MAAK1C,QAAL,CAAc;AAAE0C,cAAAA,WAAW,EAAE;AAAf,aAAd,CAAP;AACD;;AACD,iBAAO,MAAK1C,QAAL,CAAc;AACnB0C,YAAAA,WAAW,EAAEA,WAAW,KAAK,IAAhB,GACT,MAAKG,aAAL,GAAqB,CADZ,GAETH,WAAW,GAAG;AAHC,WAAd,CAAP;AAMF;AACA;AACA;AACA;AACA;;AACA,aAAK,OAAL;AACE,cAAI,OAAOA,WAAP,KAAuB,QAA3B,EAAqC;AAAE;AACrC;AACA,gBAAMI,gBAAgB,GAAG,MAAKC,sBAAL,CAA4BL,WAA5B,CAAzB;AACA,gBAAII,gBAAJ,EAAsBA,gBAAgB,GAHH,CAKnC;;AACA,kBAAK9C,QAAL,CAAc;AACZqB,cAAAA,WAAW,EAAE,KADD;AAEZqB,cAAAA,WAAW,EAAE;AAFD,aAAd;AAID,WAVD,MAUO;AAAE;AACP,kBAAKM,cAAL,CAAoBpB,GAAG,CAACX,MAAJ,CAAWT,KAA/B,EADK,CAEL;;;AACA,kBAAKR,QAAL,CAAc;AAAEqB,cAAAA,WAAW,EAAE;AAAf,aAAd;AACD,WAfH,CAiBE;;;AACAO,UAAAA,GAAG,CAACgB,cAAJ;AACA;;AACF,aAAK,QAAL;AACE;AACA,iBAAO,MAAK5C,QAAL,CAAc;AACnBqB,YAAAA,WAAW,EAAE,KADM;AAEnBqB,YAAAA,WAAW,EAAE;AAFM,WAAd,CAAP;AAIF;;AACA;AACE,iBAAO,MAAK1C,QAAL,CAAc;AAAE0C,YAAAA,WAAW,EAAE;AAAf,WAAd,CAAP;AAhEJ;AAkED,KArL0B;;AAAA,0EA4LL,YAAM;AAAA,yBAMtB,MAAKlD,KANiB;AAAA,UAExBsC,eAFwB,gBAExBA,eAFwB;AAAA,UAGxBmB,kBAHwB,gBAGxBA,kBAHwB;AAAA,UAIxBC,kBAJwB,gBAIxBA,kBAJwB;AAAA,UAKxB5C,IALwB,gBAKxBA,IALwB;AAO1B,UAAMoB,QAAQ,GAAG,oCAA0BI,eAA1B,CAAjB;;AACA,UAAIJ,QAAJ,EAAc;AACZ;AACA;AACAwB,QAAAA,kBAAkB,CAAC;AAAE5C,UAAAA,IAAI,EAAJA,IAAF;AAAQoB,UAAAA,QAAQ,EAARA;AAAR,SAAD,CAAlB;AACD,OAJD,MAIO;AACL;AACA,cAAK1B,QAAL,CAAc;AAAEmD,UAAAA,gBAAgB,EAAE;AAApB,SAAd,EAFK,CAGL;;;AACAF,QAAAA,kBAAkB,CAAC3C,IAAD,EAAO4C,kBAAP,CAAlB;AACD;AACF,KA9M0B;;AAAA,wEAmNP,YAAM;AACxBE,MAAAA,MAAM,CAACC,KAAP,oDAC8CD,MAAM,CAAC1B,QAAP,CAAgB4B,IAD9D,8DACsH,MAAK9D,KAAL,CAAWsC,eAAX,CAA2BzB,KAA3B,CAAiCkD,OAAjC,IAA4C,gBADlK;AAGD,KAvN0B;;AAEzB,UAAKjC,KAAL,GAAa;AACXd,MAAAA,KAAK,EAAEhB,KAAK,CAACkC,QAAN,IAAkB,CAAClC,KAAK,CAACgE,iBAAzB,GACHhE,KAAK,CAACkC,QAAN,CAAe+B,IADZ,GAEH,EAHO;AAIXpC,MAAAA,WAAW,EAAE,KAJF;AAKXpB,MAAAA,gBAAgB,EAAE,EALP;AAMXyC,MAAAA,WAAW,EAAE;AANF,KAAb;AAFyB;AAU1B;;;;uCAEmBgB,S,EAAkB;AACpC;AACA;AACA;AACA;AAJoC,UAK5BhC,QAL4B,GAKf,KAAKlC,KALU,CAK5BkC,QAL4B;;AAMpC,UAAIA,QAAQ,KAAKgC,SAAS,CAAChC,QAA3B,EAAqC;AACnC,aAAK1B,QAAL,CAAc;AACZQ,UAAAA,KAAK,EAAEkB,QAAQ,KAAK,IAAb,GAAoBA,QAAQ,CAAC+B,IAA7B,GAAoC,EAD/B;AAEZxD,UAAAA,gBAAgB,EAAE;AAFN,SAAd;AAID;AACF;;;mCAgBeR,I,EAAc;AAAA;;AAC5B,UAAI,CAACA,IAAL,EAAW;AACTC,QAAAA,OAAO,CAACC,IAAR,CAAa,4CAAb;AACA;AACD;;AACD,6BAAY,KAAKH,KAAL,CAAWI,cAAvB,EACG+D,MADH,CACU;AAAElE,QAAAA,IAAI,EAAJA;AAAF,OADV,EAEGK,IAFH,CAEQ,UAACC,MAAD,EAAY;AAChB,YAAIA,MAAM,CAACG,QAAP,IAAmBH,MAAM,CAACG,QAAP,CAAgB+B,MAAhB,GAAyB,CAAhD,EAAmD;AACjD;AACA,UAAA,MAAI,CAACjC,QAAL,CAAc;AAAEC,YAAAA,gBAAgB,EAAEF,MAAM,CAACG;AAA3B,WAAd;AACD,SAHD,MAGO;AACLR,UAAAA,OAAO,CAACC,IAAR,CAAa,6DAAb;AACD;AACF,OATH,EASKQ,KATL,CASW,UAACC,GAAD,EAAS;AAChBV,QAAAA,OAAO,CAACW,KAAR,CAAcD,GAAd;AACD,OAXH;AAYD;;;+CAE2B;AAC1B,aAAO,KAAKZ,KAAL,CAAWc,IAAX,GAAkB,eAAzB;AACD;;;iCA0HaoB,Q,EAAU;AAAA,yBACe,KAAKlC,KADpB;AAAA,UACd0D,kBADc,gBACdA,kBADc;AAAA,UACM5C,IADN,gBACMA,IADN;AAEtB4C,MAAAA,kBAAkB,CAAC;AAAE5C,QAAAA,IAAI,EAAJA,IAAF;AAAQoB,QAAAA,QAAQ,EAARA;AAAR,OAAD,CAAlB;AACD;;;6BA+BS;AAAA;;AAAA,yBAcJ,KAAKlC,KAdD;AAAA,UAENsC,eAFM,gBAENA,eAFM;AAAA,UAGNlC,cAHM,gBAGNA,cAHM;AAAA,UAINgE,KAJM,gBAINA,KAJM;AAAA,UAKNlC,QALM,gBAKNA,QALM;AAAA,UAMNmC,eANM,gBAMNA,eANM;AAAA,UAONC,gBAPM,gBAONA,gBAPM;AAAA,UAQEC,QARF,gBAQNC,MARM;AAAA,UASNC,cATM,gBASNA,cATM;AAAA,UAUN3D,IAVM,gBAUNA,IAVM;AAAA,UAWN4D,aAXM,gBAWNA,aAXM;AAAA,UAYNC,gBAZM,gBAYNA,gBAZM;AAAA,UAaNpC,WAbM,gBAaNA,WAbM;AAeR,UAAMqC,SAAS,gCAAOF,aAAP,sBAAyBC,gBAAzB,EAAf;AAfQ,UAgBAzB,WAhBA,GAgBgB,KAAKpB,KAhBrB,CAgBAoB,WAhBA;AAiBR,UAAIzC,gBAAgB,GAAG,KAAKqB,KAAL,CAAWrB,gBAAlC;AACA,UAAIA,gBAAgB,CAACgC,MAAjB,GAA0B,CAA9B,EAAiChC,gBAAgB,GAAGA,gBAAgB,CAACoE,KAAjB,CAAuB,CAAvB,EAA0B,CAA1B,CAAnB;AAEjC,UAAIC,eAAe,GAAG,KAAK9E,KAAL,CAAW8E,eAAjC;AACA,UAAIA,eAAe,CAACrC,MAAhB,GAAyB,CAA7B,EAAgCqC,eAAe,GAAGA,eAAe,CAACD,KAAhB,CAAsB,CAAtB,EAAyB,CAAzB,CAAlB,CArBxB,CAuBR;AACA;AACA;;AAEA,UAAIE,SAAS,GAAG,EAAhB,CA3BQ,CA2BW;;AACnB,UAAIC,SAAS,GAAG,CAAhB,CA5BQ,CA4BU;;AAClB,WAAKzB,sBAAL,GAA8B,EAA9B,CA7BQ,CA6ByB;;AAEjC;;AACA,UAAI9C,gBAAgB,CAACgC,MAAjB,GAA0B,CAA9B,EAAiC;AAC/B;AACA;AAEA;AACAsC,QAAAA,SAAS,GAAGA,SAAS,CAACE,MAAV,CAAiBxE,gBAAgB,CAACyE,GAAjB,CAAqB,UAACC,OAAD,EAAUC,CAAV,EAAgB;AAChE;AACA,cAAM9B,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7B,mCAAYlD,cAAZ,EACGiF,8BADH,CACkCF,OADlC,EAEG7E,IAFH,CAEQ,UAAA4B,QAAQ,EAAI;AAChB;AACA,cAAA,MAAI,CAACoD,YAAL,CAAkBpD,QAAlB,EAFgB,CAGhB;;;AACA,cAAA,MAAI,CAAClC,KAAL,CAAWuF,iBAAX,CAA6B;AAAErD,gBAAAA,QAAQ,EAARA;AAAF,eAA7B;AACD,aAPH;AAQD,WATD,CAFgE,CAahE;;;AACA,UAAA,MAAI,CAACqB,sBAAL,CAA4ByB,SAA5B,IAAyC1B,gBAAzC,CAdgE,CAgBhE;;AACA,cAAMkC,MAAM,GAAGC,YAAY,CAAC,SAAD,EAAYN,OAAO,CAACO,UAAR,CAAmBtB,KAA/B,EAAsCd,gBAAtC,EAAwD0B,SAAS,KAAK9B,WAAtE,EAAmFkC,CAAC,KAAK3E,gBAAgB,CAACgC,MAAjB,GAA0B,CAAnH,CAA3B;AACAuC,UAAAA,SAAS;AACT,iBAAOQ,MAAP;AACD,SApB4B,CAAjB,CAAZ;AAqBD;AAED;;;AACA,UAAIjD,WAAW,CAACE,MAAZ,GAAqB,CAArB,IAA0B,CAACgC,cAA/B,EAA+C;AAC7C;AACAM,QAAAA,SAAS,CAACY,IAAV,CAAe,6BAAC,wBAAD;AAAU,UAAA,MAAM,MAAhB;AAAiB,UAAA,GAAG,EAAC;AAArB,0BAAf,EAF6C,CAI7C;;AACAZ,QAAAA,SAAS,GAAGA,SAAS,CAACE,MAAV,CAAiB1C,WAAW,CAAC2C,GAAZ,CAAgB,UAACU,MAAD,EAASR,CAAT,EAAe;AAC1D;AACA,cAAMS,IAAI,GAAG,MAAI,CAAC7F,KAAL,CAAW8F,UAAX,CAAsBF,MAAtB,CAAb;AACA,cAAM1D,QAAQ,GAAG;AACf+B,YAAAA,IAAI,EAAE4B,IAAI,CAAC5B,IADI;AAEfrB,YAAAA,GAAG,EAAEiD,IAAI,CAACjD,GAFK;AAGfE,YAAAA,GAAG,EAAE+C,IAAI,CAAC/C,GAHK,CAMjB;;AANiB,WAAjB;;AAOA,cAAMQ,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAAE,YAAA,MAAI,CAACgC,YAAL,CAAkBpD,QAAlB;AAA6B,WAA9D,CAV0D,CAY1D;;;AACA,UAAA,MAAI,CAACqB,sBAAL,CAA4ByB,SAA5B,IAAyC1B,gBAAzC,CAb0D,CAe1D;;AACA,cAAMkC,MAAM,GAAGO,uBAAuB,CAACF,IAAD,EAAOvC,gBAAP,EAAyB0B,SAAS,KAAK9B,WAAvC,EAAoDkC,CAAC,KAAK7C,WAAW,CAACE,MAAZ,GAAqB,CAA/E,CAAtC;AACAuC,UAAAA,SAAS;AACT,iBAAOQ,MAAP;AACD,SAnB4B,CAAjB,CAAZ;AAoBD;AAED;;;AACA,UAAIV,eAAe,CAACrC,MAAhB,GAAyB,CAA7B,EAAgC;AAC9B;AACAsC,QAAAA,SAAS,CAACY,IAAV,CAAe,6BAAC,wBAAD;AAAU,UAAA,MAAM,MAAhB;AAAiB,UAAA,GAAG,EAAC;AAArB,+BAAf,EAF8B,CAI9B;;AACAZ,QAAAA,SAAS,GAAGA,SAAS,CAACE,MAAV,CAAiBH,eAAe,CAACI,GAAhB,CAAoB,UAAChD,QAAD,EAAWkD,CAAX,EAAiB;AAChE;AACA,cAAM9B,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAAE,YAAA,MAAI,CAACgC,YAAL,CAAkBpD,QAAlB;AAA6B,WAA9D,CAFgE,CAIhE;;;AACA,UAAA,MAAI,CAACqB,sBAAL,CAA4ByB,SAA5B,IAAyC1B,gBAAzC,CALgE,CAOhE;;AACA,cAAMkC,MAAM,GAAGC,YAAY,CAAC,QAAD,EAAWvD,QAAQ,CAAC+B,IAApB,EAA0BX,gBAA1B,EAA4C0B,SAAS,KAAK9B,WAA1D,EAAuEkC,CAAC,KAAKN,eAAe,CAACrC,MAAhB,GAAyB,CAAtG,CAA3B;AACAuC,UAAAA,SAAS;AACT,iBAAOQ,MAAP;AACD,SAX4B,CAAjB,CAAZ;AAYD;AAED;;;AACA,UAAIZ,SAAS,CAACnC,MAAV,GAAmB,CAAnB,IAAwB6B,gBAA5B,EAA8C;AAC5C;AACAS,QAAAA,SAAS,CAACY,IAAV,CAAe,6BAAC,wBAAD;AAAU,UAAA,MAAM,MAAhB;AAAiB,UAAA,GAAG,EAAC;AAArB,uBAAf,EAF4C,CAI5C;;AACAZ,QAAAA,SAAS,GAAGA,SAAS,CAACE,MAAV,CAAiBL,SAAS,CAACM,GAAV,CAAc,UAAChD,QAAD,EAAWkD,CAAX,EAAiB;AAC1D;AACA,cAAM9B,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAAE,YAAA,MAAI,CAACgC,YAAL,CAAkBpD,QAAlB;AAA6B,WAA9D,CAF0D,CAI1D;;;AACA,UAAA,MAAI,CAACqB,sBAAL,CAA4ByB,SAA5B,IAAyC1B,gBAAzC,CAL0D,CAO1D;;AACA,cAAMkC,MAAM,GAAGC,YAAY,CACzBvD,QAAQ,CAAC8D,IADgB,EAEzB,gCAAsB9D,QAAtB,CAFyB,EAGzBoB,gBAHyB,EAIzB0B,SAAS,KAAK9B,WAJW,EAKzBkC,CAAC,KAAKR,SAAS,CAACnC,MAAV,GAAmB,CALA,CAA3B;AAOAuC,UAAAA,SAAS;AACT,iBAAOQ,MAAP;AACD,SAjB4B,CAAjB,CAAZ;AAkBD;AAED;;;AACA,UAAIlC,gBAAJ,EAAsB2C,UAAtB,EAAkCC,WAAlC;;AAEA,UAAI,CAAC5D,eAAe,CAACzB,KAArB,EAA4B;AAAE;AAC5ByC,QAAAA,gBAAgB,GAAG,KAAK6C,mBAAxB;AACAF,QAAAA,UAAU,GAAG,gBAAb;AACAC,QAAAA,WAAW,GAAG,sBAAd;AACD,OAJD,MAIO;AAAE;AACP5C,QAAAA,gBAAgB,GAAG,KAAK8C,iBAAxB;AACAH,QAAAA,UAAU,GAAG,KAAb;AACAC,QAAAA,WAAW,GAAG,gCAAd;AACD,OAjJO,CAmJR;;;AACA,WAAK3C,sBAAL,CAA4ByB,SAA5B,IAAyC1B,gBAAzC;;AAEA,UAAI,CAACmB,cAAL,EAAqB;AACnB;AACA,YAAM4B,qBAAqB,GAAGZ,YAAY,CACxCQ,UADwC,EAExCC,WAFwC,EAGxC5C,gBAHwC,EAIxC0B,SAAS,KAAK9B,WAJ0B,CAA1C;AAMA6B,QAAAA,SAAS,CAACY,IAAV,CAAeU,qBAAf;AACArB,QAAAA,SAAS;AACV,OAhKO,CAkKR;;;AACA,WAAK3B,aAAL,GAAqB2B,SAArB;AAEA;;AACA,UAAMsB,WAAW,GAAGhE,eAAe,CAACiE,QAAhB,KAA6BzF,IAA7B,GAChB,sBADgB,GAEhBsD,KAAK,IAAItD,IAFb;;AAGA,UAAM0F,WAAW,GAAG,6BAAC,2BAAD;AAClB,QAAA,GAAG,EAAE,aAAAC,GAAG,EAAI;AAAE,UAAA,MAAI,CAACtF,WAAL,GAAmBsF,GAAnB;AAAwB,SADpB;AAElB,QAAA,SAAS,EAAE,KAAK7E,wBAAL,EAFO;AAGlB,QAAA,IAAI,EAAC,MAHa;AAIlB,QAAA,KAAK,EAAE,KAAKE,KAAL,CAAWd,KAJA;AAKlB,QAAA,WAAW,EAAEsF,WALK;AAMlB,QAAA,QAAQ,EAAE,KAAKI,kBANG;AAOlB,QAAA,OAAO,EAAE,KAAKrF,iBAPI;AAQlB,QAAA,SAAS,EAAE,KAAKsF;AARE,QAApB,CAzKQ,CAoLR;AACA;;;AACA,UAAMC,WAAW,GAAGvC,eAAe,IAAInC,QAAnB,GAChB,6BAAC,0BAAD,CAAY,KAAZ,QACA,6BAAC,sBAAD;AACE,QAAA,OAAO,EAAC,MADV;AAEE,QAAA,SAAS,EAAC,cAFZ;AAGE,QAAA,OAAO,EAAE,KAAK2E;AAHhB,SAIE;AAAG,QAAA,SAAS,EAAC;AAAb,QAJF,CADA,CADgB,GAShB,IATJ;;AAUA,UAAItC,QAAJ,EAAc;AACZ;AACA,eACE;AACE,UAAA,SAAS,EAAC;AADZ,WAEE,2CACE,6BAAC,yBAAD,QACE,6BAAC,0BAAD,QACE,6BAAC,0BAAD,CAAY,KAAZ,QACE,6BAAC,YAAD;AAAc,UAAA,IAAI,EAAEzD,IAApB;AAA0B,UAAA,KAAK,EAAE;AAAjC,UADF,CADF,EAIG0F,WAJH,EAKGI,WALH,CADF,CADF,CAFF,EAaE;AAAI,UAAA,SAAS,EAAC,eAAd;AAA8B,UAAA,KAAK,EAAE;AAAEE,YAAAA,KAAK,EAAE;AAAT;AAArC,WACG/B,SAAS,CAACtC,MAAV,GAAmB,CAAnB,CAAqB;AAArB,UACGsC,SADH,GAEG,6BAAC,wBAAD;AAAU,UAAA,MAAM,MAAhB;AAAiB,UAAA,SAAS,EAAE;AAA5B,kDAHN,CAbF,CADF;AAwBD,OA1BD,MA0BO;AACL;AACA,eACE,2CACE,6BAAC,yBAAD;AACE,UAAA,MAAM,EAAE,KAAKgC,gBADf;AAEE,UAAA,SAAS,EAAC;AAFZ,WAGE,6BAAC,0BAAD,QAEE,6BAAC,8BAAD;AACE,UAAA,cAAc,EAAEC,2BAAWC,MAD7B;AAEE,UAAA,IAAI,EAAE,KAAKnF,KAAL,CAAWD,WAFnB;AAGE,UAAA,QAAQ,EAAE,KAAKqF,iBAHjB;AAIE,UAAA,EAAE,EAAC,mBAJL;AAKE,UAAA,KAAK,EAAE,6BAAC,YAAD;AAAc,YAAA,IAAI,EAAEpG;AAApB,YALT;AAME,UAAA,OAAO;AANT,WAQGiE,SARH,CAFF,EAYGyB,WAZH,EAaGI,WAbH,CAHF,CADF,CADF;AAuBD;AACF;;;;EAhfwCO,gB,GAmf3C;;;;;gBAnfqBpH,a,kBACG;AACpBwF,EAAAA,iBAAiB,EAAE,6BAAM,CAAE,CADP;AAEpBxE,EAAAA,aAAa,EAAE,yBAAM,CAAE,CAFH;AAGpBuB,EAAAA,eAAe,EAAE;AACfI,IAAAA,MAAM,EAAE,IADO;AAEf7B,IAAAA,KAAK,EAAE,IAFQ;AAGf0F,IAAAA,QAAQ,EAAE;AAHK,GAHG;AAQpB5D,EAAAA,eAAe,EAAE,2BAAM,CAAE,CARL;AASpBvC,EAAAA,cAAc,EAAE;AACdgH,IAAAA,OAAO,EAAE,oCADK;AACiC;AAC/CC,IAAAA,QAAQ,EAAE;AAAE;AACVC,MAAAA,IAAI,EAAE;AACJC,QAAAA,MAAM,EAAE,CAAC,QADL;AAEJC,QAAAA,MAAM,EAAE,CAAC,OAFL;AAGJC,QAAAA,MAAM,EAAE,MAHJ;AAIJC,QAAAA,MAAM,EAAE;AAJJ;AADE,KAFI;AAUdzE,IAAAA,cAAc,EAAE,CAVF;AAWdnC,IAAAA,IAAI,EAAE;AAXQ,GATI;AAsBpB2C,EAAAA,kBAAkB,EAAE,8BAAM,CAAE,CAtBR;AAuBpBvB,EAAAA,QAAQ,EAAE,IAvBU;AAwBpBK,EAAAA,WAAW,EAAE,EAxBO;AAyBpBmB,EAAAA,kBAAkB,EAAE,4BAACiE,OAAD;AAAA,WAAazH,OAAO,CAAC0H,GAAR,CAAY,mBAAZ,EAAiCD,OAAjC,CAAb;AAAA,GAzBA;AA0BpB7C,EAAAA,eAAe,EAAE,EA1BG;AA2BpBT,EAAAA,eAAe,EAAE,IA3BG;AA4BpBC,EAAAA,gBAAgB,EAAE,KA5BE;AA6BpBwB,EAAAA,UAAU,EAAE,IA7BQ;AA8BpBpB,EAAAA,aAAa,EAAE,EA9BK;AA+BpBC,EAAAA,gBAAgB,EAAE;AA/BE,C;;AAofxB,IAAIkD,OAAO,GAAG,CAAd;;AAEA,SAASpC,YAAT,CAAuBO,IAAvB,EAA6B8B,KAA7B,EAAoCC,QAApC,EAA8CC,QAA9C,EAAwDC,MAAxD,EAAgE;AAC9D,SAAO,6BAAC,wBAAD;AACL,IAAA,SAAS,2BAAoBA,MAAM,GAAG,cAAH,GAAoB,EAA9C,CADJ;AAEL,IAAA,QAAQ,EAAEF,QAFL,CAGL;AAHK;AAIL,IAAA,GAAG,EAAEF,OAAO,EAJP;AAKL,IAAA,MAAM,EAAEG;AALH,KAMJ,gBACC;AACA;AACA;AACA;AACA;AALD,IAMGF,KANH,GAQG;AAAK,IAAA,KAAK,EAAE;AAAEI,MAAAA,UAAU,EAAE,KAAd;AAAqBC,MAAAA,aAAa,EAAE;AAApC;AAAZ,KACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT;AAAZ,KAA+B;AAAG,IAAA,SAAS,kBAAWpC,IAAX;AAAZ,IAA/B,CADF,EAEE;AAAK,IAAA,KAAK,EAAE;AACVqC,MAAAA,UAAU,EAAE,MADF;AAEVC,MAAAA,QAAQ,EAAE,QAFA;AAGVC,MAAAA,YAAY,EAAE,UAHJ;AAIVC,MAAAA,UAAU,EAAE;AAJF;AAAZ,KAMGV,KANH,CAFF,CAdC,CAAP;AA4BD;;AAED,SAAS/B,uBAAT,CAAkCF,IAAlC,EAAwCkC,QAAxC,EAAkDC,QAAlD,EAA4D;AAC1D,SAAO,6BAAC,wBAAD;AAAU,IAAA,SAAS,EAAC,iBAApB;AAAsC,IAAA,QAAQ,EAAED,QAAhD;AAA0D,IAAA,GAAG,EAAEF,OAAO,EAAtE;AAA0E,IAAA,MAAM,EAAEG;AAAlF,KACL,0CACE;AAAK,IAAA,KAAK,EAAE;AAAEI,MAAAA,KAAK,EAAE,MAAT;AAAiBF,MAAAA,UAAU,EAAE;AAA7B;AAAZ,KACE;AAAG,IAAA,SAAS,EAAC,WAAb;AAAyB,IAAA,KAAK,EAAE;AAAEO,MAAAA,QAAQ,EAAE;AAAZ;AAAhC,IADF,EAEE;AAAK,IAAA,KAAK,EAAE;AAAEA,MAAAA,QAAQ,EAAE;AAAZ;AAAZ,KAAkC,sCAAuB5C,IAAI,CAAC6C,IAA5B,EAAkC,IAAlC,CAAlC,CAFF,CADF,EAKE;AAAK,IAAA,KAAK,EAAE;AAAEL,MAAAA,UAAU,EAAE;AAAd;AAAZ,KACE,0CAAMxC,IAAI,CAAC5B,IAAX,QAAmB4B,IAAI,CAAC8C,IAAxB,MADF,EAEE;AAAK,IAAA,KAAK,EAAE;AAAEF,MAAAA,QAAQ,EAAE;AAAZ;AAAZ,KACG,CAAC5C,IAAI,CAAC+C,MAAL,IAAe,EAAhB,EAAoB1D,GAApB,CAAwB,UAAC2D,KAAD,EAAQzD,CAAR,EAAc;AACrC,QAAMnB,IAAI,GAAG4E,KAAK,CAACC,SAAN,IAAmBD,KAAK,CAACE,QAAtC;AACA,WACE;AAAM,MAAA,GAAG,kBAAW3D,CAAX,CAAT;AAAyB,MAAA,SAAS,EAAC;AAAnC,OACGnB,IADH,CADF;AAKD,GAPA,CADH,CAFF,CALF,EAkBE;AAAK,IAAA,KAAK,EAAE;AAAE+E,MAAAA,KAAK,EAAE;AAAT;AAAZ,IAlBF,CADK,CAAP;AAsBD","sourcesContent":["// @flow\n\nimport React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\nimport {\n  Button,\n  FormGroup,\n  FormControl,\n  InputGroup,\n  DropdownButton,\n  MenuItem\n} from 'react-bootstrap'\nimport LocationIcon from 'root/packages/location-icon/lib'\nimport { throttle } from 'throttle-debounce'\n\nimport { distanceStringImperial } from '../../util/distance'\nimport getGeocoder from '../../util/geocoder'\nimport { currentPositionToLocation, formatStoredPlaceName } from '../../util/map'\nimport { isIE } from '../../util/ui'\n\ntype Props = {\n  addLocationSearch: any, // connected action from redux\n  clearLocation: any, // connected action from redux\n  currentPosition: any, // from redux\n  findNearbyStops: any, // connected action from redux\n  geocoderConfig: {\n    baseUrl?: string,\n    boundary?: any,\n    maxNearbyStops?: number,\n    type: string\n  },\n  getCurrentPosition: any, // connected action from redux\n  hideExistingValue: any,\n  label: any,\n  location: any, // from redux\n  nearbyStops: any, // from redux\n  onClick: any,\n  onLocationSelected: ({type: string, location: any}) => any,\n  sessionSearches: any, // from redux\n  showClearButton: any,\n  showUserSettings: any, // from redux\n  static: any,\n  stopsIndex: any, // from redux\n  suppressNearby: any,\n  type: 'from' | 'to',\n  userLocations: [], // refactored out from redux `user` prop\n  userRecentPlaces: [] // refactored out from redux `user` prop\n}\n\ntype State = {\n  activeIndex: any,\n  fetchingLocation?: boolean,\n  geocodedFeatures: any,\n  menuVisible: any,\n  value: any\n}\n\nexport default class LocationField extends Component<Props, State> {\n  static defaultProps = {\n    addLocationSearch: () => {},\n    clearLocation: () => {},\n    currentPosition: {\n      coords: null,\n      error: null,\n      fetching: false\n    },\n    findNearbyStops: () => {},\n    geocoderConfig: {\n      baseUrl: 'https://ws-st.trimet.org/pelias/v1', // TriMet-specific default\n      boundary: { // TriMet-specific default\n        rect: {\n          minLon: -123.2034,\n          maxLon: -122.135,\n          minLat: 45.273,\n          maxLat: 45.7445\n        }\n      },\n      maxNearbyStops: 4,\n      type: 'PELIAS'\n    },\n    getCurrentPosition: () => {},\n    location: null,\n    nearbyStops: [],\n    onLocationSelected: (payload) => console.log('location selected', payload),\n    sessionSearches: [],\n    showClearButton: true,\n    showUserSettings: false,\n    stopsIndex: null,\n    userLocations: [],\n    userRecentPlaces: []\n  }\n\n  constructor (props: Props) {\n    super(props)\n    this.state = {\n      value: props.location && !props.hideExistingValue\n        ? props.location.name\n        : '',\n      menuVisible: false,\n      geocodedFeatures: [],\n      activeIndex: null\n    }\n  }\n\n  componentDidUpdate (prevProps: Props) {\n    // If location is updated externally, replace value and geocoded features\n    // in internal state.\n    // TODO: This might be considered an anti-pattern. There may be a more\n    // effective way to handle this.\n    const { location } = this.props\n    if (location !== prevProps.location) {\n      this.setState({\n        value: location !== null ? location.name : '',\n        geocodedFeatures: []\n      })\n    }\n  }\n\n  _geocodeAutocomplete = throttle(1000, (text) => {\n    if (!text) {\n      console.warn('No text entry provided for geocode autocomplete search.')\n      return\n    }\n    getGeocoder(this.props.geocoderConfig)\n      .autocomplete({ text })\n      .then((result) => {\n        this.setState({ geocodedFeatures: result.features })\n      }).catch((err) => {\n        console.error(err)\n      })\n  })\n\n  _geocodeSearch (text: string) {\n    if (!text) {\n      console.warn('No text entry provided for geocode search.')\n      return\n    }\n    getGeocoder(this.props.geocoderConfig)\n      .search({ text })\n      .then((result) => {\n        if (result.features && result.features.length > 0) {\n          // Only replace geocode items if results were found\n          this.setState({ geocodedFeatures: result.features })\n        } else {\n          console.warn('No results found for geocode search. Not replacing results.')\n        }\n      }).catch((err) => {\n        console.error(err)\n      })\n  }\n\n  _getFormControlClassname () {\n    return this.props.type + '-form-control'\n  }\n\n  _onClearButtonClick = () => {\n    const { type } = this.props\n    this.props.clearLocation({ type })\n    this.setState({\n      value: '',\n      geocodedFeatures: []\n    })\n    ReactDOM.findDOMNode(this.formControl).focus()\n    this._onTextInputClick()\n  }\n\n  _onDropdownToggle = (v: any, e: SyntheticInputEvent<HTMLInputElement>) => {\n    // if clicked on input form control, keep dropdown open; otherwise, toggle\n    const targetIsInput =\n      e.target.className.indexOf(this._getFormControlClassname()) !== -1\n    const menuVisible = targetIsInput ? true : !this.state.menuVisible\n    this.setState({ menuVisible })\n  }\n  /**\n   * Only hide menu if the target clicked is not a menu item in the dropdown.\n   * Otherwise, the click will not \"finish\" and the menu will hide without the\n   * user having made a selection.\n   */\n  _onBlurFormGroup = (e: SyntheticInputEvent<HTMLInputElement>) => {\n    // IE does not use relatedTarget, so this check handles cross-browser support.\n    // see https://stackoverflow.com/a/49325196/915811\n    const target = e.relatedTarget !== null ? e.relatedTarget : document.activeElement\n    if (!this.props.location && (!target || target.getAttribute('role') !== 'menuitem')) {\n      this.setState({ menuVisible: false, value: '', geocodedFeatures: [] })\n    }\n  }\n\n  _onTextInputChange = (evt: SyntheticInputEvent<HTMLInputElement>) => {\n    this.setState({ value: evt.target.value, menuVisible: true })\n    this._geocodeAutocomplete(evt.target.value)\n  }\n\n  _onTextInputClick = () => {\n    const { currentPosition, geocoderConfig, nearbyStops, onClick } = this.props\n    if (typeof onClick === 'function') onClick()\n    this.setState({ menuVisible: true })\n    if (nearbyStops.length === 0 && currentPosition && currentPosition.coords) {\n      this.props.findNearbyStops({\n        lat: currentPosition.coords.latitude,\n        lon: currentPosition.coords.longitude,\n        max: geocoderConfig.maxNearbyStops || 4\n      })\n    }\n  }\n\n  _onKeyDown = (evt: SyntheticKeyboardEvent<HTMLInputElement>) => {\n    const { activeIndex, menuVisible } = this.state\n    switch (evt.key) {\n      // 'Down' arrow key pressed: move selected menu item down by one position\n      case 'ArrowDown':\n        // Suppress default 'ArrowDown' behavior which moves cursor to end\n        evt.preventDefault()\n        if (!menuVisible) {\n          // If the menu is not visible, simulate a text input click to show it.\n          return this._onTextInputClick()\n        }\n        if (activeIndex === this.menuItemCount - 1) {\n          return this.setState({ activeIndex: null })\n        }\n        return this.setState({\n          activeIndex: activeIndex === null\n            ? 0\n            : activeIndex + 1\n        })\n\n      // 'Up' arrow key pressed: move selection up by one position\n      case 'ArrowUp':\n        // Suppress default 'ArrowUp' behavior which moves cursor to beginning\n        evt.preventDefault()\n        if (activeIndex === 0) {\n          return this.setState({ activeIndex: null })\n        }\n        return this.setState({\n          activeIndex: activeIndex === null\n            ? this.menuItemCount - 1\n            : activeIndex - 1\n        })\n\n      // 'Enter' keypress serves two purposes:\n      //  - If pressed when typing in search string, switch from 'autocomplete'\n      //    to 'search' geocoding\n      //  - If pressed when dropdown results menu is active, apply the location\n      //    associated with current selected menu item\n      case 'Enter':\n        if (typeof activeIndex === 'number') { // Menu is active\n          // Retrieve location selection handler from lookup object and invoke\n          const locationSelected = this.locationSelectedLookup[activeIndex]\n          if (locationSelected) locationSelected()\n\n          // Clear selection & hide the menu\n          this.setState({\n            menuVisible: false,\n            activeIndex: null\n          })\n        } else { // Menu not active; get geocode 'search' results\n          this._geocodeSearch(evt.target.value)\n          // Ensure menu is visible.\n          this.setState({ menuVisible: true })\n        }\n\n        // Suppress default 'Enter' behavior which causes page to reload\n        evt.preventDefault()\n        break\n      case 'Escape':\n        // Clear selection & hide the menu\n        return this.setState({\n          menuVisible: false,\n          activeIndex: null\n        })\n      // Any other key pressed: clear active selection\n      default:\n        return this.setState({ activeIndex: null })\n    }\n  }\n\n  _setLocation (location) {\n    const { onLocationSelected, type } = this.props\n    onLocationSelected({ type, location })\n  }\n\n  _useCurrentLocation = () => {\n    const {\n      currentPosition,\n      getCurrentPosition,\n      onLocationSelected,\n      type\n    } = this.props\n    const location = currentPositionToLocation(currentPosition)\n    if (location) {\n      // If geolocation is successful (i.e., user has granted app geolocation\n      // permission and coords exist), set location.\n      onLocationSelected({ type, location })\n    } else {\n      // Call geolocation.getCurrentPosition and set as from/to type\n      this.setState({ fetchingLocation: true })\n      // FIXME? getCurrentPosition needs to add payload to onLocationSelected\n      getCurrentPosition(type, onLocationSelected)\n    }\n  }\n\n  /**\n   * Provide alert to user with reason for geolocation error\n   */\n  _geolocationAlert = () => {\n    window.alert(\n      `Geolocation either has been disabled for ${window.location.host} or is not available in your browser.\\n\\nReason: ${this.props.currentPosition.error.message || 'Unknown reason'}`\n    )\n  }\n\n  render () {\n    const {\n      currentPosition,\n      geocoderConfig,\n      label,\n      location,\n      showClearButton,\n      showUserSettings,\n      static: isStatic,\n      suppressNearby,\n      type,\n      userLocations,\n      userRecentPlaces,\n      nearbyStops\n    } = this.props\n    const locations = [...userLocations, ...userRecentPlaces]\n    const { activeIndex } = this.state\n    let geocodedFeatures = this.state.geocodedFeatures\n    if (geocodedFeatures.length > 5) geocodedFeatures = geocodedFeatures.slice(0, 5)\n\n    let sessionSearches = this.props.sessionSearches\n    if (sessionSearches.length > 5) sessionSearches = sessionSearches.slice(0, 5)\n\n    // Assemble menu contents, to be displayed either as dropdown or static panel.\n    // Menu items are created in four phases: (1) the current location, (2) any\n    // geocoder search results; (3) nearby transit stops; and (4) saved searches\n\n    let menuItems = [] // array of menu items for display (may include non-selectable items e.g. dividers/headings)\n    let itemIndex = 0 // the index of the current location-associated menu item (excluding non-selectable items)\n    this.locationSelectedLookup = {} // maps itemIndex to a location selection handler (for use by the _onKeyDown method)\n\n    /* 1) Process geocode search result option(s) */\n    if (geocodedFeatures.length > 0) {\n      // Add the menu sub-heading (not a selectable item)\n      // menuItems.push(<MenuItem header key='sr-header'>Search Results</MenuItem>)\n\n      // Iterate through the geocoder results\n      menuItems = menuItems.concat(geocodedFeatures.map((feature, i) => {\n        // Create the selection handler\n        const locationSelected = () => {\n          getGeocoder(geocoderConfig)\n            .getLocationFromGeocodedFeature(feature)\n            .then(location => {\n              // Set the current location\n              this._setLocation(location)\n              // Add to the location search history\n              this.props.addLocationSearch({ location })\n            })\n        }\n\n        // Add to the selection handler lookup (for use in _onKeyDown)\n        this.locationSelectedLookup[itemIndex] = locationSelected\n\n        // Create and return the option menu item\n        const option = createOption('map-pin', feature.properties.label, locationSelected, itemIndex === activeIndex, i === geocodedFeatures.length - 1)\n        itemIndex++\n        return option\n      }))\n    }\n\n    /* 2) Process nearby transit stop options */\n    if (nearbyStops.length > 0 && !suppressNearby) {\n      // Add the menu sub-heading (not a selectable item)\n      menuItems.push(<MenuItem header key='ns-header'>Nearby Stops</MenuItem>)\n\n      // Iterate through the found nearby stops\n      menuItems = menuItems.concat(nearbyStops.map((stopId, i) => {\n        // Constuct the location\n        const stop = this.props.stopsIndex[stopId]\n        const location = {\n          name: stop.name,\n          lat: stop.lat,\n          lon: stop.lon\n        }\n\n        // Create the location selected handler\n        const locationSelected = () => { this._setLocation(location) }\n\n        // Add to the selection handler lookup (for use in _onKeyDown)\n        this.locationSelectedLookup[itemIndex] = locationSelected\n\n        // Create and return the option menu item\n        const option = createTransitStopOption(stop, locationSelected, itemIndex === activeIndex, i === nearbyStops.length - 1)\n        itemIndex++\n        return option\n      }))\n    }\n\n    /* 3) Process recent search history options */\n    if (sessionSearches.length > 0) {\n      // Add the menu sub-heading (not a selectable item)\n      menuItems.push(<MenuItem header key='ss-header'>Recently Searched</MenuItem>)\n\n      // Iterate through any saved locations\n      menuItems = menuItems.concat(sessionSearches.map((location, i) => {\n        // Create the location-selected handler\n        const locationSelected = () => { this._setLocation(location) }\n\n        // Add to the selection handler lookup (for use in _onKeyDown)\n        this.locationSelectedLookup[itemIndex] = locationSelected\n\n        // Create and return the option menu item\n        const option = createOption('search', location.name, locationSelected, itemIndex === activeIndex, i === sessionSearches.length - 1)\n        itemIndex++\n        return option\n      }))\n    }\n\n    /* 3b) Process stored user locations */\n    if (locations.length > 0 && showUserSettings) {\n      // Add the menu sub-heading (not a selectable item)\n      menuItems.push(<MenuItem header key='mp-header'>My Places</MenuItem>)\n\n      // Iterate through any saved locations\n      menuItems = menuItems.concat(locations.map((location, i) => {\n        // Create the location-selected handler\n        const locationSelected = () => { this._setLocation(location) }\n\n        // Add to the selection handler lookup (for use in _onKeyDown)\n        this.locationSelectedLookup[itemIndex] = locationSelected\n\n        // Create and return the option menu item\n        const option = createOption(\n          location.icon,\n          formatStoredPlaceName(location),\n          locationSelected,\n          itemIndex === activeIndex,\n          i === locations.length - 1\n        )\n        itemIndex++\n        return option\n      }))\n    }\n\n    /* 4) Process the current location */\n    let locationSelected, optionIcon, optionTitle\n\n    if (!currentPosition.error) { // current position detected successfully\n      locationSelected = this._useCurrentLocation\n      optionIcon = 'location-arrow'\n      optionTitle = 'Use Current Location'\n    } else { // error detecting current position\n      locationSelected = this._geolocationAlert\n      optionIcon = 'ban'\n      optionTitle = 'Current location not available'\n    }\n\n    // Add to the selection handler lookup (for use in _onKeyDown)\n    this.locationSelectedLookup[itemIndex] = locationSelected\n\n    if (!suppressNearby) {\n      // Create and add the option item to the menu items array\n      const currentLocationOption = createOption(\n        optionIcon,\n        optionTitle,\n        locationSelected,\n        itemIndex === activeIndex\n      )\n      menuItems.push(currentLocationOption)\n      itemIndex++\n    }\n\n    // Store the number of location-associated items for reference in the _onKeyDown method\n    this.menuItemCount = itemIndex\n\n    /** the text input element **/\n    const placeholder = currentPosition.fetching === type\n      ? 'Fetching location...'\n      : label || type\n    const textControl = <FormControl\n      ref={ctl => { this.formControl = ctl }}\n      className={this._getFormControlClassname()}\n      type='text'\n      value={this.state.value}\n      placeholder={placeholder}\n      onChange={this._onTextInputChange}\n      onClick={this._onTextInputClick}\n      onKeyDown={this._onKeyDown}\n    />\n\n    // Only include the clear ('X') button add-on if a location is selected\n    // or if the input field has text.\n    const clearButton = showClearButton && location\n      ? <InputGroup.Addon>\n        <Button\n          bsStyle='link'\n          className='clear-button'\n          onClick={this._onClearButtonClick}>\n          <i className='fa fa-times' />\n        </Button>\n      </InputGroup.Addon>\n      : null\n    if (isStatic) {\n      // 'static' mode (menu is displayed alongside input, e.g., for mobile view)\n      return (\n        <div\n          className='location-field static'>\n          <form>\n            <FormGroup>\n              <InputGroup>\n                <InputGroup.Addon>\n                  <LocationIcon type={type} width={10} />\n                </InputGroup.Addon>\n                {textControl}\n                {clearButton}\n              </InputGroup>\n            </FormGroup>\n          </form>\n          <ul className='dropdown-menu' style={{ width: '100%' }}>\n            {menuItems.length > 0 // Show typing prompt to avoid empty screen\n              ? menuItems\n              : <MenuItem header className={'text-center'}>\n                Begin typing to search for locations\n              </MenuItem>\n            }\n          </ul>\n        </div>\n      )\n    } else {\n      // default display mode with dropdown menu\n      return (\n        <form>\n          <FormGroup\n            onBlur={this._onBlurFormGroup}\n            className='location-field'>\n            <InputGroup>\n              {/* location field icon -- also serves as dropdown anchor */}\n              <DropdownButton\n                componentClass={InputGroup.Button}\n                open={this.state.menuVisible}\n                onToggle={this._onDropdownToggle}\n                id='location-dropdown'\n                title={<LocationIcon type={type} />}\n                noCaret\n              >\n                {menuItems}\n              </DropdownButton>\n              {textControl}\n              {clearButton}\n            </InputGroup>\n          </FormGroup>\n        </form>\n      )\n    }\n  }\n}\n\n// helper functions for dropdown options\n\nlet itemKey = 0\n\nfunction createOption (icon, title, onSelect, isActive, isLast) {\n  return <MenuItem\n    className={`location-option${isLast ? ' last-option' : ''}`}\n    onSelect={onSelect}\n    // style={{ borderBottom: '1px solid lightgrey' }}\n    key={itemKey++}\n    active={isActive}>\n    {isIE()\n      // In internet explorer 11, some really weird stuff is happening where it\n      // is not possible to click the text of the title, but if you click just\n      // above it, then it works. So, if using IE 11, just return the title text\n      // and avoid all the extra fancy stuff.\n      // See https://github.com/ibi-group/trimet-mod-otp/issues/237\n      ? title\n      : (\n        <div style={{ paddingTop: '5px', paddingBottom: '3px' }}>\n          <div style={{ float: 'left' }}><i className={`fa fa-${icon}`} /></div>\n          <div style={{\n            marginLeft: '30px',\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n            whiteSpace: 'nowrap'\n          }}>\n            {title}\n          </div>\n        </div>\n      )\n    }\n  </MenuItem>\n}\n\nfunction createTransitStopOption (stop, onSelect, isActive) {\n  return <MenuItem className='location-option' onSelect={onSelect} key={itemKey++} active={isActive}>\n    <div>\n      <div style={{ float: 'left', paddingTop: '3px' }}>\n        <i className='fa fa-bus' style={{ fontSize: '20px' }} />\n        <div style={{ fontSize: '8px' }}>{distanceStringImperial(stop.dist, true)}</div>\n      </div>\n      <div style={{ marginLeft: '30px' }}>\n        <div>{stop.name} ({stop.code})</div>\n        <div style={{ fontSize: '9px' }}>\n          {(stop.routes || []).map((route, i) => {\n            const name = route.shortName || route.longName\n            return (\n              <span key={`route-${i}`} className='route'>\n                {name}\n              </span>\n            )\n          })}\n        </div>\n      </div>\n      <div style={{ clear: 'both' }} />\n    </div>\n  </MenuItem>\n}\n"]}