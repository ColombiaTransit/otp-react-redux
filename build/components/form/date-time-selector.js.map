{"version":3,"sources":["date-time-selector.js"],"names":["DateTimeSelector","props","_onDateChange","evt","setQueryParam","date","target","value","_onDayOfWeekChange","weekday","format","_onEndTimeChange","endTime","_onStartTimeChange","startTime","_onTimeChange","time","_onBackupTimeChange","timeFormat","_onBackupDateChange","dateFormat","_setDepartArrive","type","departArrive","state","dateFocused","checkInput","input","document","createElement","setAttribute","_supportsDateTimeInputs","marginBottom","map","i","marginTop","width","display","Component","propTypes","PropTypes","string","location","object","label","profile","bool","func","DateOptionButton","_onClick","setDepartArrive","active","text","classNames","push","join","mapStateToProps","ownProps","otp","currentQuery","config","mapDispatchToProps"],"mappings":"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","file":"date-time-selector.js","sourcesContent":["// import moment from 'moment'\nimport React, {PropTypes, Component} from 'react'\nimport { Form, FormGroup, FormControl, Row, Col, Button } from 'react-bootstrap'\n// import { SingleDatePicker } from 'react-dates'\nimport { connect } from 'react-redux'\nimport moment from 'moment'\n\nimport { setQueryParam } from '../../actions/form'\nimport { getTimeFormat, getDateFormat } from '../../util/time'\n\nclass DateTimeSelector extends Component {\n  static propTypes = {\n    date: PropTypes.string,\n    departArrive: PropTypes.string,\n    time: PropTypes.string,\n    location: PropTypes.object,\n    label: PropTypes.string,\n    profile: PropTypes.bool,\n    startTime: PropTypes.string,\n    endTime: PropTypes.string,\n\n    setQueryParam: PropTypes.func,\n    type: PropTypes.string // replace with locationType?\n  }\n\n  constructor (props) {\n    super(props)\n    this.state = {\n      dateFocused: false\n    }\n  }\n\n  _onDateChange = (evt) => {\n    this.props.setQueryParam({ date: evt.target.value })\n  }\n\n  _onDayOfWeekChange = evt => {\n    this.props.setQueryParam({\n      date: moment().weekday(evt.target.value).format('YYYY-MM-DD')\n    })\n  }\n\n  _onEndTimeChange = (evt) => {\n    this.props.setQueryParam({ endTime: evt.target.value })\n  }\n\n  _onStartTimeChange = (evt) => {\n    this.props.setQueryParam({ startTime: evt.target.value })\n  }\n\n  _onTimeChange = (evt) => {\n    this.props.setQueryParam({ time: evt.target.value })\n  }\n\n  _onBackupTimeChange = (evt) => {\n    const time = moment(evt.target.value, this.props.timeFormat).format('HH:mm')\n    this.props.setQueryParam({ time })\n  }\n\n  _onBackupDateChange = (evt) => {\n    const date = moment(evt.target.value, this.props.dateFormat).format('YYYY-MM-DD')\n    this.props.setQueryParam({ date })\n  }\n\n  _setDepartArrive = (type) => {\n    this.props.setQueryParam({ departArrive: type })\n    if (type === 'NOW') {\n      this.props.setQueryParam({\n        date: moment().format('YYYY-MM-DD'),\n        time: moment().format('HH:mm')\n      })\n    }\n  }\n\n  componentWillMount () {\n    const checkInput = (type) => {\n      var input = document.createElement('input')\n      input.setAttribute('type', type)\n      return input.type === type\n    }\n    this._supportsDateTimeInputs = checkInput('date') && checkInput('time')\n  }\n\n  render () {\n    const { departArrive, date, time, startTime, endTime, timeFormat, dateFormat } = this.props\n\n    // TODO: restore for profile mode\n    /*if (this.props.profile) {\n      const dowOptions = [{\n        text: 'WEEKDAY',\n        weekday: 3\n      }, {\n        text: 'SATURDAY',\n        weekday: 6\n      }, {\n        text: 'SUNDAY',\n        weekday: 0\n      }]\n\n      return (\n        <Form>\n          <FormGroup style={{marginBottom: '15px'}} className='date-time-selector'>\n            <Row>\n              <Col xs={12}>\n                <FormControl\n                  className='dropdown-selector'\n                  componentClass='select'\n                  style={{width: '100%'}}\n                  onChange={this._onDayOfWeekChange}\n                >\n                  {dowOptions.map((o, i) => (\n                    <option key={i} value={o.weekday}>{o.text}</option>\n                  ))}\n                </FormControl>\n              </Col>\n            </Row>\n            <Row style={{ marginTop: 20 }}>\n              <Col xs={5}>\n                <FormControl\n                  className='time-selector'\n                  type='time'\n                  required='true'\n                  value={startTime}\n                  style={{width: '100%'}}\n                  onChange={this._onStartTimeChange}\n                />\n              </Col>\n              <Col xs={2}>TO</Col>\n              <Col xs={5}>\n                <FormControl\n                  className='time-selector'\n                  type='time'\n                  required='true'\n                  value={endTime}\n                  style={{width: '100%'}}\n                  onChange={this._onEndTimeChange}\n                />\n              </Col>\n            </Row>\n          </FormGroup>\n        </Form>\n      )\n    }*/\n\n\n    return (\n      <Form>\n        <FormGroup style={{marginBottom: '15px'}} className='date-time-selector'>\n          <Row>\n            {['NOW', 'DEPART', 'ARRIVE'].map((type, i) => (\n              <Col key={i} xs={4}>\n                <DateOptionButton type={type} active={departArrive === type} setDepartArrive={this._setDepartArrive} />\n              </Col>\n            ))}\n          </Row>\n          {departArrive !== 'NOW' && !this._supportsDateTimeInputs && (\n            <Row style={{ marginTop: 20 }}>\n              <Col xs={6}>\n                <FormControl\n                  className='time-selector'\n                  type='text'\n                  defaultValue={moment(time, 'HH:mm').format(timeFormat)}\n                  required='true'\n                  onChange={this._onBackupTimeChange}\n                />\n              </Col>\n              <Col xs={6}>\n                <FormControl\n                  className='date-selector'\n                  type='text'\n                  defaultValue={moment(date, 'YYYY-MM-DD').format(dateFormat)}\n                  required='true'\n                  onChange={this._onBackupDateChange}\n                />\n              </Col>\n            </Row>\n          )}\n          {departArrive !== 'NOW' && this._supportsDateTimeInputs && (\n            <Row style={{ marginTop: 20 }}>\n              <Col xs={6}>\n                <FormControl\n                  className='time-selector'\n                  type='time'\n                  value={time}\n                  required='true'\n                  onChange={this._onTimeChange}\n                  style={{width: '100%', display: departArrive === 'NOW' && 'none'}}\n                />\n              </Col>\n              <Col xs={6}>\n                <FormControl\n                  className='date-selector'\n                  type='date'\n                  value={date}\n                  required='true'\n                  onChange={this._onDateChange}\n                  style={{width: '100%', display: departArrive === 'NOW' && 'none'}}\n                />\n              </Col>\n            </Row>\n          )}\n        </FormGroup>\n      </Form>\n    )\n  }\n}\n\nclass DateOptionButton extends Component {\n  _onClick = () => {\n    this.props.setDepartArrive(this.props.type)\n  }\n\n  render () {\n    const { active, type } = this.props\n    let text = type\n    if (type === 'NOW') text = 'Leave now'\n    if (type === 'DEPART') text = 'Depart at'\n    if (type === 'ARRIVE') text = 'Arrive by'\n    const classNames = ['date-option-button', 'select-button']\n    if (active) classNames.push('active')\n    return <Button className={classNames.join(' ')} onClick={this._onClick}>{text}</Button>\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const { departArrive, date, time, startTime, endTime } = state.otp.currentQuery\n  return {\n    config: state.otp.config,\n    departArrive,\n    date,\n    time,\n    startTime,\n    endTime,\n    timeFormat: getTimeFormat(state.otp.config),\n    dateFormat: getDateFormat(state.otp.config)\n  }\n}\n\nconst mapDispatchToProps = {\n  setQueryParam\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DateTimeSelector)\n"]}