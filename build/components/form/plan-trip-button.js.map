{"version":3,"sources":["plan-trip-button.js"],"names":["PlanTripButton","_onClick","props","routingQuery","onClick","disabled","text","displayText","Component","propTypes","routingType","PropTypes","string","func","planTrip","profileTrip","mapStateToProps","state","ownProps","otp","currentQuery","from","to","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;AAEA;;;;IAEMA,c;;;;;;;;;;;;;;4NASJC,Q,GAAW,YAAM;AACf,YAAKC,KAAL,CAAWC,YAAX;AACA,UAAI,OAAO,MAAKD,KAAL,CAAWE,OAAlB,KAA8B,UAAlC,EAA8C,MAAKF,KAAL,CAAWE,OAAX;AAC/C,K;;;;;6BAES;AAAA,mBACmB,KAAKF,KADxB;AAAA,UACAG,QADA,UACAA,QADA;AAAA,UACUC,IADV,UACUA,IADV;;AAER,UAAMC,cAAcD,QAAQD,QAAR,GAChB,oCADgB,GAEhB,WAFJ;AAGA,aACE;AAAC,8BAAD;AAAA;AACE,qBAAU,kBADZ;AAEE,oBAAUA,QAFZ;AAGE,mBAAS,KAAKJ;AAHhB;AAIEM;AAJF,OADF;AAOD;;;EA1B0BC,gB,UACpBC,S,GAAY;AACjBC,eAAaC,iBAAUC,MADN;AAEjBN,QAAMK,iBAAUC,MAFC;AAGjBR,WAASO,iBAAUE,IAHF;AAIjBC,YAAUH,iBAAUE,IAJH;AAKjBE,eAAaJ,iBAAUE;AALN,C;;;AA4BrB,IAAMG,kBAAkB,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C;AACA,MAAMb,WAAW,CAACY,MAAME,GAAN,CAAUC,YAAV,CAAuBC,IAAxB,IAAgC,CAACJ,MAAME,GAAN,CAAUC,YAAV,CAAuBE,EAAzE;AACA,SAAO,EAAEjB,kBAAF,EAAP;AACD,CAJD;;AAMA,IAAMkB,qBAAqB,SAArBA,kBAAqB,CAACC,QAAD,EAAWN,QAAX,EAAwB;AACjD,SAAO;AACLf,kBAAc,wBAAM;AAAEqB,eAAS,wBAAT;AAA0B;AAD3C,GAAP;AAGD,CAJD;;kBAMe,yBAAQR,eAAR,EAAyBO,kBAAzB,EAA6CvB,cAA7C,C","file":"plan-trip-button.js","sourcesContent":["import React, { Component, PropTypes } from 'react'\nimport { Button } from 'react-bootstrap'\nimport { connect } from 'react-redux'\n\nimport { routingQuery } from '../../actions/api'\n\nclass PlanTripButton extends Component {\n  static propTypes = {\n    routingType: PropTypes.string,\n    text: PropTypes.string,\n    onClick: PropTypes.func,\n    planTrip: PropTypes.func,\n    profileTrip: PropTypes.func\n  }\n\n  _onClick = () => {\n    this.props.routingQuery()\n    if (typeof this.props.onClick === 'function') this.props.onClick()\n  }\n\n  render () {\n    const { disabled, text } = this.props\n    const displayText = text || disabled\n      ? 'Complete trip details to plan trip'\n      : 'Plan Trip'\n    return (\n      <Button\n        className='plan-trip-button'\n        disabled={disabled}\n        onClick={this._onClick}\n      >{displayText}</Button>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  // Set button to disabled if from or to location is missing.\n  const disabled = !state.otp.currentQuery.from || !state.otp.currentQuery.to\n  return { disabled }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    routingQuery: () => { dispatch(routingQuery()) }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlanTripButton)\n"]}