{"version":3,"sources":["plan-trip-button.js"],"names":["PlanTripButton","_onClick","props","routingQuery","onClick","setMainPanelContent","currentQuery","text","disabled","undefined","from","to","Component","propTypes","routingType","PropTypes","string","func","planTrip","profileTrip","mapStateToProps","state","ownProps","otp","mapDispatchToProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;AAEA;;AACA;;AACA;;;;IAEMA,c;;;;;;;;;;;;;;4NASJC,Q,GAAW,YAAM;AACf,YAAKC,KAAL,CAAWC,YAAX;AACA,UAAI,OAAO,MAAKD,KAAL,CAAWE,OAAlB,KAA8B,UAAlC,EAA8C,MAAKF,KAAL,CAAWE,OAAX;AAC9C,UAAI,CAAC,oBAAL,EAAiB,MAAKF,KAAL,CAAWG,mBAAX,CAA+B,IAA/B;AAClB,K;;;;;6BAES;AAAA,mBACuB,KAAKH,KAD5B;AAAA,UACAI,YADA,UACAA,YADA;AAAA,UACcC,IADd,UACcA,IADd;;AAER,UAAMC,WAAW,KAAKN,KAAL,CAAWM,QAAX,KAAwBC,SAAxB,GACb,CAACH,aAAaI,IAAd,IAAsB,CAACJ,aAAaK,EADvB,GAEb,KAAKT,KAAL,CAAWM,QAFf;;AAIA,aACE;AAAC,8BAAD;AAAA;AACE,qBAAU,kBADZ;AAEE,oBAAUA,QAFZ;AAGE,mBAAS,KAAKP;AAHhB;AAIEM,gBAAQ;AAJV,OADF;AAOD;;;EA5B0BK,gB,UACpBC,S,GAAY;AACjBC,eAAaC,iBAAUC,MADN;AAEjBT,QAAMQ,iBAAUC,MAFC;AAGjBZ,WAASW,iBAAUE,IAHF;AAIjBC,YAAUH,iBAAUE,IAJH;AAKjBE,eAAaJ,iBAAUE;AALN,C;;;AA8BrB,IAAMG,kBAAkB,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,SAAO,EAAEhB,cAAce,MAAME,GAAN,CAAUjB,YAA1B,EAAP;AACD,CAFD;;AAIA,IAAMkB,qBAAqB,EAAErB,+BAAF,EAAgBE,4CAAhB,EAA3B;;kBAEe,yBAAQe,eAAR,EAAyBI,kBAAzB,EAA6CxB,cAA7C,C","file":"plan-trip-button.js","sourcesContent":["import React, { Component, PropTypes } from 'react'\nimport { Button } from 'react-bootstrap'\nimport { connect } from 'react-redux'\n\nimport { routingQuery } from '../../actions/api'\nimport { setMainPanelContent } from '../../actions/ui'\nimport { isMobile } from '../../util/ui'\n\nclass PlanTripButton extends Component {\n  static propTypes = {\n    routingType: PropTypes.string,\n    text: PropTypes.string,\n    onClick: PropTypes.func,\n    planTrip: PropTypes.func,\n    profileTrip: PropTypes.func\n  }\n\n  _onClick = () => {\n    this.props.routingQuery()\n    if (typeof this.props.onClick === 'function') this.props.onClick()\n    if (!isMobile()) this.props.setMainPanelContent(null)\n  }\n\n  render () {\n    const { currentQuery, text } = this.props\n    const disabled = this.props.disabled === undefined\n      ? !currentQuery.from || !currentQuery.to\n      : this.props.disabled\n\n    return (\n      <Button\n        className='plan-trip-button'\n        disabled={disabled}\n        onClick={this._onClick}\n      >{text || 'Plan Trip'}</Button>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { currentQuery: state.otp.currentQuery }\n}\n\nconst mapDispatchToProps = { routingQuery, setMainPanelContent }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlanTripButton)\n"]}