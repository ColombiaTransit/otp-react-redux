{"version":3,"sources":["mode-button.js"],"names":["ModeButton","props","active","icons","label","mode","onClick","buttonColor","borderColor","fill","color","Component","propTypes","PropTypes","bool","string","any","object","func"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;;;IAEqBA,U;;;;;;;;;;6BAST;AAAA,mBACsC,KAAKC,KAD3C;AAAA,UACDC,MADC,UACDA,MADC;AAAA,UACOC,KADP,UACOA,KADP;AAAA,UACcC,KADd,UACcA,KADd;AAAA,UACqBC,IADrB,UACqBA,IADrB;AAAA,UAC2BC,OAD3B,UAC2BA,OAD3B;;AAER,UAAMC,cAAcL,SAAS,MAAT,GAAkB,MAAtC;AACA,aACE;AAAA;AAAA,UAAK,WAAU,uBAAf;AACE;AAAA;AAAA;AACE,uBAAU,aADZ;AAEE,qBAASI,OAFX;AAGE,mBAAOF,KAHT;AAIE,mBAAO,EAAEI,aAAaD,WAAf;AAJT;AAME;AAAA;AAAA;AACE,yBAAU,WADZ;AAEE,qBAAO,EAAEE,MAAMF,WAAR,EAFT;AAGG,wCAAYF,IAAZ,EAAkBF,KAAlB;AAHH;AANF,SADF;AAaE;AAAA;AAAA,YAAK,WAAU,YAAf,EAA4B,OAAO,EAAEO,OAAOH,WAAT,EAAnC;AAA4DH;AAA5D,SAbF;AAcGF,kBAAU;AAAA;AAAA;AACT;AAAA;AAAA,cAAK,WAAU,YAAf,EAA4B,OAAO,EAAEQ,OAAO,OAAT,EAAnC;AAAuD,iDAAG,WAAU,cAAb;AAAvD,WADS;AAET;AAAA;AAAA,cAAK,WAAU,YAAf,EAA4B,OAAO,EAAEA,OAAO,OAAT,EAAnC;AAAuD,iDAAG,WAAU,oBAAb;AAAvD;AAFS;AAdb,OADF;AAqBD;;;EAjCqCC,gB,UAC/BC,S,GAAY;AACjBV,UAAQW,iBAAUC,IADD;AAEjBV,SAAOS,iBAAUE,MAFA;AAGjBV,QAAMQ,iBAAUG,GAHC,EAGI;AACrBb,SAAOU,iBAAUI,MAJA;AAKjBX,WAASO,iBAAUK;AALF,C;kBADAlB,U","file":"mode-button.js","sourcesContent":["import React, {PropTypes, Component} from 'react'\n\nimport { getModeIcon } from '../../util/itinerary'\n\nexport default class ModeButton extends Component {\n  static propTypes = {\n    active: PropTypes.bool,\n    label: PropTypes.string,\n    mode: PropTypes.any, // currently a mode object or string\n    icons: PropTypes.object,\n    onClick: PropTypes.func\n  }\n\n  render () {\n    const {active, icons, label, mode, onClick} = this.props\n    const buttonColor = active ? '#000' : '#bbb'\n    return (\n      <div className='mode-button-container'>\n        <button\n          className='mode-button'\n          onClick={onClick}\n          title={label}\n          style={{ borderColor: buttonColor }}\n        >\n          <div\n            className='mode-icon'\n            style={{ fill: buttonColor }}>\n            {getModeIcon(mode, icons)}\n          </div>\n        </button>\n        <div className='mode-label' style={{ color: buttonColor }}>{label}</div>\n        {active && <div>\n          <div className='mode-check' style={{ color: 'white' }}><i className='fa fa-circle' /></div>\n          <div className='mode-check' style={{ color: 'green' }}><i className='fa fa-check-circle' /></div>\n        </div>}\n      </div>\n    )\n  }\n}\n"]}