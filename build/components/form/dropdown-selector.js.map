{"version":3,"sources":["dropdown-selector.js"],"names":["DropdownSelector","_onQueryParamChange","evt","props","setQueryParam","name","target","value","label","options","marginBottom","map","o","i","text","Component","propTypes","PropTypes","string","oneOfType","number","array","func","mapStateToProps","state","ownProps","mapDispatchToProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;AAEA;;;;IAEMA,gB;;;;;;;;;;;;;;gOAYJC,mB,GAAsB,UAACC,GAAD,EAAS;AAC7B,YAAKC,KAAL,CAAWC,aAAX,mCAA4B,MAAKD,KAAL,CAAWE,IAAvC,EAA8CH,IAAII,MAAJ,CAAWC,KAAzD;AACD,K;;;;;6BAES;AAAA,mBAC0B,KAAKJ,KAD/B;AAAA,UACAI,KADA,UACAA,KADA;AAAA,UACOC,KADP,UACOA,KADP;AAAA,UACcC,OADd,UACcA,OADd;;;AAGR,aACE;AAAC,4BAAD;AAAA;AACE;AAAC,mCAAD;AAAA,YAAW,OAAO,EAACC,cAAc,MAAf,EAAlB,EAA0C,WAAU,oBAApD;AACE;AAAC,+BAAD;AAAA;AACE;AAAC,iCAAD;AAAA,gBAAK,IAAI,CAAT,EAAY,WAAU,eAAtB;AAAuCF;AAAvC,aADF;AAEE;AAAC,iCAAD;AAAA,gBAAK,IAAI,CAAT;AACE;AAAC,2CAAD;AAAA;AACE,kCAAe,QADjB;AAEE,yBAAOD,KAFT;AAGE,4BAAU,KAAKN;AAHjB;AAKGQ,wBAAQE,GAAR,CAAY,UAACC,CAAD,EAAIC,CAAJ;AAAA,yBACX;AAAA;AAAA,sBAAQ,KAAKA,CAAb,EAAgB,OAAOD,EAAEL,KAAzB;AAAiCK,sBAAEE;AAAnC,mBADW;AAAA,iBAAZ;AALH;AADF;AAFF;AADF;AADF,OADF;AAoBD;;;EAvC4BC,gB,UACtBC,S,GAAY;AACjBX,QAAMY,iBAAUC,MADC;AAEjBX,SAAOU,iBAAUE,SAAV,CAAoB,CACzBF,iBAAUC,MADe,EAEzBD,iBAAUG,MAFe,CAApB,CAFU;AAMjBZ,SAAOS,iBAAUC,MANA;AAOjBT,WAASQ,iBAAUI,KAPF;AAQjBjB,iBAAea,iBAAUK;AARR,C;;;AAyCrB,IAAMC,kBAAkB,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,SAAO,EAAP;AACD,CAFD;;AAIA,IAAMC,qBAAqB,EAAEtB,kCAAF,EAA3B;;kBAEe,yBAAQmB,eAAR,EAAyBG,kBAAzB,EAA6C1B,gBAA7C,C","file":"dropdown-selector.js","sourcesContent":["import React, {PropTypes, Component} from 'react'\nimport { Form, FormGroup, FormControl, Row, Col } from 'react-bootstrap'\nimport { connect } from 'react-redux'\n\nimport { setQueryParam } from '../../actions/form'\n\nclass DropdownSelector extends Component {\n  static propTypes = {\n    name: PropTypes.string,\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number\n    ]),\n    label: PropTypes.string,\n    options: PropTypes.array,\n    setQueryParam: PropTypes.func\n  }\n\n  _onQueryParamChange = (evt) => {\n    this.props.setQueryParam({ [this.props.name]: evt.target.value })\n  }\n\n  render () {\n    const { value, label, options } = this.props\n\n    return (\n      <Form>\n        <FormGroup style={{marginBottom: '15px'}} className='date-time-selector'>\n          <Row>\n            <Col xs={6} className='setting-label'>{label}</Col>\n            <Col xs={6}>\n              <FormControl\n                componentClass='select'\n                value={value}\n                onChange={this._onQueryParamChange}\n              >\n                {options.map((o, i) => (\n                  <option key={i} value={o.value}>{o.text}</option>\n                ))}\n              </FormControl>\n            </Col>\n          </Row>\n        </FormGroup>\n      </Form>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { }\n}\n\nconst mapDispatchToProps = { setQueryParam }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DropdownSelector)\n"]}