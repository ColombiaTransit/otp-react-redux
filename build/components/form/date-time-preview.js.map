{"version":3,"sources":["date-time-preview.js"],"names":["DateTimePreview","props","caret","date","editButtonText","time","departArrive","routingType","startTime","endTime","timeStr","summary","calendar","split","button","onClick","compressed","clear","Component","propTypes","PropTypes","string","bool","element","func","defaultProps","mapStateToProps","state","ownProps","otp","currentQuery","config","mapDispatchToProps"],"mappings":"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","file":"date-time-preview.js","sourcesContent":["import React, { Component, PropTypes } from 'react'\nimport moment from 'moment'\nimport { connect } from 'react-redux'\nimport { Button } from 'react-bootstrap'\n\nclass DateTimePreview extends Component {\n  static propTypes = {\n    caret: PropTypes.string,\n    compressed: PropTypes.bool,\n    date: PropTypes.string,\n    departArrive: PropTypes.string,\n    editButtonText: PropTypes.element,\n    time: PropTypes.string,\n    onClick: PropTypes.func,\n    routingType: PropTypes.string\n  }\n\n  static defaultProps = {\n    editButtonText: <i className='fa fa-pencil' />\n  }\n\n  render () {\n    const { caret, date, editButtonText, time, departArrive, routingType, startTime, endTime } = this.props\n\n    let timeStr\n    if (routingType === 'ITINERARY') {\n      if (departArrive === 'NOW') timeStr = 'Leave now'\n      else if (departArrive === 'ARRIVE') timeStr = 'Arrive ' + time\n      else if (departArrive === 'DEPART') timeStr = 'Depart ' + time\n    } else if (routingType === 'PROFILE') {\n      timeStr = startTime + ' to ' + endTime\n    }\n\n    const summary = (\n      <div className='details'>\n        <i className='fa fa-calendar' /> {moment(date).calendar().split(' ')[0]}\n        <br />\n        <i className='fa fa-clock-o' /> {timeStr}\n      </div>\n    )\n\n    const button = (\n      <div className='button-container'>\n        <Button className='change-button' onClick={this.props.onClick}>\n          {editButtonText}{caret && <span> <i className={`fa fa-caret-${caret}`} /></span>}\n        </Button>\n      </div>\n    )\n\n    return this.props.compressed\n      ? /* 'compressed' layout -- button is below selected mode preview */ (\n        <div className='date-time-preview compressed'>\n          {summary}\n          {button}\n        </div>\n      ) : /* 'wide' layout -- button and selected mode preview are side-by-side  */ (\n        <div className='date-time-preview wide'>\n          {button}\n          {summary}\n          <div style={{ clear: 'both' }} />\n        </div>\n      )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const { departArrive, date, time, routingType, startTime, endTime } = state.otp.currentQuery\n  return {\n    config: state.otp.config,\n    routingType,\n    departArrive,\n    date,\n    time,\n    startTime,\n    endTime\n  }\n}\n\nconst mapDispatchToProps = {\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DateTimePreview)\n"]}