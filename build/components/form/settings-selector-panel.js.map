{"version":3,"sources":["settings-selector-panel.js"],"names":["SettingsSelectorPanel","props","state","activePanel","panels","key","text","component","icons","map","panel","setState","find","p","Component","propTypes","PropTypes","object"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AAEA;;;;AACA;;;;;;IAEqBA,qB;;;AAKnB,iCAAaC,KAAb,EAAoB;AAAA;;AAAA,oKACZA,KADY;;AAElB,UAAKC,KAAL,GAAa,EAAEC,aAAa,OAAf,EAAb;AAFkB;AAGnB;;;;6BAES;AAAA;;AACR,UAAMC,SAAS,CACb;AACEC,aAAK,OADP;AAEEC,cAAM,OAFR;AAGEC,mBAAW,8BAAC,oBAAD,IAAY,OAAO,KAAKN,KAAL,CAAWO,KAA9B;AAHb,OADa,EAKV;AACDH,aAAK,SADJ;AAEDC,cAAM,SAFL;AAGDC,mBAAW,8BAAC,8BAAD;AAHV,OALU,CAAf;;AAYA,aACE;AAAA;AAAA,UAAK,WAAU,yBAAf;AACE;AAAA;AAAA,YAAK,WAAU,YAAf;AACE;AAAC,uCAAD;AAAA,cAAa,eAAb;AACGH,mBAAOK,GAAP,CAAW,iBAAS;AACnB,qBACE;AAAC,2CAAD;AAAA,kBAAa,KAAKC,MAAML,GAAxB;AACE;AAAC,wCAAD;AAAA;AACE,+BAAWK,MAAML,GAAN,KAAc,OAAKH,KAAL,CAAWC,WAAzB,GAAuC,UAAvC,GAAoD,EADjE;AAEE,6BAAS;AAAA,6BAAM,OAAKQ,QAAL,CAAc,EAAER,aAAaO,MAAML,GAArB,EAAd,CAAN;AAAA;AAFX;AAGEK,wBAAMJ;AAHR;AADF,eADF;AAQD,aATA;AADH;AADF,SADF;AAeGF,eAAOQ,IAAP,CAAY;AAAA,iBAAKC,EAAER,GAAF,KAAU,OAAKH,KAAL,CAAWC,WAA1B;AAAA,SAAZ,EAAmDI;AAftD,OADF;AAmBD;;;EA1CgDO,gB,UAC1CC,S,GAAY;AACjBP,SAAOQ,iBAAUC;AADA,C;kBADAjB,qB","file":"settings-selector-panel.js","sourcesContent":["import React, { Component, PropTypes } from 'react'\nimport { Button, ButtonGroup } from 'react-bootstrap'\n\nimport ModesPanel from './modes-panel'\nimport GeneralSettingsPanel from './general-settings-panel'\n\nexport default class SettingsSelectorPanel extends Component {\n  static propTypes = {\n    icons: PropTypes.object\n  }\n\n  constructor (props) {\n    super(props)\n    this.state = { activePanel: 'MODES' }\n  }\n\n  render () {\n    const panels = [\n      {\n        key: 'MODES',\n        text: 'Modes',\n        component: <ModesPanel icons={this.props.icons} />\n      }, {\n        key: 'GENERAL',\n        text: 'General',\n        component: <GeneralSettingsPanel />\n      }\n    ]\n\n    return (\n      <div className='settings-selector-panel'>\n        <div className='button-row'>\n          <ButtonGroup justified>\n            {panels.map(panel => {\n              return (\n                <ButtonGroup key={panel.key}>\n                  <Button\n                    className={panel.key === this.state.activePanel ? 'selected' : ''}\n                    onClick={() => this.setState({ activePanel: panel.key })}\n                  >{panel.text}</Button>\n                </ButtonGroup>\n              )\n            })}\n          </ButtonGroup>\n        </div>\n        {panels.find(p => p.key === this.state.activePanel).component}\n      </div>\n    )\n  }\n}\n"]}