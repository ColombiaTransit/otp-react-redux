{"version":3,"sources":["narrative-routing-results.js"],"names":["NarrativeRoutingResults","nextProps","props","itineraries","length","setMainPanelContent","error","customIcons","itineraryClass","itineraryFooter","pending","routingType","mainPanelContent","Component","propTypes","PropTypes","object","func","string","mapStateToProps","state","ownProps","activeSearch","otp","ui","response","query","mapDispatchToProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;AACA;;;;IAEMA,uB;;;;;;;;;;8CAOuBC,S,EAAW;AACpC,UAAI,CAAC,CAAC,KAAKC,KAAL,CAAWC,WAAZ,IAA2B,KAAKD,KAAL,CAAWC,WAAX,CAAuBC,MAAvB,KAAkC,CAA9D,KACCH,UAAUE,WAAV,IAAyBF,UAAUE,WAAV,CAAsBC,MAAtB,GAA+B,CAD7D,EACiE;AAC/D,aAAKF,KAAL,CAAWG,mBAAX,CAA+B,IAA/B;AACD;AACD,UAAI,CAAC,KAAKH,KAAL,CAAWI,KAAZ,IAAqBL,UAAUK,KAAnC,EAA0C,KAAKJ,KAAL,CAAWG,mBAAX,CAA+B,IAA/B;AAC3C;;;6BAES;AAAA,mBAC6G,KAAKH,KADlH;AAAA,UACAK,WADA,UACAA,WADA;AAAA,UACaD,KADb,UACaA,KADb;AAAA,UACoBE,cADpB,UACoBA,cADpB;AAAA,UACoCC,eADpC,UACoCA,eADpC;AAAA,UACqDC,OADrD,UACqDA,OADrD;AAAA,UAC8DC,WAD9D,UAC8DA,WAD9D;AAAA,UAC2ER,WAD3E,UAC2EA,WAD3E;AAAA,UACwFS,gBADxF,UACwFA,gBADxF;;AAER,UAAIF,OAAJ,EAAa,OAAO,8BAAC,iBAAD,OAAP;AACb,UAAIJ,KAAJ,EAAW,OAAO,8BAAC,sBAAD,OAAP;AACX,UAAIM,gBAAJ,EAAsB,OAAO,IAAP;;AAEtB,aACED,gBAAgB,WAAhB,GACI,8BAAC,2BAAD,IAAmB,gBAAgBH,cAAnC,EAAmD,iBAAiBC,eAApE,EAAqF,aAAaN,WAAlG,EAA+G,aAAaI,WAA5H,GADJ,GAEI,8BAAC,iCAAD;AACA,wBAAgBC,cADhB;AAEA,qBAAaD;AAFb,QAHN;AAQD;;;EA7BmCM,gB,UAC7BC,S,GAAY;AACjBP,eAAaQ,iBAAUC,MADN;AAEjBR,kBAAgBO,iBAAUE,IAFT;AAGjBN,eAAaI,iBAAUG;AAHN,C;;;AA+BrB,IAAMC,kBAAkB,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,MAAMC,eAAe,4BAAgBF,MAAMG,GAAtB,CAArB;AACA,SAAO;AACLX,sBAAkBQ,MAAMG,GAAN,CAAUC,EAAV,CAAaZ,gBAD1B;AAELN,WAAOgB,gBAAgBA,aAAaG,QAA7B,IAAyCH,aAAaG,QAAb,CAAsBnB,KAFjE;AAGLH,iBAAa,iCAAqBiB,MAAMG,GAA3B,CAHR;AAILb,aAASY,gBAAgBA,aAAaZ,OAJjC;AAKLC,iBAAaW,gBAAgBA,aAAaI,KAAb,CAAmBf;AAL3C,GAAP;AAOD,CATD;;AAWA,IAAMgB,qBAAqB;AACzBtB;AADyB,CAA3B;;kBAIe,yBAAQc,eAAR,EAAyBQ,kBAAzB,EAA6C3B,uBAA7C,C","file":"narrative-routing-results.js","sourcesContent":["import React, { Component, PropTypes } from 'react'\nimport { connect } from 'react-redux'\n\nimport Loading from './loading'\nimport NarrativeProfileOptions from './narrative-profile-options'\nimport TabbedItineraries from './tabbed-itineraries'\nimport ErrorMessage from '../form/error-message'\n\nimport { getActiveSearch, getActiveItineraries } from '../../util/state'\nimport { setMainPanelContent } from '../../actions/ui'\n\nclass NarrativeRoutingResults extends Component {\n  static propTypes = {\n    customIcons: PropTypes.object,\n    itineraryClass: PropTypes.func,\n    routingType: PropTypes.string\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if ((!this.props.itineraries || this.props.itineraries.length === 0) &&\n        (nextProps.itineraries && nextProps.itineraries.length > 0)) {\n      this.props.setMainPanelContent(null)\n    }\n    if (!this.props.error && nextProps.error) this.props.setMainPanelContent(null)\n  }\n\n  render () {\n    const { customIcons, error, itineraryClass, itineraryFooter, pending, routingType, itineraries, mainPanelContent } = this.props\n    if (pending) return <Loading />\n    if (error) return <ErrorMessage />\n    if (mainPanelContent) return null\n\n    return (\n      routingType === 'ITINERARY'\n        ? <TabbedItineraries itineraryClass={itineraryClass} itineraryFooter={itineraryFooter} itineraries={itineraries} customIcons={customIcons} />\n        : <NarrativeProfileOptions\n          itineraryClass={itineraryClass}\n          customIcons={customIcons}\n        />\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const activeSearch = getActiveSearch(state.otp)\n  return {\n    mainPanelContent: state.otp.ui.mainPanelContent,\n    error: activeSearch && activeSearch.response && activeSearch.response.error,\n    itineraries: getActiveItineraries(state.otp),\n    pending: activeSearch && activeSearch.pending,\n    routingType: activeSearch && activeSearch.query.routingType\n  }\n}\n\nconst mapDispatchToProps = {\n  setMainPanelContent\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NarrativeRoutingResults)\n"]}