{"version":3,"sources":["transit-leg-body.js"],"names":["TransitLegBody","props","_onToggleStopsClick","setState","stopsExpanded","state","_onToggleAlertsClick","alertsExpanded","_onSummaryClick","setActiveLeg","legIndex","leg","customIcons","operator","agencyBrandingUrl","agencyId","agencyName","agencyUrl","alerts","mode","routeShortName","routeLongName","headsign","logoUrl","logo","iconMode","customModeForLeg","customMode","fontWeight","marginLeft","length","pluralize","animation","intermediateStops","duration","tripId","from","stopIndex","to","averageWait","Component","propTypes","PropTypes","object","number","func","mapStateToProps","ownProps","otp","config","operators","find","id","mapDispatchToProps","RouteName","key","IntermediateStops","stops","map","stop","k","name","array","AlertsBody","sort","a","b","effectiveStartDate","alert","effectiveDateString","daysAway","diff","Math","abs","format","calendar","sameElse","split","alertDescriptionText","str","list"],"mappings":"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","file":"transit-leg-body.js","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { VelocityTransitionGroup } from 'velocity-react'\nimport moment from 'moment'\n\nimport ViewTripButton from '../../viewers/view-trip-button'\nimport { getModeIcon } from '../../../util/itinerary'\nimport { formatDuration } from '../../../util/time'\n\n// TODO: support multi-route legs for profile routing\n\nclass TransitLegBody extends Component {\n\n  static propTypes = {\n    leg: PropTypes.object,\n    legIndex: PropTypes.number,\n    setActiveLeg: PropTypes.func\n  }\n\n  constructor (props) {\n    super(props)\n    this.state = {\n      alertsExpanded: false,\n      stopsExpanded: false\n    }\n  }\n\n  _onToggleStopsClick = () => {\n    this.setState({ stopsExpanded: !this.state.stopsExpanded })\n  }\n\n  _onToggleAlertsClick = () => {\n    this.setState({ alertsExpanded: !this.state.alertsExpanded })\n  }\n\n  _onSummaryClick = () => {\n    this.props.setActiveLeg(this.props.legIndex, this.props.leg)\n  }\n\n  render () {\n    const { customIcons, leg, operator } = this.props\n    const {\n      agencyBrandingUrl,\n      agencyId,\n      agencyName,\n      agencyUrl,\n      alerts,\n      mode,\n      routeShortName,\n      routeLongName,\n      headsign\n    } = leg\n    const { alertsExpanded, stopsExpanded } = this.state\n    // If the config contains an operator with a logo URL, prefer that over the\n    // one provided by OTP (which is derived from agency.txt#agency_branding_url)\n    const logoUrl = operator && operator.logo || agencyBrandingUrl\n    let iconMode = mode\n    if (typeof customIcons.customModeForLeg === 'function') {\n      const customMode = customIcons.customModeForLeg(leg)\n      if (customMode) iconMode = customMode\n    }\n\n    return (\n      <div className='leg-body'>\n        {/* The Route Icon/Name Bar; clickable to set as active leg */}\n        <div className='summary' onClick={this._onSummaryClick}>\n          <div className='route-name leg-description'>\n            <div>\n              <div className='icon'>{getModeIcon(iconMode, customIcons)}</div>\n            </div>\n            {routeShortName && (\n              <div>\n                <span className='route-short-name'>{routeShortName}</span>\n              </div>\n            )}\n            <div className='route-long-name'>\n              {routeLongName}\n              {headsign && <span> <span style={{ fontWeight: '200' }}>to</span> {headsign}</span>}\n            </div>\n          </div>\n        </div>\n\n        {/* Agency information */}\n        {\n          <div className='agency-info'>\n            Service operated by{' '}\n            <a href={agencyUrl} target='_blank'>\n              {agencyName}{logoUrl &&\n                <img\n                  src={logoUrl}\n                  height={25}\n                  style={{ marginLeft: '5px' }} />\n              }\n            </a>\n          </div>\n        }\n\n        {/* Alerts toggle */}\n        {alerts && alerts.length > 0 && (\n          <div onClick={this._onToggleAlertsClick} className='transit-alerts-toggle'>\n            <i className='fa fa-exclamation-triangle' /> {alerts.length} {pluralize('alert', alerts)}\n            {' '}\n            <i className={`fa fa-caret-${this.state.alertsExpanded ? 'up' : 'down'}`} />\n          </div>\n        )}\n\n        {/* The Alerts body, if visible */}\n        <VelocityTransitionGroup enter={{animation: 'slideDown'}} leave={{animation: 'slideUp'}}>\n          {alertsExpanded && <AlertsBody alerts={leg.alerts} />}\n        </VelocityTransitionGroup>\n        {/* The \"Ride X Min / X Stops\" Row, including IntermediateStops body */}\n        {leg.intermediateStops && leg.intermediateStops.length > 0 && (\n          <div className='transit-leg-details'>\n\n            {/* The header summary row, clickable to expand intermediate stops */}\n            <div onClick={this._onToggleStopsClick} className='header'>\n              {leg.duration && <span>Ride {formatDuration(leg.duration)}</span>}\n              {leg.intermediateStops && (\n                <span>\n                  {' / '}\n                  {leg.intermediateStops.length + 1}\n                  {' stops '}\n                  <i className={`fa fa-caret-${this.state.stopsExpanded ? 'up' : 'down'}`} />\n                </span>\n              )}\n\n              {/* The ViewTripButton. TODO: make configurable */}\n              <ViewTripButton\n                tripId={leg.tripId}\n                fromIndex={leg.from.stopIndex}\n                toIndex={leg.to.stopIndex}\n              />\n            </div>\n            {/* IntermediateStops expanded body */}\n            <VelocityTransitionGroup enter={{animation: 'slideDown'}} leave={{animation: 'slideUp'}}>\n              {stopsExpanded ? <IntermediateStops stops={leg.intermediateStops} /> : null }\n            </VelocityTransitionGroup>\n\n            {/* Average wait details, if present */}\n            {leg.averageWait && <span>Typical Wait: {formatDuration(leg.averageWait)}</span>}\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\n// Connect to the redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    operator: state.otp.config.operators.find(operator => operator.id === ownProps.leg.agencyId)\n  }\n}\n\nconst mapDispatchToProps = {}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TransitLegBody)\n\nclass RouteName extends Component {\n  render () {\n    const { routeShortName, routeLongName, headsign, key, customIcons } = this.props\n\n    return (\n      <div key={key} className='route-name leg-description'> {/* Route Name/Badge row; clickable to set as active leg */}\n        <div>\n          <div className='icon'>{getModeIcon(mode, customIcons)}</div>\n        </div>\n        {routeShortName && (\n          <div>\n            <span className='route-short-name'>{routeShortName}</span>\n          </div>\n        )}\n        <div className='route-long-name'>\n          {routeLongName}\n          {headsign && <span> <span style={{ fontWeight: '200' }}>to</span> {headsign}</span>}\n        </div>\n      </div>\n    )\n  }\n}\n\nclass IntermediateStops extends Component {\n  static propTypes = {\n    stops: PropTypes.array\n  }\n\n  render () {\n    return (\n      <div className='intermediate-stops'>\n        {this.props.stops.map((stop, k) => {\n          return <div className='stop-row' key={k}>\n            <div className='stop-marker'>&bull;</div>\n            <div className='stop-name'>{stop.name}</div>\n          </div>\n        })}\n      </div>\n    )\n  }\n}\n\nclass AlertsBody extends Component {\n  static propTypes = {\n    alerts: PropTypes.array\n  }\n\n  render () {\n    return (\n      <div className='transit-alerts'>\n        {this.props.alerts.sort((a, b) => (a.effectiveStartDate < b.effectiveStartDate) ? 1 : -1).map((alert, k) => {\n          const effectiveStartDate = moment(alert.effectiveStartDate)\n          let effectiveDateString = 'Effective as of '\n          const daysAway = moment().diff(effectiveStartDate, 'days')\n          if (Math.abs(daysAway) <= 1) effectiveDateString += moment(effectiveStartDate).format('h:MMa, ')\n          effectiveDateString += effectiveStartDate.calendar(null, { sameElse: 'MMMM D, YYYY' }).split(' at')[0]\n          return (\n            <div key={k} className='transit-alert'>\n              <div className='alert-icon'><i className='fa fa-exclamation-triangle' /></div>\n              <div className='alert-body'>{alert.alertDescriptionText}</div>\n              <div className='effective-date'>{effectiveDateString}</div>\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n}\n\n// TODO use pluralize that for internationalization (and complex plurals, i.e., not just adding 's')\nfunction pluralize (str, list) {\n  return `${str}${list.length > 1 ? 's' : ''}`\n}\n"]}