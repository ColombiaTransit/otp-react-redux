{"version":3,"sources":["narrative-profile-options.js"],"names":["NarrativeProfileOptions","props","pending","itineraryClass","query","activeItinerary","options","itineraries","customIcons","length","map","itinerary","index","React","createElement","key","active","routingType","Component","propTypes","PropTypes","array","object","func","bool","activeOption","number","setActiveItinerary","setActiveLeg","setActiveStep","defaultProps","DefaultItinerary","mapStateToProps","state","ownProps","activeSearch","otp","response","profile","activeLeg","activeStep","mapDispatchToProps","dispatch","leg","step"],"mappings":"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","file":"narrative-profile-options.js","sourcesContent":["import React, { Component, PropTypes } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setActiveItinerary, setActiveLeg, setActiveStep } from '../../actions/narrative'\nimport DefaultItinerary from './default/default-itinerary'\nimport NarrativeProfileSummary from './narrative-profile-summary'\nimport Loading from './loading'\nimport { getActiveSearch } from '../../util/state'\nimport { profileOptionsToItineraries } from '../../util/profile'\n\nclass NarrativeProfileOptions extends Component {\n  static propTypes = {\n    options: PropTypes.array,\n    query: PropTypes.object,\n    itineraryClass: PropTypes.func,\n    pending: PropTypes.bool,\n    activeOption: PropTypes.number,\n    setActiveItinerary: PropTypes.func,\n    setActiveLeg: PropTypes.func,\n    setActiveStep: PropTypes.func,\n    customIcons: PropTypes.object\n  }\n\n  static defaultProps = {\n    itineraryClass: DefaultItinerary\n  }\n\n  render () {\n    const { pending, itineraryClass, query, activeItinerary } = this.props\n    if (pending) return <Loading />\n\n    const options = this.props.options\n    if (!options) return null\n\n    const itineraries = profileOptionsToItineraries(options, query)\n\n    return (\n      <div className='options profile'>\n        <div className='header'>Your best options:</div>\n        <NarrativeProfileSummary options={options} customIcons={this.props.customIcons} />\n        <div className='header'>We found <strong>{options.length}</strong> total options:</div>\n        {itineraries.map((itinerary, index) => {\n          return React.createElement(itineraryClass, {\n            itinerary,\n            index,\n            key: index,\n            active: index === activeItinerary,\n            routingType: 'PROFILE',\n            ...this.props\n          })\n        })}\n      </div>\n    )\n  }\n}\n\n// connect to the redux store\nconst mapStateToProps = (state, ownProps) => {\n  const activeSearch = getActiveSearch(state.otp)\n  // const { activeItinerary, activeLeg, activeStep } = activeSearch ? activeSearch.activeItinerary : {}\n  const pending = activeSearch && activeSearch.pending\n  return {\n    options:\n      activeSearch &&\n      activeSearch.response &&\n      activeSearch.response.otp\n        ? activeSearch.response.otp.profile\n        : null,\n    pending,\n    activeItinerary: activeSearch && activeSearch.activeItinerary,\n    activeLeg: activeSearch && activeSearch.activeLeg,\n    activeStep: activeSearch && activeSearch.activeStep,\n    query: activeSearch && activeSearch.query\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    setActiveItinerary: (index) => { dispatch(setActiveItinerary({ index })) },\n    setActiveLeg: (index, leg) => { dispatch(setActiveLeg({ index, leg })) },\n    setActiveStep: (index, step) => { dispatch(setActiveStep({ index, step })) }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NarrativeProfileOptions)\n"]}