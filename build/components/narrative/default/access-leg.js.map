{"version":3,"sources":["access-leg.js"],"names":["AccessLeg","_onLegClick","e","props","active","leg","index","setActiveLeg","step","activeStep","setActiveStep","mode","duration","distance","steps","map","stepIndex","stepIsActive","_onStepClick","Component","propTypes","PropTypes","number","object","func"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;;;AAEA;;;;AACA;;AACA;;AACA;;;;IAEqBA,S;;;;;;;;;;;;;;kNAQnBC,W,GAAc,UAACC,CAAD,EAAO;AAAA,wBACwB,MAAKC,KAD7B;AAAA,UACZC,MADY,eACZA,MADY;AAAA,UACJC,GADI,eACJA,GADI;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,YADR,eACQA,YADR;;AAEnB,UAAIH,MAAJ,EAAY;AACVG,qBAAa,IAAb;AACD,OAFD,MAEO;AACLA,qBAAaD,KAAb,EAAoBD,GAApB;AACD;AACF,K;;;;;iCAEaH,C,EAAGM,I,EAAMF,K,EAAO;AAC5B,UAAIA,UAAU,KAAKH,KAAL,CAAWM,UAAzB,EAAqC;AACnC,aAAKN,KAAL,CAAWO,aAAX,CAAyB,IAAzB;AACD,OAFD,MAEO;AACL,aAAKP,KAAL,CAAWO,aAAX,CAAyBJ,KAAzB,EAAgCE,IAAhC;AACD;AACF;;;6BAES;AAAA;;AAAA,mBACmC,KAAKL,KADxC;AAAA,UACAC,MADA,UACAA,MADA;AAAA,UACQK,UADR,UACQA,UADR;AAAA,UACoBH,KADpB,UACoBA,KADpB;AAAA,UAC2BD,GAD3B,UAC2BA,GAD3B;;AAER,aACE;AAAA;AAAA;AACE,eAAKC,KADP;AAEE,8BAAiBF,SAAS,SAAT,GAAqB,EAAtC,iBAFF;AAGE;AAAA;AAAA;AACE,uBAAU,QADZ;AAEE,qBAAS,KAAKH,WAFhB;AAGE;AAAA;AAAA;AAAM,0CAAC,cAAD,IAAM,kBAAeG,SAAS,MAAT,GAAkB,OAAjC,CAAN;AAAN,WAHF;AAIE;AAAA;AAAA;AAAM;AAAA;AAAA;AAAIC,kBAAIM;AAAR;AAAN,WAJF;AAKG,aALH;AAME;AAAA;AAAA,cAAM,WAAU,cAAhB;AAAgC,sCAAeN,IAAIO,QAAnB;AAAhC,WANF;AAOG,aAPH;AAQE;AAAA;AAAA,cAAM,WAAU,cAAhB;AAAA;AAAiC,0CAAeP,IAAIQ,QAAnB,CAAjC;AAAA;AAAA;AARF,SAHF;AAaGT,kBACC;AAAA;AAAA,YAAK,WAAU,cAAf;AACE;AAAA;AAAA,cAAK,WAAU,YAAf;AACGC,gBAAIS,KAAJ,CAAUC,GAAV,CAAc,UAACP,IAAD,EAAOQ,SAAP,EAAqB;AAClC,kBAAMC,eAAeR,eAAeO,SAApC;AACA,qBACE;AAAA;AAAA;AACE,uBAAKA,SADP;AAEE,wCAAmBC,eAAe,QAAf,GAA0B,EAA7C,CAFF;AAGE,2BAAS,iBAACf,CAAD;AAAA,2BAAO,OAAKgB,YAAL,CAAkBhB,CAAlB,EAAqBM,IAArB,EAA2BQ,SAA3B,CAAP;AAAA,mBAHX;AAIE;AAAA;AAAA,oBAAM,WAAU,eAAhB;AAAiC,gDAAeR,KAAKK,QAApB;AAAjC,iBAJF;AAKE;AAAA;AAAA,oBAAM,WAAU,WAAhB;AAA6B,sDAAoBL,IAApB;AAA7B;AALF,eADF;AASD,aAXA;AADH;AADF,SAdJ;AA+BE,sCAAC,2BAAD,IAAmB,KAAKH,GAAxB;AA/BF,OADF;AAmCD;;;EA9DoCc,gB,UAC9BC,S,GAAY;AACjBX,cAAYY,iBAAUC,MADL;AAEjBjB,OAAKgB,iBAAUE,MAFE;AAGjBhB,gBAAcc,iBAAUG,IAHP;AAIjBd,iBAAeW,iBAAUG;AAJR,C;kBADAxB,S","file":"access-leg.js","sourcesContent":["import React, {PropTypes, Component} from 'react'\n\nimport Icon from '../icon'\n\nimport LegDiagramPreview from '../leg-diagram-preview'\nimport { distanceString } from '../../../util/distance'\nimport { getStepInstructions } from '../../../util/itinerary'\nimport { formatDuration } from '../../../util/time'\n\nexport default class AccessLeg extends Component {\n  static propTypes = {\n    activeStep: PropTypes.number,\n    leg: PropTypes.object,\n    setActiveLeg: PropTypes.func,\n    setActiveStep: PropTypes.func\n  }\n\n  _onLegClick = (e) => {\n    const {active, leg, index, setActiveLeg} = this.props\n    if (active) {\n      setActiveLeg(null)\n    } else {\n      setActiveLeg(index, leg)\n    }\n  }\n\n  _onStepClick (e, step, index) {\n    if (index === this.props.activeStep) {\n      this.props.setActiveStep(null)\n    } else {\n      this.props.setActiveStep(index, step)\n    }\n  }\n\n  render () {\n    const { active, activeStep, index, leg } = this.props\n    return (\n      <div\n        key={index}\n        className={`leg${active ? ' active' : ''} access-leg`}>\n        <button\n          className='header'\n          onClick={this._onLegClick}>\n          <span><Icon type={`caret-${active ? 'down' : 'right'}`} /></span>\n          <span><b>{leg.mode}</b></span>\n          {' '}\n          <span className='leg-duration'>{formatDuration(leg.duration)}</span>\n          {' '}\n          <span className='leg-distance'>({distanceString(leg.distance)})</span>\n        </button>\n        {active &&\n          <div className='step-by-step'>\n            <div className='access-leg'>\n              {leg.steps.map((step, stepIndex) => {\n                const stepIsActive = activeStep === stepIndex\n                return (\n                  <button\n                    key={stepIndex}\n                    className={`step ${stepIsActive ? 'active' : ''}`}\n                    onClick={(e) => this._onStepClick(e, step, stepIndex)}>\n                    <span className='step-distance'>{distanceString(step.distance)}</span>\n                    <span className='step-text'>{getStepInstructions(step)}</span>\n                  </button>\n                )\n              })}\n            </div>\n          </div>\n        }\n        <LegDiagramPreview leg={leg} />\n      </div>\n    )\n  }\n}\n"]}