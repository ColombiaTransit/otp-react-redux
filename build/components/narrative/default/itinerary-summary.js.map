{"version":3,"sources":["itinerary-summary.js"],"names":["ItinerarySummary","itinerary","props","blocks","legs","forEach","leg","i","length","transitLeg","push","mode","routeShortName","routeLongName","Component","propTypes","PropTypes","object"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;;;;;IAEqBA,gB;;;;;;;;;;6BAKT;AAAA,UACAC,SADA,GACc,KAAKC,KADnB,CACAD,SADA;;;AAGR,UAAME,SAAS,EAAf;AACAF,gBAAUG,IAAV,CAAeC,OAAf,CAAuB,UAACC,GAAD,EAAMC,CAAN,EAAY;AACjC;AACA,YACEA,IAAI,CAAJ,IACAA,IAAIN,UAAUG,IAAV,CAAeI,MAAf,GAAwB,CAD5B,IAEA,CAACF,IAAIG,UAFL,IAGAR,UAAUG,IAAV,CAAeG,IAAI,CAAnB,EAAsBE,UAHtB,IAIAR,UAAUG,IAAV,CAAeG,IAAI,CAAnB,EAAsBE,UALxB,EAKoC;AAClC,iBAAO,IAAP;AACD;;AAED;AACAN,eAAOO,IAAP,CACE;AAAA;AAAA,YAAK,WAAU,0BAAf;AACE,wCAAC,kBAAD,IAAU,MAAMJ,IAAIK,IAApB;AADF,SADF;;AAMA;AACA,YAAIL,IAAIG,UAAR,EAAoB;AAClBN,iBAAOO,IAAP,CACE;AAAA;AAAA,cAAK,WAAU,0BAAf;AACE;AAAA;AAAA,gBAAM,WAAU,kBAAhB;AACGJ,kBAAIM,cAAJ,IAAsBN,IAAIO;AAD7B;AADF,WADF;AAOD;;AAED;AACA,YAAIN,IAAIN,UAAUG,IAAV,CAAeI,MAAf,GAAwB,CAAhC,EAAmC;AACjCL,iBAAOO,IAAP,CACE;AAAA;AAAA,cAAK,WAAU,2BAAf;AAAA;AAAA,WADF;AAGD;AACF,OAnCD;;AAqCA,aAAO;AAAA;AAAA,UAAK,WAAU,SAAf;AAA0BP;AAA1B,OAAP;AACD;;;EA/C2CW,gB,UACrCC,S,GAAY;AACjBd,aAAWe,iBAAUC;AADJ,C;kBADAjB,gB","file":"itinerary-summary.js","sourcesContent":["import React, { Component, PropTypes } from 'react'\n\nimport ModeIcon from '../../icons/mode-icon'\n\nexport default class ItinerarySummary extends Component {\n  static propTypes = {\n    itinerary: PropTypes.object\n  }\n\n  render () {\n    const { itinerary } = this.props\n\n    const blocks = []\n    itinerary.legs.forEach((leg, i) => {\n      // Skip mid-itinerary walk transfer legs\n      if (\n        i > 0 &&\n        i < itinerary.legs.length - 1 &&\n        !leg.transitLeg &&\n        itinerary.legs[i - 1].transitLeg &&\n        itinerary.legs[i + 1].transitLeg) {\n        return null\n      }\n\n      // Add the mode icon\n      blocks.push(\n        <div className='summary-block mode-block'>\n          <ModeIcon mode={leg.mode} />\n        </div>\n      )\n\n      // If a transit leg, add the name (preferably short; long if needed)\n      if (leg.transitLeg) {\n        blocks.push(\n          <div className='summary-block name-block'>\n            <span className='route-short-name'>\n              {leg.routeShortName || leg.routeLongName}\n            </span>\n          </div>\n        )\n      }\n\n      // If not the last leg, add a '►'\n      if (i < itinerary.legs.length - 1) {\n        blocks.push(\n          <div className='summary-block arrow-block'>►</div>\n        )\n      }\n    })\n\n    return <div className='summary'>{blocks}</div>\n  }\n}\n"]}