{"version":3,"sources":["itinerary-carousel.js"],"names":["ItineraryCarousel","state","_onItineraryClick","props","onClick","_onLeftClick","activeItinerary","itineraries","setActiveItinerary","length","_onRightClick","_onSwipe","index","indexLatest","itineraryClass","hideHeader","pending","showProfileSummary","views","push","padding","fontSize","marginBottom","profileOptions","concat","map","itinerary","React","createElement","key","expanded","Component","propTypes","PropTypes","array","bool","number","func","setActiveLeg","setActiveStep","companies","string","defaultProps","DefaultItinerary","mapStateToProps","ownProps","activeSearch","otp","response","plan","profile","activeLeg","activeStep","currentQuery","timeFormat","config","mapDispatchToProps","dispatch","leg","step"],"mappings":"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","file":"itinerary-carousel.js","sourcesContent":["import React, { Component, PropTypes } from 'react'\nimport { Button } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport SwipeableViews from 'react-swipeable-views'\n\nimport { setActiveItinerary, setActiveLeg, setActiveStep } from '../../actions/narrative'\nimport Icon from './icon'\nimport DefaultItinerary from './default/default-itinerary'\nimport Loading from './loading'\nimport NarrativeProfileSummary from './narrative-profile-summary'\nimport { getActiveItineraries, getActiveSearch } from '../../util/state'\nimport { profileOptionsToItineraries } from '../../util/profile'\nimport { getTimeFormat } from '../../util/time'\n\nclass ItineraryCarousel extends Component {\n  state = {}\n  static propTypes = {\n    itineraries: PropTypes.array,\n    pending: PropTypes.bool,\n    activeItinerary: PropTypes.number,\n    hideHeader: PropTypes.bool,\n    itineraryClass: PropTypes.func,\n    onClick: PropTypes.func,\n    setActiveItinerary: PropTypes.func,\n    setActiveLeg: PropTypes.func,\n    setActiveStep: PropTypes.func,\n    expanded: PropTypes.bool,\n    showProfileSummary: PropTypes.bool,\n    profileOptions: PropTypes.array,\n    companies: PropTypes.string\n  }\n\n  static defaultProps = {\n    itineraryClass: DefaultItinerary\n  }\n\n  _onItineraryClick = () => {\n    if (typeof this.props.onClick === 'function') this.props.onClick()\n  }\n\n  _onLeftClick = () => {\n    const { activeItinerary, itineraries, setActiveItinerary } = this.props\n    setActiveItinerary(activeItinerary === 0 ? itineraries.length - 1 : activeItinerary - 1)\n  }\n\n  _onRightClick = () => {\n    const { activeItinerary, itineraries, setActiveItinerary } = this.props\n    setActiveItinerary(activeItinerary === itineraries.length - 1 ? 0 : activeItinerary + 1)\n  }\n\n  _onSwipe = (index, indexLatest) => {\n    this.props.setActiveItinerary(index)\n  }\n\n  render () {\n    const { activeItinerary, itineraries, itineraryClass, hideHeader, pending, showProfileSummary } = this.props\n    if (pending) return <Loading />\n    if (!itineraries) return null\n\n    let views = []\n    if (showProfileSummary) {\n      views.push(<div style={{ padding: '6px 10px' }}>\n        <div style={{ fontSize: '13px', marginBottom: '2px' }}>Your Best Options (Swipe to View All)</div>\n        <NarrativeProfileSummary options={this.props.profileOptions} />\n      </div>)\n    }\n    views = views.concat(itineraries.map((itinerary, index) => {\n      return React.createElement(itineraryClass, {\n        itinerary,\n        index,\n        key: index,\n        expanded: this.props.expanded,\n        onClick: this._onItineraryClick,\n        ...this.props\n      })\n    }))\n\n    return (\n      <div className='options itinerary'>\n        {hideHeader\n          ? null\n          : <div className='header carousel-header'>\n            <Button\n              className='carousel-left-button carousel-button'\n              disabled={activeItinerary === 0}\n              onClick={this._onLeftClick}>\n              <Icon type='arrow-left' />\n            </Button>\n            <div\n              className='text-center carousel-header-text'>\n              {activeItinerary + 1} of {itineraries.length}\n            </div>\n            <Button\n              disabled={activeItinerary === itineraries.length - 1}\n              className='pull-right carousel-right-button carousel-button'\n              onClick={this._onRightClick}>\n              <Icon type='arrow-right' />\n            </Button>\n          </div>\n        }\n        <SwipeableViews\n          index={activeItinerary}\n          onChangeIndex={this._onSwipe}\n        >{views}</SwipeableViews>\n      </div>\n    )\n  }\n}\n\n// connect to the redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  const activeSearch = getActiveSearch(state.otp)\n  let itineraries = null\n  let profileOptions = null\n  let showProfileSummary = false\n  if (activeSearch && activeSearch.response && activeSearch.response.plan) {\n    itineraries = getActiveItineraries(state.otp)\n  } else if (activeSearch && activeSearch.response && activeSearch.response.otp) {\n    profileOptions = activeSearch.response.otp.profile\n    itineraries = profileOptionsToItineraries(profileOptions)\n    showProfileSummary = true\n  }\n\n  const pending = activeSearch && activeSearch.pending\n  return {\n    itineraries,\n    profileOptions,\n    pending,\n    showProfileSummary,\n    activeItinerary: activeSearch && activeSearch.activeItinerary,\n    activeLeg: activeSearch && activeSearch.activeLeg,\n    activeStep: activeSearch && activeSearch.activeStep,\n    companies: state.otp.currentQuery.companies,\n    timeFormat: getTimeFormat(state.otp.config)\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    setActiveItinerary: (index) => { dispatch(setActiveItinerary({ index })) },\n    setActiveLeg: (index, leg) => { dispatch(setActiveLeg({ index, leg })) },\n    setActiveStep: (index, step) => { dispatch(setActiveStep({ index, step })) }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItineraryCarousel)\n"]}