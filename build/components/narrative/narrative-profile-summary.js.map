{"version":3,"sources":["narrative-profile-summary.js"],"names":["NarrativeProfileSummary","options","props","bestTransit","walk","bicycle","bicycleRent","forEach","option","i","transit","time","modes","length","indexOf","summary","icon","title","map","k","backgroundColor","width","display","verticalAlign","marginRight","padding","textAlign","color","height","fill","marginTop","customIcons","fontSize","textTransform","letterSpacing","fontWeight","Math","round","Component","propTypes","PropTypes","array","object"],"mappings":"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","file":"narrative-profile-summary.js","sourcesContent":["import React, { Component, PropTypes } from 'react'\n\nimport { getModeIcon } from '../../util/itinerary'\n\nexport default class NarrativeProfileSummary extends Component {\n  static propTypes = {\n    options: PropTypes.array,\n    customIcons: PropTypes.object\n  }\n\n  render () {\n    const { options } = this.props\n\n    let bestTransit = 0\n    let walk = 0\n    let bicycle = 0\n    let bicycleRent = 0\n\n    options.forEach((option, i) => {\n      if (option.transit) {\n        if (option.time < bestTransit || bestTransit === 0) {\n          bestTransit = option.time\n        }\n      } else {\n        if (option.modes.length === 1 && option.modes[0] === 'bicycle') bicycle = option.time\n        else if (option.modes.length === 1 && option.modes[0] === 'walk') walk = option.time\n        else if (option.modes.indexOf('bicycle_rent') !== -1) bicycleRent = option.time\n      }\n    })\n\n    const summary = [\n      {\n        icon: 'BUS',\n        title: 'Transit',\n        time: bestTransit\n      }, {\n        icon: 'BICYCLE',\n        title: 'Bicycle',\n        time: bicycle\n      }, {\n        icon: 'BICYCLE_RENT',\n        title: 'Bikeshare',\n        time: bicycleRent\n      }, {\n        icon: 'WALK',\n        title: 'Walk',\n        time: walk\n      }\n    ]\n\n    return (\n      <div style={{ }}>\n        {summary.map((option, k) => {\n          return (\n            <div key={k} style={{\n              backgroundColor: option.time > 0 ? '#084C8D' : '#bbb',\n              width: '22%',\n              display: 'inline-block',\n              verticalAlign: 'top',\n              marginRight: (k < 3 ? '4%' : 0),\n              padding: '3px',\n              textAlign: 'center',\n              color: 'white' }}\n            >\n              <div style={{ height: '24px', width: '24px', display: 'inline-block', fill: 'white', marginTop: '6px', textAlign: 'center' }}>{getModeIcon(option.icon, this.props.customIcons)}</div>\n              <div style={{ fontSize: '10px', textAlign: 'center', marginTop: '2px', textTransform: 'uppercase', letterSpacing: '2px' }}>{option.title}</div>\n              <div style={{ textAlign: 'center', marginTop: '2px', height: '30px' }}>\n                {option.time > 0\n                  ? <span><span style={{ fontSize: 24, fontWeight: '500' }}>{Math.round(option.time / 60)}</span> min</span>\n                  : <span style={{ fontSize: '11px' }}>(Not Found)</span>\n                }\n              </div>\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n}\n"]}