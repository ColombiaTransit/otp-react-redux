{"version":3,"sources":["app-menu.js"],"names":["AppMenu","reactRouterConfig","props","href","basename","window","location","setMainPanelContent","MainPanelContent","ROUTE_VIEWER","Component","propTypes","PropTypes","func","mapStateToProps","state","ownProps","otp","config","reactRouter","mapDispatchToProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;AAEA;;;;AAEA;;;;AAEA;;IAEMA,O;;;;;;;;;;6BAKM;AAAA;;AAAA,UACAC,iBADA,GACsB,KAAKC,KAD3B,CACAD,iBADA;;;AAGR,UAAIE,OAAO,GAAX;AACA,UAAIF,qBAAqBA,kBAAkBG,QAA3C,EAAqD;AACnDD,gBAAQF,kBAAkBG,QAA1B;AACD;;AAED,aACE;AAAA;AAAA,UAAK,WAAU,UAAf;AACE;AAAC,wCAAD;AAAA,YAAgB,OAAQ,8BAAC,cAAD,IAAM,MAAK,MAAX,GAAxB,EAA+C,aAA/C,EAAuD,WAAU,iBAAjE,EAAmF,IAAG,UAAtF;AACE;AAAC,oCAAD;AAAA,cAAU,SAAS,mBAAM;AACvBC,uBAAOC,QAAP,CAAgBH,IAAhB,GAAuBA,IAAvB;AACD,eAFD;AAEG,0CAAC,cAAD,IAAM,MAAK,MAAX,GAFH;AAAA;AAAA,WADF;AAIE;AAAC,oCAAD;AAAA,cAAU,SAAS,mBAAM;AACvB,uBAAKD,KAAL,CAAWK,mBAAX,CAA+BC,qBAAiBC,YAAhD;AACD,eAFD;AAEG,0CAAC,cAAD,IAAM,MAAK,KAAX,GAFH;AAAA;AAAA;AAJF;AADF,OADF;AAYD;;;EAzBmBC,gB,UACbC,S,GAAY;AACjBJ,uBAAqBK,oBAAUC;AADd,C;;AA2BrB;;AAEA,IAAMC,kBAAkB,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,SAAO;AACLf,uBAAmBc,MAAME,GAAN,CAAUC,MAAV,CAAiBC;AAD/B,GAAP;AAGD,CAJD;;AAMA,IAAMC,qBAAqB;AACzBb;AADyB,CAA3B;;kBAIe,yBAAQO,eAAR,EAAyBM,kBAAzB,EAA6CpB,OAA7C,C","file":"app-menu.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { DropdownButton, MenuItem } from 'react-bootstrap'\n\nimport Icon from '../narrative/icon'\n\nimport { MainPanelContent, setMainPanelContent } from '../../actions/ui'\n\n// TODO: make menu items configurable via props/config\n\nclass AppMenu extends Component {\n  static propTypes = {\n    setMainPanelContent: PropTypes.func\n  }\n\n  render () {\n    const { reactRouterConfig } = this.props\n\n    let href = '/'\n    if (reactRouterConfig && reactRouterConfig.basename) {\n      href += reactRouterConfig.basename\n    }\n\n    return (\n      <div className='app-menu'>\n        <DropdownButton title={(<Icon type='bars' />)} noCaret className='app-menu-button' id='app-menu'>\n          <MenuItem onClick={() => {\n            window.location.href = href\n          }}><Icon type='undo' /> Start Over</MenuItem>\n          <MenuItem onClick={() => {\n            this.props.setMainPanelContent(MainPanelContent.ROUTE_VIEWER)\n          }}><Icon type='bus' /> Route Viewer</MenuItem>\n        </DropdownButton>\n      </div>\n    )\n  }\n}\n\n// connect to the redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    reactRouterConfig: state.otp.config.reactRouter\n  }\n}\n\nconst mapDispatchToProps = {\n  setMainPanelContent\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppMenu)\n"]}