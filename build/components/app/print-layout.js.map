{"version":3,"sources":["print-layout.js"],"names":["PrintLayout","props","_toggleMap","setState","mapVisible","state","_print","window","print","location","search","parseUrlQueryString","itinerary","companies","float","Component","propTypes","PropTypes","object","parseQueryString","func","mapStateToProps","ownProps","otp","currentQuery","mapDispatchToProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;IAEMA,W;;;AAMJ,uBAAaC,KAAb,EAAoB;AAAA;;AAAA,gJACZA,KADY;;AAAA,UAOpBC,UAPoB,GAOP,YAAM;AACjB,YAAKC,QAAL,CAAc,EAAEC,YAAY,CAAC,MAAKC,KAAL,CAAWD,UAA1B,EAAd;AACD,KATmB;;AAAA,UAWpBE,MAXoB,GAWX,YAAM;AACbC,aAAOC,KAAP;AACD,KAbmB;;AAElB,UAAKH,KAAL,GAAa;AACXD,kBAAY;AADD,KAAb;AAFkB;AAKnB;;;;wCAUoB;AAAA,UACXK,QADW,GACE,KAAKR,KADP,CACXQ,QADW;AAEnB;;AACA,UAAIA,YAAYA,SAASC,MAAzB,EAAiC;AAC/B,aAAKT,KAAL,CAAWU,mBAAX,CAA+BF,SAASC,MAAxC;AACD;AACF;;;6BAES;AAAA,mBACyB,KAAKT,KAD9B;AAAA,UACAW,SADA,UACAA,SADA;AAAA,UACWC,SADX,UACWA,SADX;;AAER,aACE;AAAA;AAAA,UAAK,WAAU,kBAAf;AAEE;AAAA;AAAA,YAAK,WAAU,QAAf;AACE;AAAA;AAAA,cAAK,OAAO,EAAEC,OAAO,OAAT,EAAZ;AACE;AAAC,oCAAD;AAAA,gBAAQ,QAAO,OAAf,EAAuB,SAAS,KAAKZ,UAArC;AACE,mDAAG,WAAU,WAAb,GADF;AAAA;AAAA,aADF;AAIG,eAJH;AAKE;AAAC,oCAAD;AAAA,gBAAQ,QAAO,OAAf,EAAuB,SAAS,KAAKI,MAArC;AACE,mDAAG,WAAU,aAAb,GADF;AAAA;AAAA;AALF,WADF;AAAA;AAAA,SAFF;AAgBG,aAAKD,KAAL,CAAWD,UAAX,IACC;AAAA;AAAA,YAAK,WAAU,eAAf;AACE;AAAC,6BAAD;AAAA;AACE,0CAAC,2BAAD,OADF;AAEE,0CAAC,0BAAD;AAFF;AADF,SAjBJ;AA0BGQ,qBAAa,8BAAC,4BAAD,IAAoB,WAAWA,SAA/B,EAA0C,WAAWC,SAArD;AA1BhB,OADF;AA8BD;;;EA7DuBE,gB,UACjBC,S,GAAY;AACjBJ,aAAWK,oBAAUC,MADJ;AAEjBC,oBAAkBF,oBAAUG;AAFX,C;;AA+DrB;;AAEA,IAAMC,kBAAkB,SAAlBA,eAAkB,CAAChB,KAAD,EAAQiB,QAAR,EAAqB;AAC3C,SAAO;AACLV,eAAW,+BAAmBP,MAAMkB,GAAzB,CADN;AAELV,eAAWR,MAAMkB,GAAN,CAAUC,YAAV,CAAuBX;AAF7B,GAAP;AAID,CALD;;AAOA,IAAMY,qBAAqB;AACzBd;AADyB,CAA3B;;kBAIe,yBAAQU,eAAR,EAAyBI,kBAAzB,EAA6CzB,WAA7C,C","file":"print-layout.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Button } from 'react-bootstrap'\n\nimport BaseMap from '../map/base-map'\nimport EndpointsOverlay from '../map/endpoints-overlay'\nimport TransitiveOverlay from '../map/transitive-overlay'\nimport PrintableItinerary from '../narrative/printable/printable-itinerary'\nimport { parseUrlQueryString } from '../../actions/form'\nimport { getActiveItinerary } from '../../util/state'\n\nclass PrintLayout extends Component {\n  static propTypes = {\n    itinerary: PropTypes.object,\n    parseQueryString: PropTypes.func\n  }\n\n  constructor (props) {\n    super(props)\n    this.state = {\n      mapVisible: true\n    }\n  }\n\n  _toggleMap = () => {\n    this.setState({ mapVisible: !this.state.mapVisible })\n  }\n\n  _print = () => {\n    window.print()\n  }\n\n  componentDidMount () {\n    const { location } = this.props\n    // Parse the URL query parameters, if present\n    if (location && location.search) {\n      this.props.parseUrlQueryString(location.search)\n    }\n  }\n\n  render () {\n    const { itinerary, companies } = this.props\n    return (\n      <div className='otp print-layout'>\n        {/* The header bar, including the Toggle Map and Print buttons */}\n        <div className='header'>\n          <div style={{ float: 'right' }}>\n            <Button bsSize='small' onClick={this._toggleMap}>\n              <i className='fa fa-map' /> Toggle Map\n            </Button>\n            {' '}\n            <Button bsSize='small' onClick={this._print}>\n              <i className='fa fa-print' /> Print\n            </Button>\n          </div>\n          Itinerary\n        </div>\n\n        {/* The map, if visible */}\n        {this.state.mapVisible &&\n          <div className='map-container'>\n            <BaseMap>\n              <TransitiveOverlay />\n              <EndpointsOverlay />\n            </BaseMap>\n          </div>\n        }\n\n        {/* The main itinerary body */}\n        {itinerary && <PrintableItinerary itinerary={itinerary} companies={companies} />}\n      </div>\n    )\n  }\n}\n\n// connect to the redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    itinerary: getActiveItinerary(state.otp),\n    companies: state.otp.currentQuery.companies\n  }\n}\n\nconst mapDispatchToProps = {\n  parseUrlQueryString\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PrintLayout)\n"]}