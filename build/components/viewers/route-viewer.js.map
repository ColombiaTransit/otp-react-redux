{"version":3,"sources":["route-viewer.js"],"names":["operatorForRoute","operators","route","find","o","id","toLowerCase","agency","split","operatorIndexForRoute","index","findIndex","order","RouteViewer","_backClicked","props","setMainPanelContent","setViewedRoute","findRoutes","routes","hideBackButton","languageConfig","sortedRoutes","sort","routeComparator","agencySortedRoutes","length","a","b","aOperator","bOperator","routeViewer","routeViewerDetails","clear","map","operator","Component","propTypes","PropTypes","bool","object","RouteRow","isActiveRoute","viewedRoute","routeId","_onClick","findRoute","isActive","defaultRouteColor","defaultRouteTextColor","longNameSplitter","activeRouteData","color","textColor","backgroundColor","longName","borderBottom","padding","width","display","logo","marginRight","marginTop","fontSize","fontWeight","shortName","animation","url","mapStateToProps","state","ownProps","otp","config","transitIndex","ui","language","mapDispatchToProps"],"mappings":"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","file":"route-viewer.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Label, Button } from 'react-bootstrap'\nimport { VelocityTransitionGroup } from 'velocity-react'\nimport { connect } from 'react-redux'\n\nimport Icon from '../narrative/icon'\n\nimport { setMainPanelContent, setViewedRoute } from '../../actions/ui'\nimport { findRoutes, findRoute } from '../../actions/api'\nimport { routeComparator } from '../../util/itinerary'\n\nfunction operatorForRoute (operators, route) {\n  return operators.find(o =>\n    o.id.toLowerCase() === route.agency.id.split(':')[0].toLowerCase())\n}\n\nfunction operatorIndexForRoute (operators, route) {\n  const index = operators.findIndex(o =>\n    o.id.toLowerCase() === route.agency.id.split(':')[0].toLowerCase())\n  if (index !== -1 && typeof operators[index].order !== 'undefined') return operators[index].order\n  else return 0\n}\n\nclass RouteViewer extends Component {\n  static propTypes = {\n    hideBackButton: PropTypes.bool,\n    routes: PropTypes.object\n  }\n\n  _backClicked = () => {\n    this.props.setMainPanelContent(null)\n    this.props.setViewedRoute(null)\n  }\n\n  componentWillMount () {\n    this.props.findRoutes()\n  }\n\n  componentDidMount () {\n    //this.props.findRoute({ routeId: 'TriMet:1' })\n    //this.props.setViewedRoute({ routeId: 'TriMet:1' })\n  }\n\n  render () {\n    const { operators, routes, hideBackButton, languageConfig } = this.props\n    const sortedRoutes = routes ? Object.values(routes).sort(routeComparator) : []\n    const agencySortedRoutes = operators.length > 0\n      ? sortedRoutes.sort((a, b) => {\n        const aOperator = operatorIndexForRoute(operators, a)\n        const bOperator = operatorIndexForRoute(operators, b)\n        if (aOperator - bOperator > 0) return 1\n        if (aOperator - bOperator < 0) return -1\n        else return 0\n      })\n      : sortedRoutes\n    return (\n      <div className='route-viewer'>\n        {/* Header Block */}\n        <div className='route-viewer-header'>\n          {/* Back button */}\n          {!hideBackButton && (\n            <div className='back-button-container'>\n              <Button\n                bsSize='small'\n                onClick={this._backClicked}\n              ><Icon type='arrow-left' />Back</Button>\n            </div>\n          )}\n\n          {/* Header Text */}\n          <div className='header-text'>\n            {languageConfig.routeViewer || 'Route Viewer'}\n          </div>\n          <div className=''>\n            {languageConfig.routeViewerDetails}\n          </div>\n          <div style={{ clear: 'both' }} />\n        </div>\n\n        <div className='route-viewer-body'>\n          {agencySortedRoutes\n            .map(route => {\n              // Find operator based on agency_id (extracted from OTP route ID).\n              const operator = operatorForRoute(operators, route) || {}\n              return (\n                <RouteRow\n                  key={route.id}\n                  operator={operator}\n                  route={route}\n                  {...this.props} />\n              )\n            })\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nclass RouteRow extends Component {\n  isActiveRoute = () => {\n    const { route, viewedRoute } = this.props\n    return viewedRoute && viewedRoute.routeId === route.id\n  }\n\n  _onClick = () => {\n    const { route, findRoute, setViewedRoute } = this.props\n    if (this.isActiveRoute()) {\n      // Deselect current route if active.\n      setViewedRoute({ routeId: null })\n    } else {\n      // Otherwise, set active and fetch route patterns.\n      findRoute({ routeId: route.id })\n      setViewedRoute({ routeId: route.id })\n    }\n  }\n\n  render () {\n    const { operator, route, routes, viewedRoute } = this.props\n    const isActive = this.isActiveRoute()\n    const {defaultRouteColor, defaultRouteTextColor, longNameSplitter} = operator\n    const activeRouteData = isActive ? routes[viewedRoute.routeId] : null\n    const color = `#${defaultRouteTextColor || route.textColor || '000000'}`\n    const backgroundColor = `#${defaultRouteColor || route.color || 'ffffff'}`\n    const longName = (longNameSplitter && route.longName && route.longName.split(longNameSplitter).length > 1)\n      ? route.longName.split(longNameSplitter)[1]\n      : route.longName\n    return (\n      <div\n        style={{\n          borderBottom: '1px solid gray',\n          backgroundColor: isActive ? '#f6f8fa' : 'white'\n        }}>\n        <Button className='clear-button-formatting' style={{ padding: 8, width: '100%' }}\n          onClick={this._onClick}\n        >\n          <div style={{display: 'inline-block'}}>\n            {operator && <img src={operator.logo} style={{marginRight: '5px'}} height={25}/>}\n          </div>\n          <div style={{display: 'inline-block', marginTop: '2px'}}>\n            <Label\n              style={{\n                backgroundColor: backgroundColor === '#ffffff' ? 'rgba(0,0,0,0)' : backgroundColor,\n                fontSize: 'medium',\n                fontWeight: 400,\n                color\n              }}>\n              <b>{route.shortName}</b> {longName}\n            </Label>\n          </div>\n        </Button>\n        <VelocityTransitionGroup enter={{animation: 'slideDown'}} leave={{animation: 'slideUp'}}>\n          {isActive && (\n            <div style={{ padding: 8 }}>\n              {activeRouteData.url\n                ? <a href={activeRouteData.url} target='_blank'>Route Details</a>\n                : 'No route URL provided.'\n              }\n            </div>\n          )}\n        </VelocityTransitionGroup>\n      </div>\n    )\n  }\n}\n// connect to redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    operators: state.otp.config.operators,\n    routes: state.otp.transitIndex.routes,\n    viewedRoute: state.otp.ui.viewedRoute,\n    languageConfig: state.otp.config.language\n  }\n}\n\nconst mapDispatchToProps = {\n  findRoute,\n  findRoutes,\n  setMainPanelContent,\n  setViewedRoute\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RouteViewer)\n"]}