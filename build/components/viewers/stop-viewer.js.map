{"version":3,"sources":["stop-viewer.js"],"names":["StopViewer","_backClicked","props","setViewedStop","_setLocationFromStop","type","setLocation","stopData","location","name","lat","lon","reverseGeocode","setState","popupPosition","_onClickPlanTo","_onClickPlanFrom","findStop","stopId","viewedStop","nextProps","hideBackButton","homeTimezone","id","includes","split","stopTimesByRoute","routes","stopTimes","forEach","routeId","patternTimes","pattern","filteredTimes","times","filter","stopTime","stopIndex","stopCount","concat","clear","marginTop","sort","routeComparator","map","route","Component","propTypes","PropTypes","boolean","object","RouteRow","_toggleExpandedView","expanded","state","sortedStopTimes","a","b","aTime","serviceDay","realtimeDeparture","bTime","length","slice","shortName","longName","getFormattedStopTime","animation","i","display","fontSize","headsign","realtimeState","getStatusLabel","departureDelay","backgroundColor","now","currentTime","diff","clone","startOf","differentDay","date","inHomeTimezone","tz","format","moment","guess","showCountdown","float","color","marginRight","marginLeft","marginBottom","delay","Math","abs","mapStateToProps","ownProps","otp","config","ui","transitIndex","stops","mapDispatchToProps"],"mappings":"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","file":"stop-viewer.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Button } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport moment from 'moment'\nimport 'moment-timezone'\nimport { VelocityTransitionGroup } from 'velocity-react'\n\nimport Icon from '../narrative/icon'\nimport LocationIcon from '../icons/location-icon'\n\nimport { setViewedStop } from '../../actions/ui'\nimport { findStop } from '../../actions/api'\nimport { setLocation } from '../../actions/map'\nimport { formatDuration, formatStopTime } from '../../util/time'\nimport { routeComparator } from '../../util/itinerary'\n\nclass StopViewer extends Component {\n  static propTypes = {\n    hideBackButton: PropTypes.boolean,\n    stopData: PropTypes.object,\n    viewedStop: PropTypes.object\n  }\n\n  _backClicked = () => {\n    this.props.setViewedStop(null)\n  }\n\n  _setLocationFromStop = (type) => {\n    const { setLocation, stopData } = this.props\n    const location = {\n      name: stopData.name,\n      lat: stopData.lat,\n      lon: stopData.lon\n    }\n    setLocation({type, location, reverseGeocode: true})\n    this.setState({popupPosition: null})\n  }\n\n  _onClickPlanTo = () => this._setLocationFromStop('to')\n\n  _onClickPlanFrom = () => this._setLocationFromStop('from')\n\n  // load the viewed stop in the store when the Stop Viewer first mounts\n  componentWillMount () {\n    this.props.findStop({stopId: this.props.viewedStop.stopId})\n  }\n\n  // refresh the stop in the store if the viewed stop changes w/ the\n  // Stop Viewer already mounted\n  componentWillReceiveProps (nextProps) {\n    if (\n      this.props.viewedStop &&\n      nextProps.viewedStop &&\n      this.props.viewedStop.stopId !== nextProps.viewedStop.stopId\n    ) {\n      this.props.findStop({stopId: nextProps.viewedStop.stopId})\n    }\n  }\n\n  render () {\n    const { stopData, hideBackButton, homeTimezone } = this.props\n\n    // Rewrite stop ID to not include Agency prefix, if present\n    // TODO: make this functionality configurable?\n    let stopId\n    if (stopData && stopData.id) {\n      stopId = stopData.id.includes(':') ? stopData.id.split(':')[1] : stopData.id\n    }\n\n    // construct a lookup table mapping routeId (e.g. 'MyAgency:10') to an array of stoptimes\n    const stopTimesByRoute = {}\n    if (stopData && stopData.routes && stopData.stopTimes) {\n      stopData.stopTimes.forEach(patternTimes => {\n        const routeId = patternTimes.pattern.id.split(':')[0] + ':' + patternTimes.pattern.id.split(':')[1]\n        if (!(routeId in stopTimesByRoute)) stopTimesByRoute[routeId] = []\n        const filteredTimes = patternTimes.times.filter(stopTime => {\n          return stopTime.stopIndex < stopTime.stopCount - 1 // ensure that this isn't the last stop\n        })\n        stopTimesByRoute[routeId] = stopTimesByRoute[routeId].concat(filteredTimes)\n      })\n    }\n\n    return (\n      <div className='stop-viewer'>\n        {/* Header Block */}\n        <div className='stop-viewer-header'>\n          {/* Back button */}\n          {!hideBackButton && (\n            <div className='back-button-container'>\n              <Button\n                bsSize='small'\n                onClick={this._backClicked}\n              ><Icon type='arrow-left' />Back</Button>\n            </div>\n          )}\n\n          {/* Header Text */}\n          <div className='header-text'>\n            {stopData\n              ? <span>{stopData.name}</span>\n              : <span>Loading Stop..</span>\n            }\n          </div>\n          <div style={{ clear: 'both' }} />\n        </div>\n\n        {stopData && (\n          <div className='stop-viewer-body'>\n            {/* plan trip from/to here buttons. TODO: Can this be combined w/ SetFromToButtons? */}\n            <div>\n              <div><b>Stop ID</b>: {stopId}</div>\n              <b>Plan a trip:</b>{' '}\n              <LocationIcon type='from' />{' '}\n              <button className='link-button'\n                onClick={this._onClickPlanFrom}>\n                From here\n              </button>{' '}|{' '}\n              <LocationIcon type='to' />{' '}\n              <button className='link-button'\n                onClick={this._onClickPlanTo}>\n                To here\n              </button>\n            </div>\n\n            {/* route listing */}\n            {stopData.routes && (\n              <div style={{ marginTop: 20 }}>\n                {stopData.routes.sort(routeComparator).map(route => {\n                  return (\n                    <RouteRow\n                      route={route}\n                      stopTimes={stopTimesByRoute[route.id]}\n                      key={route.id}\n                      homeTimezone={homeTimezone}\n                    />\n                  )\n                })}\n              </div>\n            )}\n\n            {/* Future: add stop details */}\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nclass RouteRow extends Component {\n  constructor () {\n    super()\n    this.state = { expanded: false }\n  }\n\n  _toggleExpandedView = () => {\n    this.setState({ expanded: !this.state.expanded })\n  }\n\n  render () {\n    const { route, stopTimes, homeTimezone } = this.props\n\n    // sort stop times by next departure\n    let sortedStopTimes = null\n    if (stopTimes) {\n      sortedStopTimes = stopTimes.sort((a, b) => {\n        const aTime = a.serviceDay + a.realtimeDeparture\n        const bTime = b.serviceDay + b.realtimeDeparture\n        if (aTime < bTime) return -1\n        if (aTime > bTime) return 1\n        return 0\n      })\n      // Cap the number of times shown for any Route at 5. TODO: make configurable\n      if (sortedStopTimes.length > 0) sortedStopTimes = sortedStopTimes.slice(0, 5)\n    }\n\n    return (\n      <div className='route-row'>\n        {/* header row */}\n        <div className='header'>\n          {/* route name */}\n          <div className='route-name'>\n            <b>{route.shortName}</b> {route.longName}\n          </div>\n\n          {/* next departure preview */}\n          {stopTimes && stopTimes.length > 0 && (\n            <div className='next-trip-preview'>\n              {getFormattedStopTime(sortedStopTimes[0], homeTimezone)}\n            </div>\n          )}\n\n          {/* expansion chevron button */}\n          <div className='expansion-button-container'>\n            <button className='expansion-button' onClick={this._toggleExpandedView}>\n              <Icon type={`chevron-${this.state.expanded ? 'up' : 'down'}`} />\n            </button>\n          </div>\n        </div>\n\n        {/* expanded view */}\n        <VelocityTransitionGroup enter={{animation: 'slideDown'}} leave={{animation: 'slideUp'}}>\n          {this.state.expanded && (\n            <div>\n              <div className='trip-table'>\n                {/* trips table header row */}\n                <div className='header'>\n                  <div className='cell' />\n                  <div className='cell time-column'>DEPARTURE</div>\n                  <div className='cell status-column'>STATUS</div>\n                </div>\n\n                {/* list of upcoming trips */}\n                {stopTimes && (\n                  sortedStopTimes.map((stopTime, i) => {\n                    return (\n                      <div className='trip-row' style={{ display: 'table-row', marginTop: 6, fontSize: 14 }} key={i}>\n                        <div className='cell'>\n                          To {stopTime.headsign}\n                        </div>\n                        <div className='cell time-column'>\n                          {getFormattedStopTime(stopTime, homeTimezone)}\n                        </div>\n                        <div className='cell status-column'>\n                          {stopTime.realtimeState === 'UPDATED'\n                            ? getStatusLabel(stopTime.departureDelay)\n                            : <div className='status-label' style={{ backgroundColor: '#bbb' }}>Scheduled</div>\n                          }\n                        </div>\n                      </div>\n                    )\n                  })\n                )}\n              </div>\n            </div>\n          )}\n        </VelocityTransitionGroup>\n      </div>\n    )\n  }\n}\n\n// helper method to generate stop time w/ status icon\nfunction getFormattedStopTime (stopTime, homeTimezone) {\n  const now = moment()\n  const serviceDay = moment(stopTime.serviceDay * 1000)\n  const currentTime = now.diff(now.clone().startOf('day'), 'seconds')\n  const differentDay = moment().date() !== serviceDay.date()\n\n  const inHomeTimezone = homeTimezone &&\n    now.tz(homeTimezone).format('Z') === now.tz(moment.tz.guess()).format('Z')\n\n  // Determine whether to show departure as countdown (e.g. \"5 min\") or as HH:MM time\n  const showCountdown = inHomeTimezone && !differentDay &&\n    stopTime.realtimeDeparture - currentTime < 3600 &&\n    stopTime.realtimeDeparture > currentTime\n\n  return (\n    <div>\n      <div style={{ float: 'left' }}>\n        {stopTime.realtimeState === 'UPDATED'\n          ? <Icon type='rss' style={{ color: '#888', fontSize: '0.8em', marginRight: 2 }} />\n          : <Icon type='clock-o' style={{ color: '#888', fontSize: '0.8em', marginRight: 2 }} />\n        }\n      </div>\n      <div style={{ marginLeft: 20, fontSize: differentDay ? 12 : 14 }}>\n        {differentDay && <div style={{ marginBottom: -4 }}>{serviceDay.format('dddd')}</div>}\n        <div>{showCountdown\n          ? formatDuration(stopTime.realtimeDeparture - currentTime)\n          : formatStopTime(stopTime.realtimeDeparture)\n        }</div>\n      </div>\n    </div>\n  )\n}\n\n// helper method to generate status label\nfunction getStatusLabel (delay) {\n  // late departure\n  if (delay > 60) {\n    return (\n      <div className='status-label' style={{ backgroundColor: '#d9534f' }}>\n        {formatDuration(delay)} Late\n      </div>\n    )\n  }\n\n  // early departure\n  if (delay < -60) {\n    return (\n      <div className='status-label' style={{ backgroundColor: '#337ab7' }}>\n        {formatDuration(Math.abs(delay))} Early\n      </div>\n    )\n  }\n\n  // on-time departure\n  return (\n    <div className='status-label' style={{ backgroundColor: '#5cb85c' }}>\n      On Time\n    </div>\n  )\n}\n\n// connect to redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    homeTimezone: state.otp.config.homeTimezone,\n    viewedStop: state.otp.ui.viewedStop,\n    stopData: state.otp.transitIndex.stops[state.otp.ui.viewedStop.stopId]\n  }\n}\n\nconst mapDispatchToProps = {\n  setViewedStop,\n  findStop,\n  setLocation\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StopViewer)\n"]}