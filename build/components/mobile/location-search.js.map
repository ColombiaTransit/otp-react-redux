{"version":3,"sources":["location-search.js"],"names":["MobileLocationSearch","_locationSelected","props","setMobileScreen","MobileScreens","SEARCH_FORM","backScreen","locationType","Component","propTypes","PropTypes","number","string","mapStateToProps","state","ownProps","mapDispatchToProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AAEA;;;;AACA;;;;AACA;;;;AAEA;;;;IAEMA,oB;;;;;;;;;;;;;;wOAMJC,iB,GAAoB,YAAM;AACxB,YAAKC,KAAL,CAAWC,eAAX,CAA2BC,kBAAcC,WAAzC;AACD,K;;;;;6BAES;AAAA,mBAC6B,KAAKH,KADlC;AAAA,UACAI,UADA,UACAA,UADA;AAAA,UACYC,YADZ,UACYA,YADZ;;AAER,aACE;AAAC,2BAAD;AAAA;AACE,sCAAC,uBAAD;AACE,+BAAmBA,YAAnB,cADF;AAEE,8BAFF;AAGE,sBAAYD;AAHd,UADF;AAME;AAAA;AAAA,YAAK,WAAU,gBAAf;AACE,wCAAC,uBAAD;AACE,kBAAMC,YADR;AAEE,mCAFF;AAGE,mBAAM,gBAHR;AAIE,0BAJF;AAKE,gCAAoB,KAAKN;AAL3B;AADF;AANF,OADF;AAkBD;;;EA9BgCO,gB,UAC1BC,S,GAAY;AACjBH,cAAYI,oBAAUC,MADL;AAEjBJ,gBAAcG,oBAAUE;AAFP,C;;AAgCrB;;AAEA,IAAMC,kBAAkB,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,SAAO,EAAP;AACD,CAFD;;AAIA,IAAMC,qBAAqB;AACzBb;AADyB,CAA3B;;kBAIe,yBAAQU,eAAR,EAAyBG,kBAAzB,EAA6ChB,oBAA7C,C","file":"location-search.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport MobileContainer from './container'\nimport MobileNavigationBar from './navigation-bar'\nimport LocationField from '../form/location-field'\n\nimport { MobileScreens, setMobileScreen } from '../../actions/ui'\n\nclass MobileLocationSearch extends Component {\n  static propTypes = {\n    backScreen: PropTypes.number,\n    locationType: PropTypes.string\n  }\n\n  _locationSelected = () => {\n    this.props.setMobileScreen(MobileScreens.SEARCH_FORM)\n  }\n\n  render () {\n    const { backScreen, locationType } = this.props\n    return (\n      <MobileContainer>\n        <MobileNavigationBar\n          headerText={`Set ${locationType} Location`}\n          showBackButton\n          backScreen={backScreen}\n        />\n        <div className='mobile-padding'>\n          <LocationField\n            type={locationType}\n            hideExistingValue\n            label='Enter location'\n            static\n            onLocationSelected={this._locationSelected}\n          />\n        </div>\n      </MobileContainer>\n    )\n  }\n}\n\n// connect to the redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  return { }\n}\n\nconst mapDispatchToProps = {\n  setMobileScreen\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MobileLocationSearch)\n"]}