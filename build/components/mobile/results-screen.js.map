{"version":3,"sources":["results-screen.js"],"names":["MobileResultsScreen","_editSearchClicked","props","setMobileScreen","MobileScreens","SEARCH_FORM","_optionClicked","setState","expanded","state","refs","scrollTop","_toggleRealtime","setUseRealtimeResponse","useRealtime","error","itineraryClass","query","realtimeEffects","resultCount","activeItineraryIndex","narrativeContainerStyle","top","overflowY","height","backgroundColor","headerAction","isAffectedByRealtimeData","exceedsThreshold","routesDiffer","locationsSummary","padding","fontSize","lineHeight","from","name","marginTop","to","width","dots","i","push","map","bottom","marginLeft","Component","propTypes","PropTypes","number","element","object","func","mapStateToProps","ownProps","activeSearch","otp","response","nonRealtimeResponse","currentQuery","routingType","plan","itineraries","length","profile","activeItinerary","mapDispatchToProps"],"mappings":"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","file":"results-screen.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Button, Col, Row } from 'react-bootstrap'\n\nimport DefaultMap from '../map/default-map'\nimport ErrorMessage from '../form/error-message'\nimport ItineraryCarousel from '../narrative/itinerary-carousel'\nimport RealtimeAnnotation from '../narrative/realtime-annotation'\nimport LocationIcon from '../icons/location-icon'\n\nimport MobileContainer from './container'\nimport MobileNavigationBar from './navigation-bar'\n\nimport { MobileScreens, setMobileScreen } from '../../actions/ui'\nimport { setUseRealtimeResponse } from '../../actions/narrative'\nimport { getActiveSearch, getRealtimeEffects } from '../../util/state'\nimport { enableScrollForSelector } from '../../util/ui'\n\nclass MobileResultsScreen extends Component {\n  static propTypes = {\n    activeItineraryIndex: PropTypes.number,\n    map: PropTypes.element,\n    query: PropTypes.object,\n    resultCount: PropTypes.number,\n\n    setMobileScreen: PropTypes.func\n  }\n\n  constructor () {\n    super()\n    this.state = {\n      expanded: false\n    }\n  }\n\n  componentDidMount () {\n    // Get the target element that we want to persist scrolling for\n    // FIXME Do we need to add something that removes the listeners when\n    // component unmounts?\n    enableScrollForSelector('.mobile-narrative-container')\n  }\n\n  _editSearchClicked = () => {\n    this.props.setMobileScreen(MobileScreens.SEARCH_FORM)\n  }\n\n  _optionClicked = () => {\n    this.setState({ expanded: !this.state.expanded })\n    this.refs['narrative-container'].scrollTop = 0\n  }\n\n  _toggleRealtime = () => this.props.setUseRealtimeResponse({useRealtime: !this.props.useRealtime})\n\n  render () {\n    const { error, itineraryClass, query, realtimeEffects, resultCount, useRealtime, activeItineraryIndex } = this.props\n    const { expanded } = this.state\n\n    const narrativeContainerStyle = expanded\n      ? { top: 140, overflowY: 'auto' }\n      : { height: 80, overflowY: 'hidden' }\n\n    // Ensure that narrative covers map.\n    narrativeContainerStyle.backgroundColor = 'white'\n\n    const headerAction = realtimeEffects.isAffectedByRealtimeData &&\n      (realtimeEffects.exceedsThreshold ||\n        realtimeEffects.routesDiffer ||\n        !useRealtime) && (\n        <RealtimeAnnotation\n          componentClass='popover'\n          toggleRealtime={this._toggleRealtime}\n          realtimeEffects={realtimeEffects}\n          useRealtime={useRealtime}\n        />\n      )\n\n    const locationsSummary = (\n      <Row xs={12} className='locations-summary' style={{ padding: '4px 8px' }}>\n        <Col xs={8} sm={11} style={{ fontSize: '1.1em', lineHeight: '1.2em' }}>\n          <div className='location'>\n            <LocationIcon type='from' /> { query.from ? query.from.name : '' }\n          </div>\n          <div className='location' style={{ marginTop: '2px' }}>\n            <LocationIcon type='to' /> { query.to ? query.to.name : '' }\n          </div>\n        </Col>\n        <Col xs={4} sm={1}>\n          <Button\n            className='edit-search-button pull-right'\n            onClick={this._editSearchClicked}\n          >Edit</Button>\n        </Col>\n      </Row>\n    )\n\n    if (error) {\n      return (\n        <MobileContainer>\n          <MobileNavigationBar headerText='No Trip Found' />\n          {locationsSummary}\n          <div className='results-error-map'><DefaultMap /></div>\n          <div className='results-error-message'>\n            <ErrorMessage error={error} />\n            <div className='options-lower-tray mobile-padding'>\n              <Button className='back-to-search-button' onClick={this._editSearchClicked} style={{ width: '100%' }}>\n                <i className='fa fa-arrow-left' /> Back to Search\n              </Button>\n            </div>\n          </div>\n\n          <ErrorMessage error={error} />\n        </MobileContainer>\n      )\n    }\n\n    // Construct the 'dots'\n    const dots = []\n    for (let i = 0; i < resultCount; i++) {\n      dots.push(<div className={`dot${activeItineraryIndex === i ? ' active' : ''}`} />)\n    }\n\n    return (\n      <MobileContainer>\n        <MobileNavigationBar\n          headerText={resultCount\n            ? `We Found ${resultCount} Option${resultCount > 1 ? 's' : ''}`\n            : 'Waiting...'\n          }\n          headerAction={headerAction}\n        />\n        {locationsSummary}\n\n        <div className='results-map'>\n          {this.props.map}\n        </div>\n\n        <div\n          className='mobile-narrative-header'\n          style={{ bottom: expanded ? null : 100, top: expanded ? 100 : null }}\n          onClick={this._optionClicked}\n        >\n          Option {activeItineraryIndex + 1}\n          <i className={`fa fa-caret-${expanded ? 'down' : 'up'}`} style={{ marginLeft: 8 }} />\n        </div>\n\n        <div\n          ref='narrative-container'\n          className='mobile-narrative-container'\n          style={narrativeContainerStyle}\n        >\n          <ItineraryCarousel\n            itineraryClass={itineraryClass}\n            hideHeader\n            expanded={this.state.expanded}\n            onClick={this._optionClicked}\n          />\n        </div>\n\n        <div className='dots-container' style={{ padding: 'none' }}>{dots}</div>\n      </MobileContainer>\n    )\n  }\n}\n\n// connect to the redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  const activeSearch = getActiveSearch(state.otp)\n  const {useRealtime} = state.otp\n  const response = !activeSearch\n    ? null\n    : useRealtime ? activeSearch.response : activeSearch.nonRealtimeResponse\n\n  const realtimeEffects = getRealtimeEffects(state.otp)\n\n  return {\n    query: state.otp.currentQuery,\n    realtimeEffects,\n    error: response && response.error,\n    resultCount:\n      response\n        ? activeSearch.query.routingType === 'ITINERARY'\n          ? response.plan\n            ? response.plan.itineraries.length\n            : 0\n          : response.otp.profile.length\n        : null,\n    useRealtime,\n    activeItineraryIndex: activeSearch !== null ? activeSearch.activeItinerary : null\n  }\n}\n\nconst mapDispatchToProps = {\n  setMobileScreen,\n  setUseRealtimeResponse\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MobileResultsScreen)\n"]}