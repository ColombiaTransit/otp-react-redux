{"version":3,"sources":["results-screen.js"],"names":["MobileResultsScreen","_editSearchClicked","props","setMobileScreen","MobileScreens","SEARCH_FORM","_optionClicked","setState","expanded","state","_toggleRealtime","setUseRealtimeResponse","useRealtime","error","itineraryClass","query","realtimeEffects","resultCount","narrativeContainerStyle","top","overflowY","height","backgroundColor","headerAction","isAffectedByRealtimeData","exceedsThreshold","routesDiffer","locationsSummary","padding","fontSize","lineHeight","from","name","marginTop","to","width","map","Component","propTypes","PropTypes","element","object","number","func","mapStateToProps","ownProps","activeSearch","otp","response","nonRealtimeResponse","currentQuery","routingType","plan","itineraries","length","profile","mapDispatchToProps"],"mappings":"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","file":"results-screen.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Button, Col, Row } from 'react-bootstrap'\n\nimport DefaultMap from '../map/default-map'\nimport ErrorMessage from '../form/error-message'\nimport ItineraryCarousel from '../narrative/itinerary-carousel'\nimport RealtimeAnnotation from '../narrative/realtime-annotation'\n\nimport MobileContainer from './container'\nimport MobileNavigationBar from './navigation-bar'\n\nimport { MobileScreens, setMobileScreen } from '../../actions/ui'\nimport { setUseRealtimeResponse } from '../../actions/narrative'\nimport { getActiveSearch, getRealtimeEffects } from '../../util/state'\n\nclass MobileResultsScreen extends Component {\n  static propTypes = {\n    map: PropTypes.element,\n    query: PropTypes.object,\n    resultCount: PropTypes.number,\n\n    setMobileScreen: PropTypes.func\n  }\n\n  constructor () {\n    super()\n    this.state = {\n      expanded: false\n    }\n  }\n\n  _editSearchClicked = () => {\n    this.props.setMobileScreen(MobileScreens.SEARCH_FORM)\n  }\n\n  _optionClicked = () => {\n    this.setState({ expanded: !this.state.expanded })\n  }\n\n  _toggleRealtime = () => this.props.setUseRealtimeResponse({useRealtime: !this.props.useRealtime})\n\n  render () {\n    const { error, itineraryClass, query, realtimeEffects, resultCount, useRealtime } = this.props\n\n    const narrativeContainerStyle = this.state.expanded\n      ? {\n        top: 100,\n        overflowY: 'auto'\n      } : {\n        height: 120,\n        overflowY: 'hidden'\n      }\n    // Ensure that narrative covers map.\n    narrativeContainerStyle.backgroundColor = 'white'\n\n    const headerAction = realtimeEffects.isAffectedByRealtimeData &&\n      (realtimeEffects.exceedsThreshold ||\n        realtimeEffects.routesDiffer ||\n        !useRealtime) && (\n        <RealtimeAnnotation\n          componentClass='popover'\n          toggleRealtime={this._toggleRealtime}\n          realtimeEffects={realtimeEffects}\n          useRealtime={useRealtime}\n        />\n      )\n\n    const locationsSummary = (\n      <Row xs={12} className='locations-summary' style={{ padding: '4px 8px' }}>\n        <Col xs={8} sm={11} style={{ fontSize: '1.1em', lineHeight: '1.2em' }}>\n          <div className='location'>\n            <i className='fa fa-map-marker' /> { query.from ? query.from.name : '' }\n          </div>\n          <div className='location' style={{ marginTop: '2px' }}>\n            <i className='fa fa-dot-circle-o' /> { query.to ? query.to.name : '' }\n          </div>\n        </Col>\n        <Col xs={4} sm={1}>\n          <Button\n            className='edit-search-button'\n            onClick={this._editSearchClicked}\n          >Edit</Button>\n        </Col>\n      </Row>\n    )\n\n    if (error) {\n      return (\n        <MobileContainer>\n          <MobileNavigationBar headerText='No Trip Found' />\n          {locationsSummary}\n          <div className='results-error-map'><DefaultMap /></div>\n          <div className='results-error-message'>\n            <ErrorMessage error={error} />\n            <div className='options-lower-tray mobile-padding'>\n              <Button className='back-to-search-button' onClick={this._editSearchClicked} style={{ width: '100%' }}>\n                <i className='fa fa-arrow-left' /> Back to Search\n              </Button>\n            </div>\n          </div>\n\n          <ErrorMessage error={error} />\n        </MobileContainer>\n      )\n    }\n\n    return (\n      <MobileContainer>\n        <MobileNavigationBar\n          headerText={resultCount\n            ? `We Found ${resultCount} Option${resultCount > 1 ? 's' : ''}`\n            : 'Waiting...'\n          }\n          headerAction={headerAction}\n        />\n        {locationsSummary}\n\n        <div className='results-map'>\n          {this.props.map}\n        </div>\n\n        <div className='mobile-narrative-container' style={narrativeContainerStyle}>\n          <ItineraryCarousel\n            itineraryClass={itineraryClass}\n            hideHeader\n            expanded={this.state.expanded}\n            onClick={this._optionClicked}\n          />\n        </div>\n      </MobileContainer>\n    )\n  }\n}\n\n// connect to the redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  const activeSearch = getActiveSearch(state.otp)\n  const {useRealtime} = state.otp\n  const response = !activeSearch\n    ? null\n    : useRealtime ? activeSearch.response : activeSearch.nonRealtimeResponse\n\n  const realtimeEffects = getRealtimeEffects(state.otp)\n\n  return {\n    query: state.otp.currentQuery,\n    realtimeEffects,\n    error: response && response.error,\n    resultCount:\n      response\n        ? activeSearch.query.routingType === 'ITINERARY'\n          ? response.plan\n            ? response.plan.itineraries.length\n            : 0\n          : response.otp.profile.length\n        : null,\n    useRealtime\n  }\n}\n\nconst mapDispatchToProps = {\n  setMobileScreen,\n  setUseRealtimeResponse\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MobileResultsScreen)\n"]}