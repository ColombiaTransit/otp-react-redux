{"version":3,"sources":["navigation-bar.js"],"names":["MobileNavigationBar","_backButtonPressed","console","log","props","backScreen","onBackClicked","setMobileScreen","showBackButton","headerAction","headerText","title","Component","propTypes","PropTypes","number","element","string","bool","func","mapStateToProps","state","ownProps","mapDispatchToProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;AACA;;;;AAEA;;;;AACA;;;;IAEMA,mB;;;;;;;;;;;;;;sOAUJC,kB,GAAqB,YAAM;AACzBC,cAAQC,GAAR,CAAY,qBAAZ;AADyB,wBAEa,MAAKC,KAFlB;AAAA,UAEjBC,UAFiB,eAEjBA,UAFiB;AAAA,UAELC,aAFK,eAELA,aAFK;;AAGzB,UAAID,UAAJ,EAAgB,MAAKD,KAAL,CAAWG,eAAX,CAA2B,MAAKH,KAAL,CAAWC,UAAtC,EAAhB,KACK,IAAI,OAAOC,aAAP,KAAyB,UAA7B,EAAyCA;AAC/C,K;;;;;6BAES;AAAA,mBACoD,KAAKF,KADzD;AAAA,UACAI,cADA,UACAA,cADA;AAAA,UACgBC,YADhB,UACgBA,YADhB;AAAA,UAC8BC,UAD9B,UAC8BA,UAD9B;AAAA,UAC0CC,KAD1C,UAC0CA,KAD1C;;;AAGR,aACE;AAAC,8BAAD;AAAA,UAAQ,WAAR;AAEE;AAAC,gCAAD,CAAQ,MAAR;AAAA;AACE;AAAC,kCAAD,CAAQ,KAAR;AAAA;AACGH,6BACG;AAAA;AAAA,gBAAK,WAAU,aAAf;AAA6B,4CAAC,0BAAD,IAAa,MAAK,YAAlB,EAA+B,SAAS,KAAKP,kBAA7C;AAA7B,aADH,GAEG,8BAAC,iBAAD;AAHN;AADF,SAFF;AAWE;AAAA;AAAA,YAAK,WAAU,eAAf;AACGS,uBACE;AAAA;AAAA,cAAK,WAAU,oBAAf;AAAqCA;AAArC,WADF,GAEE;AAAA;AAAA;AAAMC;AAAN;AAHL,SAXF;AAkBGF,wBACC;AAAA;AAAA,YAAK,WAAU,cAAf;AACE;AAAA;AAAA,cAAK,WAAU,sBAAf;AAAuCA;AAAvC;AADF;AAnBJ,OADF;AA0BD;;;EA9C+BG,gB,UACzBC,S,GAAY;AACjBR,cAAYS,oBAAUC,MADL;AAEjBN,gBAAcK,oBAAUE,OAFP;AAGjBN,cAAYI,oBAAUG,MAHL;AAIjBT,kBAAgBM,oBAAUI,IAJT;AAKjBX,mBAAiBO,oBAAUK,IALV;AAMjBR,SAAOG,oBAAUE;AANA,C;;AAgDrB;;AAEA,IAAMI,kBAAkB,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,SAAO,EAAP;AACD,CAFD;;AAIA,IAAMC,qBAAqB;AACzBhB;AADyB,CAA3B;;kBAIe,yBAAQa,eAAR,EAAyBG,kBAAzB,EAA6CvB,mBAA7C,C","file":"navigation-bar.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Navbar } from 'react-bootstrap'\nimport FontAwesome from 'react-fontawesome'\n\nimport AppMenu from '../app/app-menu'\nimport { setMobileScreen } from '../../actions/ui'\n\nclass MobileNavigationBar extends Component {\n  static propTypes = {\n    backScreen: PropTypes.number,\n    headerAction: PropTypes.element,\n    headerText: PropTypes.string,\n    showBackButton: PropTypes.bool,\n    setMobileScreen: PropTypes.func,\n    title: PropTypes.element\n  }\n\n  _backButtonPressed = () => {\n    console.log('back button pressed')\n    const { backScreen, onBackClicked } = this.props\n    if (backScreen) this.props.setMobileScreen(this.props.backScreen)\n    else if (typeof onBackClicked === 'function') onBackClicked()\n  }\n\n  render () {\n    const { showBackButton, headerAction, headerText, title } = this.props\n\n    return (\n      <Navbar fluid>\n\n        <Navbar.Header>\n          <Navbar.Brand>\n            {showBackButton\n              ? <div className='mobile-back'><FontAwesome name='arrow-left' onClick={this._backButtonPressed} /></div>\n              : <AppMenu />\n            }\n          </Navbar.Brand>\n        </Navbar.Header>\n\n        <div className='mobile-header'>\n          {headerText\n           ? <div className='mobile-header-text'>{headerText}</div>\n           : <div>{title}</div>\n          }\n        </div>\n\n        {headerAction && (\n          <div className='mobile-close'>\n            <div className='mobile-header-action'>{headerAction}</div>\n          </div>\n        )}\n      </Navbar>\n    )\n  }\n}\n\n// connect to the redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  return { }\n}\n\nconst mapDispatchToProps = {\n  setMobileScreen\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MobileNavigationBar)\n"]}