{"version":3,"sources":["base-map.js"],"names":["L","Evented","addInitHook","_singleClickTimeout","on","_scheduleSingleClick","_cancelSingleClick","include","setTimeout","_clearSingleClickTimeout","bind","e","_fireSingleClick","options","singleClickTimeout","originalEvent","_stopped","fire","Util","extend","type","clearTimeout","BaseMap","props","overlayVisibility","React","Children","toArray","children","forEach","child","name","visible","state","oldProps","newProps","popupLocation","map","refs","padding","oldItinBounds","itinerary","newItinBounds","equals","leafletElement","fitBounds","activeLeg","legs","query","from","to","lat","lon","panTo","activeStep","leg","step","steps","_updateBounds","lmap","_onLeftClick","nextProps","overlaysConfig","config","overlays","mode","oldModes","split","newModes","removed","filter","includes","m","added","oConfig","modes","setState","eachLayer","layer","removeLayer","diagramLeg","elevationPoint","baseLayers","userControlledOverlays","fixedOverlays","childWithVisibility","cloneElement","push","center","initLat","initLon","elevationPointMarker","pos","initZoom","_onOverlayAdd","_onOverlayRemove","l","i","url","attribution","maxZoom","_popupClosed","width","fontSize","marginBottom","length","splice","join","margin","_onClickFrom","_onClickTo","Component","propTypes","PropTypes","object","mapClick","func","setLocation","toggleName","element","_setLocationFromPopup","setMapPopupLocation","location","reverseGeocode","onSetLocation","setMapPopupLocationAndGeocode","latlng","onClick","evt","_mapBoundsChanged","bounds","target","getBounds","mapState","updateMapState","mapStateToProps","ownProps","activeSearch","otp","ui","isFromSet","currentQuery","isToSet","mapPopupLocation","mapDispatchToProps"],"mappings":"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","file":"base-map.js","sourcesContent":["import React, { Component, PropTypes } from 'react'\nimport { connect } from 'react-redux'\n\nimport { Map, TileLayer, LayersControl, Popup, Marker } from 'react-leaflet'\n\nimport { setLocation, setMapPopupLocation, setMapPopupLocationAndGeocode } from '../../actions/map'\nimport LocationIcon from '../icons/location-icon'\nimport { constructLocation } from '../../util/map'\nimport { getActiveItinerary, getActiveSearch } from '../../util/state'\nimport { getItineraryBounds, getLegBounds, legLocationAtDistance } from '../../util/itinerary'\n\nimport L from 'leaflet'\n\nL.Evented.addInitHook(function () {\n  this._singleClickTimeout = null\n  this.on('click', this._scheduleSingleClick, this)\n  this.on('dblclick dragstart zoomstart', this._cancelSingleClick, this)\n})\n\nL.Evented.include({\n  _cancelSingleClick: function () {\n    // This timeout is key to workaround an issue where double-click events\n    // are fired in this order on some touch browsers: ['click', 'dblclick', 'click']\n    // instead of ['click', 'click', 'dblclick']\n    setTimeout(this._clearSingleClickTimeout.bind(this), 0)\n  },\n\n  _scheduleSingleClick: function (e) {\n    this._clearSingleClickTimeout()\n\n    this._singleClickTimeout = setTimeout(\n      this._fireSingleClick.bind(this, e),\n      (this.options.singleClickTimeout || 500)\n    )\n  },\n\n  _fireSingleClick: function (e) {\n    if (!e.originalEvent._stopped) {\n      this.fire('singleclick', L.Util.extend(e, { type: 'singleclick' }))\n    }\n  },\n\n  _clearSingleClickTimeout: function () {\n    if (this._singleClickTimeout !== null) {\n      clearTimeout(this._singleClickTimeout)\n      this._singleClickTimeout = null\n    }\n  }\n})\n\nclass BaseMap extends Component {\n  static propTypes = {\n    config: PropTypes.object,\n    mapClick: PropTypes.func,\n    setLocation: PropTypes.func, // TODO: rename from action name to avoid namespace conflict?\n    toggleName: PropTypes.element\n  }\n\n  /* Constructor */\n\n  constructor (props) {\n    super(props)\n\n    // For controlled overlays, maintain a map of boolean visibility status,\n    // indexed by 'name' string\n    const overlayVisibility = {}\n    React.Children.toArray(this.props.children).forEach(child => {\n      if (child.props.name && child.props.visible) {\n        overlayVisibility[child.props.name] = child.props.visible\n      }\n    })\n\n    this.state = { overlayVisibility }\n  }\n\n  /* Internal Methods */\n\n  _setLocationFromPopup = (type) => {\n    const { setMapPopupLocation, setLocation, popupLocation: location } = this.props\n    setMapPopupLocation({ location: null })\n    setLocation({ type, location, reverseGeocode: true })\n    if (typeof this.props.onSetLocation === 'function') {\n      this.props.onSetLocation({type, location})\n    }\n  }\n\n  _onClickTo = () => this._setLocationFromPopup('to')\n\n  _onClickFrom = () => this._setLocationFromPopup('from')\n\n  _onLeftClick = (e) => {\n    this.props.setMapPopupLocationAndGeocode({ location: constructLocation(e.latlng) })\n    if (typeof this.props.onClick === 'function') this.props.onClick(e)\n  }\n\n  _onOverlayAdd = (evt) => {\n    const overlayVisibility = {...this.state.overlayVisibility}\n    overlayVisibility[evt.name] = true\n    this.setState({ overlayVisibility })\n  }\n\n  _onOverlayRemove = (evt) => {\n    const overlayVisibility = {...this.state.overlayVisibility}\n    overlayVisibility[evt.name] = false\n    this.setState({ overlayVisibility })\n  }\n\n  // TODO: make map controlled component\n  _mapBoundsChanged = e => {\n    // if (this.state.zoomToTarget) {\n    //   setTimeout(() => { this.setState({zoomToTarget: false}) }, 200)\n    //   return false\n    // } else {\n    // const zoom = e.target.getZoom()\n    const bounds = e.target.getBounds()\n    // if (this.props.mapState.zoom !== zoom) {\n    //   this.props.updateMapState({zoom})\n    // }\n    if (!bounds.equals(this.props.mapState.bounds)) {\n      this.props.updateMapState({ bounds: e.target.getBounds() })\n    }\n    // }\n  }\n\n  _updateBounds (oldProps, newProps) {\n    // TODO: maybe setting bounds ought to be handled in map props...\n\n    // Don't auto-fit if popup us active\n    if ((oldProps && oldProps.popupLocation) || newProps.popupLocation) return\n\n    const { map } = this.refs\n    if (!map) return\n\n    const padding = [30, 30]\n\n    // Fit map to to entire itinerary if active itinerary bounds changed\n    const oldItinBounds = oldProps && oldProps.itinerary && getItineraryBounds(oldProps.itinerary)\n    const newItinBounds = newProps.itinerary && getItineraryBounds(newProps.itinerary)\n    if (\n      (!oldItinBounds && newItinBounds) ||\n      (oldItinBounds && newItinBounds && !oldItinBounds.equals(newItinBounds))\n    ) {\n      map.leafletElement.fitBounds(newItinBounds, { padding })\n\n    // Pan to to itinerary leg if made active (clicked); newly active leg must be non-null\n    } else if (newProps.itinerary && newProps.activeLeg !== oldProps.activeLeg && newProps.activeLeg !== null) {\n      map.leafletElement.fitBounds(\n        getLegBounds(newProps.itinerary.legs[newProps.activeLeg]),\n        { padding }\n      )\n\n    // If no itinerary update but from/to locations are present, fit to those\n    } else if (newProps.query.from && newProps.query.to) {\n      map.leafletElement.fitBounds([\n        [newProps.query.from.lat, newProps.query.from.lon],\n        [newProps.query.to.lat, newProps.query.to.lon]\n      ], { padding })\n\n    // If only from or to is set, pan to that\n    } else if (newProps.query.from) {\n      map.leafletElement.panTo([newProps.query.from.lat, newProps.query.from.lon])\n    } else if (newProps.query.to) {\n      map.leafletElement.panTo([newProps.query.to.lat, newProps.query.to.lon])\n\n    // Pan to to itinerary step if made active (clicked)\n    } else if (\n      newProps.itinerary &&\n      newProps.activeLeg !== null &&\n      newProps.activeStep !== null &&\n      newProps.activeStep !== oldProps.activeStep\n    ) {\n      const leg = newProps.itinerary.legs[newProps.activeLeg]\n      const step = leg.steps[newProps.activeStep]\n      map.leafletElement.panTo([step.lat, step.lon])\n    }\n  }\n\n  _popupClosed = () => {\n    this.props.setMapPopupLocation({ location: null })\n  }\n\n  /* React Lifecycle methods */\n\n  componentDidMount () {\n    this._updateBounds(null, this.props)\n\n    const lmap = this.refs.map.leafletElement\n    lmap.options.singleClickTimeout = 250\n    lmap.on('singleclick', (e) => { this._onLeftClick(e) })\n  }\n\n  componentWillReceiveProps (nextProps) {\n    this._updateBounds(this.props, nextProps)\n\n    // Check if any overlays should be toggled due to mode change\n    const overlaysConfig = this.props.config.map.overlays\n    if (this.props.query.mode && overlaysConfig && this.props.query.mode !== nextProps.query.mode) {\n      // Determine any added/removed modes\n      const oldModes = this.props.query.mode.split(',')\n      const newModes = nextProps.query.mode.split(',')\n      const removed = oldModes.filter(m => !newModes.includes(m))\n      const added = newModes.filter(m => !oldModes.includes(m))\n\n      const overlayVisibility = {...this.state.overlayVisibility}\n\n      // Turn OFF any affected overlays for removed modes\n      for (const mode of removed) {\n        for (const oConfig of overlaysConfig) {\n          if (oConfig.modes && oConfig.modes.includes(mode)) {\n            overlayVisibility[oConfig.name] = false\n          }\n        }\n      }\n\n      // Turn ON any affected overlays for added modes\n      for (const mode of added) {\n        for (const oConfig of overlaysConfig) {\n          if (oConfig.modes && oConfig.modes.includes(mode)) {\n            overlayVisibility[oConfig.name] = true\n          }\n        }\n      }\n\n      this.setState({ overlayVisibility })\n    }\n  }\n\n  // remove custom overlays on unmount\n  componentWillUnmount () {\n    const lmap = this.refs.map.leafletElement\n    lmap.eachLayer((layer) => {\n      lmap.removeLayer(layer)\n    })\n  }\n\n  render () {\n    const { config, children, diagramLeg, elevationPoint, popupLocation } = this.props\n    const { baseLayers } = this.props.config.map\n\n    const userControlledOverlays = []\n    const fixedOverlays = []\n    React.Children.toArray(children).forEach(child => {\n      if (child.props.name) {\n        // Add the visibility flag to this layer and push to the internal\n        // array of user-controlled overlays\n        const visible = this.state.overlayVisibility[child.props.name]\n        const childWithVisibility = React.cloneElement(child, { visible })\n        userControlledOverlays.push(childWithVisibility)\n      } else {\n        fixedOverlays.push(child)\n      }\n    })\n\n    const center = config.map && config.map.initLat && config.map.initLon\n      ? [config.map.initLat, config.map.initLon]\n      : null\n\n    /* TODO: currently mapProps is unused, but may later be used for controlling\n     * map location state\n\n    // const position = [+mapState.lat, +mapState.lon]\n    // const zoom = +mapState.zoom\n    const bounds = null // mapState.bounds\n    const mapProps = {\n      ref: 'map',\n      className: 'map',\n      // center: position,\n      // bounds: mapState.bounds || null,\n      // zoom: config.initZoom,\n      // zoom: +mapState.zoom,\n      onContextMenu: this._onRightClick\n      // onMoveEnd: this._mapBoundsChanged,\n      // onZoomEnd: this._mapBoundsChanged,\n    }\n    if (bounds) {\n      mapProps.bounds = bounds\n    } else if (position && zoom) {\n      mapProps.center = position\n      mapProps.zoom = zoom\n    } else {\n      console.error('no map position/bounds provided!', {position, zoom, bounds})\n    } */\n\n    // Compute the elevation point marker, if activeLeg\n    let elevationPointMarker = null\n    if (diagramLeg && elevationPoint) {\n      const pos = legLocationAtDistance(diagramLeg, elevationPoint)\n      if (pos) {\n        elevationPointMarker = <Marker position={pos} />\n      }\n    }\n\n    return (\n      <Map\n        ref='map'\n        className='map'\n        center={center}\n        zoom={config.map.initZoom || 13}\n        onOverlayAdd={this._onOverlayAdd}\n        onOverlayRemove={this._onOverlayRemove}\n        /* Note: Map-click is handled via single-click plugin, set up in componentDidMount() */\n      >\n        {/* Create the layers control, including base map layers and any\n          * user-controlled overlays. */}\n        <LayersControl position='topright'>\n          { /* base layers */\n            baseLayers && baseLayers.map((l, i) => (\n              <LayersControl.BaseLayer\n                name={l.name}\n                checked={i === 0}\n                key={i}>\n                <TileLayer\n                  url={l.url}\n                  attribution={l.attribution}\n                  maxZoom={l.maxZoom}\n                  detectRetina />\n              </LayersControl.BaseLayer>\n            ))\n          }\n\n          { /* user-controlled overlay layers */\n          userControlledOverlays.map((child, i) => {\n            return (\n              <LayersControl.Overlay key={i}\n                name={child.props.name}\n                checked={child.props.visible}\n              >\n                {child}\n              </LayersControl.Overlay>\n            )\n          })}\n        </LayersControl>\n\n        {/* Add the fixed, i.e. non-user-controllable overlays */}\n        {fixedOverlays}\n\n        {/* Add the location selection popup, if visible */}\n        {popupLocation && (\n          <Popup ref='clickPopup'\n            position={[popupLocation.lat, popupLocation.lon]}\n            onClose={this._popupClosed}\n          >\n            <div style={{ width: 240 }}>\n              <div style={{ fontSize: 14, marginBottom: 6 }}>\n                {popupLocation.name.split(',').length > 3\n                  ? popupLocation.name.split(',').splice(0, 3).join(',')\n                  : popupLocation.name\n                }\n              </div>\n              <div>\n                Plan a trip:\n                <span style={{ margin: '0px 5px' }}><LocationIcon type='from' /></span>\n                <button className='link-button'\n                  onClick={this._onClickFrom}>\n                  From here\n                </button>{' '}|{' '}\n                <span style={{ margin: '0px 5px' }}><LocationIcon type='to' /></span>\n                <button className='link-button'\n                  onClick={this._onClickTo}>\n                  To here\n                </button>\n              </div>\n            </div>\n          </Popup>\n        )}\n\n        {/* Add the elevation point marker */}\n        {elevationPointMarker}\n      </Map>\n    )\n  }\n}\n\n// connect to the redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  const activeSearch = getActiveSearch(state.otp)\n  return {\n    activeLeg: activeSearch && activeSearch.activeLeg,\n    activeStep: activeSearch && activeSearch.activeStep,\n    config: state.otp.config,\n    diagramLeg: state.otp.ui.diagramLeg,\n    elevationPoint: state.otp.ui.elevationPoint,\n    mapState: state.otp.mapState,\n    isFromSet:\n      state.otp.currentQuery.from &&\n      state.otp.currentQuery.from.lat !== null &&\n      state.otp.currentQuery.from.lon !== null,\n    isToSet:\n      state.otp.currentQuery.to &&\n      state.otp.currentQuery.to.lat !== null &&\n      state.otp.currentQuery.to.lon !== null,\n    itinerary: getActiveItinerary(state.otp),\n    query: state.otp.currentQuery,\n    popupLocation: state.otp.ui.mapPopupLocation\n  }\n}\n\nconst mapDispatchToProps = {\n  setLocation,\n  setMapPopupLocation,\n  setMapPopupLocationAndGeocode\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BaseMap)\n"]}