{"version":3,"sources":["base-map.js"],"names":["L","Evented","addInitHook","_singleClickTimeout","on","_scheduleSingleClick","_cancelSingleClick","include","setTimeout","_clearSingleClickTimeout","bind","e","_fireSingleClick","options","singleClickTimeout","originalEvent","_stopped","fire","Util","extend","type","clearTimeout","BaseMap","props","overlayVisibility","React","Children","toArray","children","forEach","child","controlName","visible","state","oldProps","newProps","map","refs","padding","oldItinBounds","itinerary","newItinBounds","equals","leafletElement","fitBounds","activeLeg","legs","query","from","to","lat","lon","panTo","activeStep","leg","step","steps","_updateBounds","lmap","_onLeftClick","nextProps","eachLayer","layer","removeLayer","config","diagramLeg","elevationPoint","baseLayers","userControlledOverlays","fixedOverlays","childWithVisibility","cloneElement","push","popupPosition","center","initLat","initLon","elevationPointMarker","pos","initZoom","_onOverlayAdd","_onOverlayRemove","l","i","name","url","attribution","maxZoom","toString","margin","_onClickFrom","_onClickTo","Component","propTypes","PropTypes","object","mapClick","func","setLocation","toggleName","element","_setLocationFromPopup","location","reverseGeocode","setState","onSetLocation","latlng","onClick","evt","_mapBoundsChanged","bounds","target","getBounds","mapState","updateMapState","mapStateToProps","ownProps","activeSearch","otp","ui","isFromSet","currentQuery","isToSet","mapDispatchToProps"],"mappings":"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","file":"base-map.js","sourcesContent":["import React, { Component, PropTypes } from 'react'\nimport { connect } from 'react-redux'\n\nimport { Map, TileLayer, LayersControl, Popup, Marker } from 'react-leaflet'\n\nimport { setLocation } from '../../actions/map'\nimport LocationIcon from '../icons/location-icon'\nimport { constructLocation } from '../../util/map'\nimport { getActiveItinerary, getActiveSearch } from '../../util/state'\nimport { getItineraryBounds, getLegBounds, legLocationAtDistance } from '../../util/itinerary'\n\nimport L from 'leaflet'\n\nL.Evented.addInitHook(function () {\n  this._singleClickTimeout = null\n  this.on('click', this._scheduleSingleClick, this)\n  this.on('dblclick dragstart zoomstart', this._cancelSingleClick, this)\n})\n\nL.Evented.include({\n  _cancelSingleClick: function () {\n    // This timeout is key to workaround an issue where double-click events\n    // are fired in this order on some touch browsers: ['click', 'dblclick', 'click']\n    // instead of ['click', 'click', 'dblclick']\n    setTimeout(this._clearSingleClickTimeout.bind(this), 0)\n  },\n\n  _scheduleSingleClick: function (e) {\n    this._clearSingleClickTimeout()\n\n    this._singleClickTimeout = setTimeout(\n      this._fireSingleClick.bind(this, e),\n      (this.options.singleClickTimeout || 500)\n    );\n  },\n\n  _fireSingleClick: function (e) {\n    if (!e.originalEvent._stopped) {\n      this.fire('singleclick', L.Util.extend(e, { type: 'singleclick' }))\n    }\n  },\n\n  _clearSingleClickTimeout: function () {\n    if (this._singleClickTimeout !== null) {\n      clearTimeout(this._singleClickTimeout)\n      this._singleClickTimeout = null\n    }\n  }\n})\n\n\nclass BaseMap extends Component {\n  static propTypes = {\n    config: PropTypes.object,\n    mapClick: PropTypes.func,\n    setLocation: PropTypes.func, // TODO: rename from action name to avoid namespace conflict?\n    toggleName: PropTypes.element\n  }\n\n  /* Constructor */\n\n  constructor (props) {\n    super(props)\n\n    // For controlled overlays, maintain a map of boolean visibility status,\n    // indexed by controlName string\n    const overlayVisibility = {}\n    React.Children.toArray(this.props.children).forEach(child => {\n      if (child.props.controlName && child.props.visible) {\n        overlayVisibility[child.props.controlName] = child.props.visible\n      }\n    })\n\n    this.state = { overlayVisibility }\n  }\n\n  /* Internal Methods */\n\n  _setLocationFromPopup = (type) => {\n    const {setLocation} = this.props\n    const location = constructLocation(this.state.popupPosition)\n    setLocation({type, location, reverseGeocode: true})\n    this.setState({popupPosition: null})\n    if (typeof this.props.onSetLocation === 'function') {\n      this.props.onSetLocation({type, location})\n    }\n  }\n\n  _onClickTo = () => this._setLocationFromPopup('to')\n\n  _onClickFrom = () => this._setLocationFromPopup('from')\n\n  _onLeftClick = (e) => {\n    this.setState({popupPosition: e.latlng})\n    if (typeof this.props.onClick === 'function') this.props.onClick(e)\n  }\n\n  _onOverlayAdd = (evt) => {\n    const overlayVisibility = {...this.state.overlayVisibility}\n    overlayVisibility[evt.name] = true\n    this.setState({ overlayVisibility })\n  }\n\n  _onOverlayRemove = (evt) => {\n    const overlayVisibility = {...this.state.overlayVisibility}\n    overlayVisibility[evt.name] = false\n    this.setState({ overlayVisibility })\n  }\n\n  // TODO: make map controlled component\n  _mapBoundsChanged = e => {\n    // if (this.state.zoomToTarget) {\n    //   setTimeout(() => { this.setState({zoomToTarget: false}) }, 200)\n    //   return false\n    // } else {\n    // const zoom = e.target.getZoom()\n    const bounds = e.target.getBounds()\n    // if (this.props.mapState.zoom !== zoom) {\n    //   this.props.updateMapState({zoom})\n    // }\n    if (!bounds.equals(this.props.mapState.bounds)) {\n      this.props.updateMapState({ bounds: e.target.getBounds() })\n    }\n    // }\n  }\n\n  _updateBounds (oldProps, newProps) {\n    // TODO: maybe setting bounds ought to be handled in map props...\n\n    const { map } = this.refs\n    if (!map) return\n\n    const padding = [30, 30]\n\n    // Fit map to to entire itinerary if active itinerary bounds changed\n    const oldItinBounds = oldProps && oldProps.itinerary && getItineraryBounds(oldProps.itinerary)\n    const newItinBounds = newProps.itinerary && getItineraryBounds(newProps.itinerary)\n    if (\n      (!oldItinBounds && newItinBounds) ||\n      (oldItinBounds && newItinBounds && !oldItinBounds.equals(newItinBounds))\n    ) {\n      map.leafletElement.fitBounds(newItinBounds, { padding })\n\n    // Pan to to itinerary leg if made active (clicked); newly active leg must be non-null\n    } else if (newProps.itinerary && newProps.activeLeg !== oldProps.activeLeg && newProps.activeLeg !== null) {\n      map.leafletElement.fitBounds(\n        getLegBounds(newProps.itinerary.legs[newProps.activeLeg]),\n        { padding }\n      )\n\n    // If no itinerary update but from/to locations are present, fit to those\n    } else if (newProps.query.from && newProps.query.to) {\n      map.leafletElement.fitBounds([\n        [newProps.query.from.lat, newProps.query.from.lon],\n        [newProps.query.to.lat, newProps.query.to.lon]\n      ], { padding })\n\n    // If only from or to is set, pan to that\n    } else if (newProps.query.from) {\n      map.leafletElement.panTo([newProps.query.from.lat, newProps.query.from.lon])\n    } else if (newProps.query.to) {\n      map.leafletElement.panTo([newProps.query.to.lat, newProps.query.to.lon])\n\n    // Pan to to itinerary step if made active (clicked)\n    } else if (\n      newProps.itinerary &&\n      newProps.activeLeg !== null &&\n      newProps.activeStep !== null &&\n      newProps.activeStep !== oldProps.activeStep\n    ) {\n      const leg = newProps.itinerary.legs[newProps.activeLeg]\n      const step = leg.steps[newProps.activeStep]\n      map.leafletElement.panTo([step.lat, step.lon])\n    }\n  }\n\n  /* React Lifecycle methods */\n\n  componentDidMount () {\n    this._updateBounds(null, this.props)\n\n    const lmap = this.refs.map.leafletElement\n    lmap.options.singleClickTimeout = 250\n    lmap.on('singleclick', (e) => { this._onLeftClick(e) })\n  }\n\n  componentWillReceiveProps (nextProps) {\n    this._updateBounds(this.props, nextProps)\n  }\n\n  // remove custom overlays on unmount\n  componentWillUnmount () {\n    const lmap = this.refs.map.leafletElement\n    lmap.eachLayer((layer) => {\n      lmap.removeLayer(layer)\n    })\n  }\n\n  render () {\n    const { config, children, diagramLeg, elevationPoint } = this.props\n    const { baseLayers } = this.props.config.map\n\n    const userControlledOverlays = []\n    const fixedOverlays = []\n    React.Children.toArray(children).forEach(child => {\n      if (child.props.controlName) {\n        // Add the visibility flag to this layer and push to the interal\n        // array of user-controlled overlays\n        const visible = this.state.overlayVisibility[child.props.controlName]\n        const childWithVisibility = React.cloneElement(child, { visible })\n        userControlledOverlays.push(childWithVisibility)\n      } else {\n        fixedOverlays.push(child)\n      }\n    })\n\n    const {popupPosition} = this.state\n\n    const center = config.map && config.map.initLat && config.map.initLon\n      ? [config.map.initLat, config.map.initLon]\n      : null\n\n    /* TODO: currently mapProps is unused, but may later be used for controlling\n     * map location state\n\n    // const position = [+mapState.lat, +mapState.lon]\n    // const zoom = +mapState.zoom\n    const bounds = null // mapState.bounds\n    const mapProps = {\n      ref: 'map',\n      className: 'map',\n      // center: position,\n      // bounds: mapState.bounds || null,\n      // zoom: config.initZoom,\n      // zoom: +mapState.zoom,\n      onContextMenu: this._onRightClick\n      // onMoveEnd: this._mapBoundsChanged,\n      // onZoomEnd: this._mapBoundsChanged,\n    }\n    if (bounds) {\n      mapProps.bounds = bounds\n    } else if (position && zoom) {\n      mapProps.center = position\n      mapProps.zoom = zoom\n    } else {\n      console.error('no map position/bounds provided!', {position, zoom, bounds})\n    } */\n\n    // Compute the elevation point marker, if activeLeg\n    let elevationPointMarker = null\n    if (diagramLeg && elevationPoint) {\n      const pos = legLocationAtDistance(diagramLeg, elevationPoint)\n      if (pos) {\n        elevationPointMarker = <Marker position={pos} />\n      }\n    }\n\n    return (\n      <Map\n        ref='map'\n        className='map'\n        center={center}\n        zoom={config.map.initZoom || 13}\n        onOverlayAdd={this._onOverlayAdd}\n        onOverlayRemove={this._onOverlayRemove}\n        /* Note: Map-click is handled via single-click plugin, set up in componentDidMount() */\n      >\n        {/* Create the layers control, including base map layers and any\n          * user-controlled overlays. */}\n        <LayersControl position='topright'>\n          { /* base layers */\n            baseLayers && baseLayers.map((l, i) => (\n              <LayersControl.BaseLayer\n                name={l.name}\n                checked={i === 0}\n                key={i}>\n                <TileLayer\n                  url={l.url}\n                  attribution={l.attribution}\n                  maxZoom={l.maxZoom}\n                  detectRetina />\n              </LayersControl.BaseLayer>\n            ))\n          }\n\n          { /* user-controlled overlay layers */\n          userControlledOverlays.map((child, i) => {\n            return (\n              <LayersControl.Overlay key={i}\n                name={child.props.controlName}\n                checked={child.props.visible}\n              >\n                {child}\n              </LayersControl.Overlay>\n            )\n          })}\n        </LayersControl>\n\n        {/* Add the fixed, i.e. non-user-controllable overlays */}\n        {fixedOverlays}\n\n        {/* Add the location selection popup, if visible */}\n        {popupPosition\n          ? <Popup ref='clickPopup'\n            key={popupPosition.toString()} // hack to ensure the popup opens only on right click\n            position={popupPosition} // FIXME: onOpen and onClose don't seem to work?\n            // onOpen={() => this.setState({popupPosition: null})}\n            // onClose={() => this.setState({popupPosition: null})}\n          >\n            <span>\n              Plan a trip:\n              <span style={{ margin: '0px 5px' }}><LocationIcon type='from' /></span>\n              <button className='link-button'\n                onClick={this._onClickFrom}>\n                From here\n              </button>{' '}|{' '}\n              <span style={{ margin: '0px 5px' }}><LocationIcon type='to' /></span>\n              <button className='link-button'\n                onClick={this._onClickTo}>\n                To here\n              </button>\n            </span>\n          </Popup>\n          : null\n        }\n\n        {/* Add the elevation point marker */}\n        {elevationPointMarker}\n      </Map>\n    )\n  }\n}\n\n// connect to the redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  const activeSearch = getActiveSearch(state.otp)\n  return {\n    activeLeg: activeSearch && activeSearch.activeLeg,\n    activeStep: activeSearch && activeSearch.activeStep,\n    config: state.otp.config,\n    diagramLeg: state.otp.ui.diagramLeg,\n    elevationPoint: state.otp.ui.elevationPoint,\n    mapState: state.otp.mapState,\n    isFromSet:\n      state.otp.currentQuery.from &&\n      state.otp.currentQuery.from.lat !== null &&\n      state.otp.currentQuery.from.lon !== null,\n    isToSet:\n      state.otp.currentQuery.to &&\n      state.otp.currentQuery.to.lat !== null &&\n      state.otp.currentQuery.to.lon !== null,\n    itinerary: getActiveItinerary(state.otp),\n    query: state.otp.currentQuery\n  }\n}\n\nconst mapDispatchToProps = {\n  setLocation\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BaseMap)\n"]}