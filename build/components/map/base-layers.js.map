{"version":3,"sources":["base-layers.js"],"names":["BaseLayers","props","config","map","baseLayers","overlays","BaseLayer","LayersControl","Overlay","l","i","name","url","attribution","Component","mapStateToProps","state","ownProps","otp"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;;;IAEMA,U;;;;;;;;;;6BACM;AAAA,8BACyB,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,GAD3C;AAAA,UACAC,UADA,qBACAA,UADA;AAAA,UACYC,QADZ,qBACYA,QADZ;AAAA,UAEAC,SAFA,GAEuBC,2BAFvB,CAEAD,SAFA;AAAA,UAEWE,OAFX,GAEuBD,2BAFvB,CAEWC,OAFX;;AAGR,aACE;AAAC,mCAAD;AAAA;AACGJ,sBAAcA,WAAWD,GAAX,CAAe,UAACM,CAAD,EAAIC,CAAJ;AAAA,iBAC5B;AAAC,qBAAD;AAAA;AACE,oBAAMD,EAAEE,IADV;AAEE,uBAASD,MAAM,CAFjB;AAGE,mBAAKA,CAHP;AAIE,0CAAC,uBAAD;AACE,mBAAKD,EAAEG,GADT;AAEE,2BAAaH,EAAEI,WAFjB;AAGE,gCAHF;AAJF,WAD4B;AAAA,SAAf,CADjB;AAYGR,oBAAYA,SAASF,GAAT,CAAa,UAACM,CAAD,EAAIC,CAAJ;AAAA,iBACxB;AAAC,mBAAD;AAAA;AACE,oBAAMD,EAAEE,IADV;AAEE,mBAAKD,CAFP;AAGE,0CAAC,uBAAD;AACE,mBAAKD,EAAEG,GADT;AAEE,2BAAaH,EAAEI,WAFjB;AAGE,gCAHF;AAHF,WADwB;AAAA,SAAb;AAZf,OADF;AAyBD;;;EA7BsBC,gB;;AAgCzB;;AAEA,IAAMC,kBAAkB,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,SAAO;AACLf,YAAQc,MAAME,GAAN,CAAUhB;AADb,GAAP;AAGD,CAJD;;kBAMe,yBAAQa,eAAR,EAAyBf,UAAzB,C","file":"base-layers.js","sourcesContent":["import React, { Component } from 'react'\nimport { LayersControl, TileLayer } from 'react-leaflet'\nimport { connect } from 'react-redux'\n\nclass BaseLayers extends Component {\n  render () {\n    const { baseLayers, overlays } = this.props.config.map\n    const { BaseLayer, Overlay } = LayersControl\n    return (\n      <LayersControl>\n        {baseLayers && baseLayers.map((l, i) => (\n          <BaseLayer\n            name={l.name}\n            checked={i === 0}\n            key={i}>\n            <TileLayer\n              url={l.url}\n              attribution={l.attribution}\n              detectRetina />\n          </BaseLayer>\n        ))}\n        {overlays && overlays.map((l, i) => (\n          <Overlay\n            name={l.name}\n            key={i}>\n            <TileLayer\n              url={l.url}\n              attribution={l.attribution}\n              detectRetina />\n          </Overlay>\n        ))}\n      </LayersControl>\n    )\n  }\n}\n\n// connect to the redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    config: state.otp.config\n  }\n}\n\nexport default connect(mapStateToProps)(BaseLayers)\n"]}