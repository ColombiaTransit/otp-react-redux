{"version":3,"sources":["current-position-marker.js"],"names":["CurrentPositionMarker","currentPosition","props","coords","latitude","longitude","MapLayer","propTypes","PropTypes","object","mapStateToProps","state","ownProps","otp","location"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;;;AAEA;;;;IAIMA,qB;;;;;;;;;;;;AAKJ;2CACwB,CAAG;;;wCACN,CAAG;;;2CAEA,CACvB;;;2CAEuB,CACvB;;;6BAES;AAAA,UACAC,eADA,GACoB,KAAKC,KADzB,CACAD,eADA;;;AAGR,UAAI,CAACA,eAAD,IAAoB,CAACA,gBAAgBE,MAAzC,EAAiD,OAAO,8BAAC,0BAAD,OAAP;;AAEjD,aACE;AAAC,kCAAD;AAAA;AACE,sCAAC,0BAAD;AACE,kBAAQ,CAACF,gBAAgBE,MAAhB,CAAuBC,QAAxB,EAAkCH,gBAAgBE,MAAhB,CAAuBE,SAAzD,CADV;AAEE,kBAAQ,CAFV;AAGE,uBAAa,GAHf;AAIE,qBAAU,MAJZ;AAKE,iBAAM,MALR;AAME,kBAAQ;AANV;AADF,OADF;AAYD;;;EAhCiCC,sB,UAC3BC,S,GAAY;AACjBN,mBAAiBO,iBAAUC,MADV,E;;AAkCrB;;AAEA,IAAMC,kBAAkB,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,SAAO;AACLX,qBAAiBU,MAAME,GAAN,CAAUC,QAAV,CAAmBb;AAD/B,GAAP;AAGD,CAJD;;kBAMe,yBAAQS,eAAR,EAAyBV,qBAAzB,C","file":"current-position-marker.js","sourcesContent":["import React, { PropTypes } from 'react'\nimport { connect } from 'react-redux'\nimport { FeatureGroup, MapLayer, CircleMarker } from 'react-leaflet'\n\n/* A small circular marker showing the user's current position. Intended\n * primarily for use in mobile mode.\n */\n\nclass CurrentPositionMarker extends MapLayer {\n  static propTypes = {\n    currentPosition: PropTypes.object\n  }\n\n  // TODO: determine why the default MapLayer componentWillUnmount() method throws an error\n  componentWillUnmount () { }\n  componentDidMount () { }\n\n  createLeafletElement () {\n  }\n\n  updateLeafletElement () {\n  }\n\n  render () {\n    const { currentPosition } = this.props\n\n    if (!currentPosition || !currentPosition.coords) return <FeatureGroup />\n\n    return (\n      <FeatureGroup>\n        <CircleMarker\n          center={[currentPosition.coords.latitude, currentPosition.coords.longitude]}\n          radius={3}\n          fillOpacity={0.5}\n          fillColor='#f44'\n          color='#f00'\n          weight={1}\n        />\n      </FeatureGroup>\n    )\n  }\n}\n\n// connect to the redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    currentPosition: state.otp.location.currentPosition\n  }\n}\n\nexport default connect(mapStateToProps)(CurrentPositionMarker)\n"]}