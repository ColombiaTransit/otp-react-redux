{"version":3,"sources":["trip-viewer-overlay.js"],"names":["TripViewerOverlay","nextProps","oldGeometry","props","tripData","geometry","newGeometry","pts","polyline","decode","points","context","map","fitBounds","MapLayer","propTypes","PropTypes","object","viewedTrip","mapStateToProps","state","ownProps","otp","ui","transitIndex","trips","tripId","mapDispatchToProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;AAEA;;;;;;IAEMA,iB;;;;;;;;;;wCAMiB,CAAG;;AAExB;;;;2CACwB,CAAG;;;8CAEAC,S,EAAW;AACpC,UAAMC,cAAc,KAAKC,KAAL,CAAWC,QAAX,IAAuB,KAAKD,KAAL,CAAWC,QAAX,CAAoBC,QAA/D;AACA,UAAMC,cAAcL,UAAUG,QAAV,IAAsBH,UAAUG,QAAV,CAAmBC,QAA7D;AACA,UAAIH,gBAAgBI,WAAhB,IAA+B,CAACA,WAApC,EAAiD;AACjD,UAAMC,MAAMC,mBAASC,MAAT,CAAgBH,YAAYI,MAA5B,CAAZ;AACA,WAAKC,OAAL,CAAaC,GAAb,CAAiBC,SAAjB,CAA2BN,GAA3B;AACD;;;2CAEuB,CAAG;;;2CAEH,CAAG;;;6BAEjB;AAAA,UACAH,QADA,GACa,KAAKD,KADlB,CACAC,QADA;;;AAGR,UAAI,CAACA,QAAD,IAAa,CAACA,SAASC,QAA3B,EAAqC,OAAO,8BAAC,0BAAD,OAAP;;AAErC,UAAME,MAAMC,mBAASC,MAAT,CAAgBL,SAASC,QAAT,CAAkBK,MAAlC,CAAZ;AACA,aACE;AAAC,kCAAD;AAAA;AACE,sCAAC,sBAAD,IAAU,WAAWH,GAArB,EAA0B,QAAQ,CAAlC,EAAqC,OAAM,SAA3C,EAAqD,SAAS,GAA9D;AADF,OADF;AAKD;;;EAlC6BO,sB,UACvBC,S,GAAY;AACjBX,YAAUY,iBAAUC,MADH;AAEjBC,cAAYF,iBAAUC;AAFL,C;;AAoCrB;;AAEA,IAAME,kBAAkB,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,MAAMH,aAAaE,MAAME,GAAN,CAAUC,EAAV,CAAaL,UAAhC;AACA,SAAO;AACLA,0BADK;AAELd,cAAUc,aACNE,MAAME,GAAN,CAAUE,YAAV,CAAuBC,KAAvB,CAA6BP,WAAWQ,MAAxC,CADM,GAEN;AAJC,GAAP;AAMD,CARD;;AAUA,IAAMC,qBAAqB,EAA3B;;kBAGe,yBAAQR,eAAR,EAAyBQ,kBAAzB,EAA6C3B,iBAA7C,C","file":"trip-viewer-overlay.js","sourcesContent":["import React, { PropTypes } from 'react'\nimport { connect } from 'react-redux'\nimport { FeatureGroup, MapLayer, Polyline } from 'react-leaflet'\n\nimport polyline from '@mapbox/polyline'\n\nclass TripViewerOverlay extends MapLayer {\n  static propTypes = {\n    tripData: PropTypes.object,\n    viewedTrip: PropTypes.object\n  }\n\n  componentDidMount () { }\n\n  // TODO: determine why the default MapLayer componentWillUnmount() method throws an error\n  componentWillUnmount () { }\n\n  componentWillReceiveProps (nextProps) {\n    const oldGeometry = this.props.tripData && this.props.tripData.geometry\n    const newGeometry = nextProps.tripData && nextProps.tripData.geometry\n    if (oldGeometry === newGeometry || !newGeometry) return\n    const pts = polyline.decode(newGeometry.points)\n    this.context.map.fitBounds(pts)\n  }\n\n  createLeafletElement () { }\n\n  updateLeafletElement () { }\n\n  render () {\n    const { tripData } = this.props\n\n    if (!tripData || !tripData.geometry) return <FeatureGroup />\n\n    const pts = polyline.decode(tripData.geometry.points)\n    return (\n      <FeatureGroup>\n        <Polyline positions={pts} weight={8} color='#00bfff' opacity={0.6} />\n      </FeatureGroup>\n    )\n  }\n}\n\n// connect to the redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  const viewedTrip = state.otp.ui.viewedTrip\n  return {\n    viewedTrip,\n    tripData: viewedTrip\n      ? state.otp.transitIndex.trips[viewedTrip.tripId]\n      : null\n  }\n}\n\nconst mapDispatchToProps = {\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TripViewerOverlay)\n"]}