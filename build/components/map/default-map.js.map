{"version":3,"sources":["default-map.js"],"names":["MapContainer","styled","div","DefaultMap","e","props","setMapPopupLocationAndGeocode","setMapPopupLocation","location","payload","setLocation","bikeRentalQuery","bikeRentalStations","carRentalQuery","carRentalStations","mapConfig","mapPopupLocation","vehicleRentalQuery","vehicleRentalStations","center","initLat","initLon","popup","contents","onSetLocationFromPopup","lat","lon","baseLayers","maxZoom","onMapClick","onPopupClosed","initZoom","overlays","map","overlayConfig","k","type","Component","mapStateToProps","state","ownProps","otp","overlay","bikeRental","stations","carRental","config","ui","vehicleRental","mapDispatchToProps"],"mappings":"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","sourcesContent":["import BaseMap from '@opentripplanner/base-map'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\n\nimport {\n  bikeRentalQuery,\n  carRentalQuery,\n  vehicleRentalQuery\n} from '../../actions/api'\nimport {\n  setLocation,\n  setMapPopupLocation,\n  setMapPopupLocationAndGeocode\n} from '../../actions/map'\nimport BoundsUpdatingOverlay from './bounds-updating-overlay'\nimport EndpointsOverlay from './connected-endpoints-overlay'\nimport ParkAndRideOverlay from './connected-park-and-ride-overlay'\nimport RouteViewerOverlay from './connected-route-viewer-overlay'\nimport StopViewerOverlay from './connected-stop-viewer-overlay'\nimport StopsOverlay from './connected-stops-overlay'\nimport TransitiveOverlay from './connected-transitive-overlay'\nimport TripViewerOverlay from './connected-trip-viewer-overlay'\nimport VehicleRentalOverlay from './connected-vehicle-rental-overlay'\nimport ElevationPointMarker from './elevation-point-marker'\nimport PointPopup from './point-popup'\nimport TileOverlay from './tile-overlay'\nimport ZipcarOverlay from './zipcar-overlay'\n\nconst MapContainer = styled.div`\n  height: 100%;\n  width: 100%;\n\n  .map {\n    height: 100%;\n    width: 100%;\n  }\n\n  * {\n    box-sizing: unset;\n  }\n`\n\nclass DefaultMap extends Component {\n  onMapClick = (e) => {\n    this.props.setMapPopupLocationAndGeocode(e)\n  }\n\n  onPopupClosed = () => {\n    this.props.setMapPopupLocation({ location: null })\n  }\n\n  onSetLocationFromPopup = (payload) => {\n    const { setLocation, setMapPopupLocation } = this.props\n    setMapPopupLocation({ location: null })\n    setLocation(payload)\n  }\n\n  render () {\n    const {\n      bikeRentalQuery,\n      bikeRentalStations,\n      carRentalQuery,\n      carRentalStations,\n      mapConfig,\n      mapPopupLocation,\n      vehicleRentalQuery,\n      vehicleRentalStations\n    } = this.props\n\n    const center = mapConfig && mapConfig.initLat && mapConfig.initLon\n      ? [mapConfig.initLat, mapConfig.initLon]\n      : null\n\n    const popup = mapPopupLocation && {\n      contents: (\n        <PointPopup\n          mapPopupLocation={mapPopupLocation}\n          onSetLocationFromPopup={this.onSetLocationFromPopup}\n        />\n      ),\n      location: [mapPopupLocation.lat, mapPopupLocation.lon]\n    }\n\n    return (\n      <MapContainer>\n        <BaseMap\n          baseLayers={mapConfig.baseLayers}\n          center={center}\n          maxZoom={mapConfig.maxZoom}\n          onClick={this.onMapClick}\n          popup={popup}\n          onPopupClosed={this.onPopupClosed}\n          zoom={mapConfig.initZoom || 13}\n        >\n          {/* The default overlays */}\n          <BoundsUpdatingOverlay />\n          <EndpointsOverlay />\n          <RouteViewerOverlay />\n          <StopViewerOverlay />\n          <TransitiveOverlay />\n          <TripViewerOverlay />\n          <ElevationPointMarker />\n\n          {/* The configurable overlays */}\n          {mapConfig.overlays && mapConfig.overlays.map((overlayConfig, k) => {\n            switch (overlayConfig.type) {\n              case 'bike-rental': return (\n                <VehicleRentalOverlay\n                  key={k}\n                  {...overlayConfig}\n                  refreshVehicles={bikeRentalQuery}\n                  stations={bikeRentalStations}\n                />\n              )\n              case 'car-rental': return (\n                <VehicleRentalOverlay\n                  key={k}\n                  {...overlayConfig}\n                  refreshVehicles={carRentalQuery}\n                  stations={carRentalStations}\n                />\n              )\n              case 'park-and-ride':\n                return <ParkAndRideOverlay key={k} {...overlayConfig} />\n              case 'stops': return <StopsOverlay key={k} {...overlayConfig} />\n              case 'tile': return <TileOverlay key={k} {...overlayConfig} />\n              case 'micromobility-rental': return (\n                <VehicleRentalOverlay\n                  key={k}\n                  {...overlayConfig}\n                  refreshVehicles={vehicleRentalQuery}\n                  stations={vehicleRentalStations}\n                />\n              )\n              case 'zipcar': return <ZipcarOverlay key={k} {...overlayConfig} />\n              default: return null\n            }\n          })}\n        </BaseMap>\n      </MapContainer>\n    )\n  }\n}\n\n// connect to the redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    bikeRentalStations: state.otp.overlay.bikeRental.stations,\n    carRentalStations: state.otp.overlay.carRental.stations,\n    mapConfig: state.otp.config.map,\n    mapPopupLocation: state.otp.ui.mapPopupLocation,\n    vehicleRentalStations: state.otp.overlay.vehicleRental.stations\n  }\n}\n\nconst mapDispatchToProps = {\n  bikeRentalQuery,\n  carRentalQuery,\n  setLocation,\n  setMapPopupLocation,\n  setMapPopupLocationAndGeocode,\n  vehicleRentalQuery\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DefaultMap)\n"]}