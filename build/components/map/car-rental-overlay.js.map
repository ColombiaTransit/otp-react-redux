{"version":3,"sources":["car-rental-overlay.js"],"names":["makeIcon","company","iconSize","popupAnchor","html","className","carRentalNetworkIconLookup","CAR2GO","default","REACHNOW","CarRentalOverlay","props","refreshVehicles","params","_refreshTimer","setInterval","clearInterval","visible","_startRefreshing","_stopRefreshing","nextProps","stations","length","bulletIconStyle","color","fontSize","width","map","station","stationName","networks","join","id","y","x","address","split","context","lat","lon","name","setLocation","Component","propTypes","queryMode","PropTypes","string","vehicles","array","func","mapStateToProps","state","ownProps","companyData","otp","overlay","carRental","mapDispatchToProps","carRentalQuery"],"mappings":"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","file":"car-rental-overlay.js","sourcesContent":["import React, { Component, PropTypes } from 'react'\nimport { connect } from 'react-redux'\nimport { FeatureGroup, Marker, Popup } from 'react-leaflet'\nimport { divIcon } from 'leaflet'\n\nimport SetFromToButtons from './set-from-to'\nimport { carRentalQuery } from '../../actions/api'\nimport { setLocation } from '../../actions/map'\n\nfunction makeIcon (company) {\n  return divIcon({\n    iconSize: [11, 16],\n    popupAnchor: [0, -6],\n    html: '<i />',\n    className: `fa fa-map-marker car-rental-icon ${company}`\n  })\n}\n\nconst carRentalNetworkIconLookup = {\n  CAR2GO: makeIcon('car2go'),\n  default: makeIcon(''),\n  REACHNOW: makeIcon('reachnow')\n}\n\nclass CarRentalOverlay extends Component {\n  static propTypes = {\n    queryMode: PropTypes.string,\n    vehicles: PropTypes.array,\n    refreshVehicles: PropTypes.func\n  }\n\n  _startRefreshing () {\n    const {company, refreshVehicles} = this.props\n    const params = { company }\n\n    // ititial station retrieval\n    refreshVehicles(params)\n\n    // set up timer to refresh stations periodically\n    this._refreshTimer = setInterval(() => {\n      refreshVehicles(params)\n    }, 30000) // defaults to every 30 sec. TODO: make this configurable?*/\n  }\n\n  _stopRefreshing () {\n    if (this._refreshTimer) clearInterval(this._refreshTimer)\n  }\n\n  componentDidMount () {\n    if (this.props.visible) this._startRefreshing()\n  }\n\n  componentWillUnmount () {\n    this._stopRefreshing()\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (!this.props.visible && nextProps.visible) {\n      this._startRefreshing()\n    } else if (this.props.visible && !nextProps.visible) {\n      this._stopRefreshing()\n    }\n  }\n\n  render () {\n    const { stations } = this.props\n\n    if (!stations || stations.length === 0) return <FeatureGroup />\n\n    const bulletIconStyle = {\n      color: 'gray',\n      fontSize: 12,\n      width: 10\n    }\n\n    return (\n      <FeatureGroup>\n        {stations.map((station) => {\n          const stationName = `${station.networks.join('/')} ${station.id}`\n          return (\n            <Marker\n              icon={carRentalNetworkIconLookup[station.networks] || carRentalNetworkIconLookup.default}\n              key={station.id}\n              position={[station.y, station.x]}\n            >\n              <Popup>\n                <div className='map-overlay-popup'>\n                  {/* Popup title */}\n                  <div className='popup-title'>\n                    {stationName}\n                  </div>\n\n                  {/* Car address bullet */}\n                  {station.address && (\n                    <div className='popup-row'>\n                      <i className='fa fa-map-marker' style={bulletIconStyle} /> {station.address.split(',')[0]}\n                    </div>\n                  )}\n\n                  {/* Set as from/to toolbar */}\n                  <div className='popup-row'>\n                    <SetFromToButtons\n                      map={this.context.map}\n                      location={{\n                        lat: station.y,\n                        lon: station.x,\n                        name: stationName\n                      }}\n                      setLocation={this.props.setLocation}\n                    />\n                  </div>\n                </div>\n              </Popup>\n            </Marker>\n          )\n        })}\n      </FeatureGroup>\n    )\n  }\n}\n\n// connect to the redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  const companyData = state.otp.overlay.carRental[ownProps.company]\n  const stations = companyData ? companyData.stations : []\n  return {\n    stations\n  }\n}\n\nconst mapDispatchToProps = {\n  refreshVehicles: carRentalQuery,\n  setLocation\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CarRentalOverlay)\n"]}